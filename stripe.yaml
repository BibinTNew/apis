basePath: /elements/api-v2
paths:
  /balances:
    get:
      operationId: getBalances
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            items:
              $ref: '#/definitions/balancesListObject'
            type: array
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Retrieve current account balance
      tags:
      - balances
  /bulk/query:
    post:
      operationId: createBulkQuery
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The Url to send the notification to when the Job is completed
        in: header
        name: Elements-Async-Callback-Url
        required: false
        type: string
      - description: The CEQL query. When this parameter is omitted, all objects of the given type are returned via the bulk job. Endpoint limiters may still apply.
        in: query
        name: q
        required: false
        type: string
      - description: The last time this query was run. This is optional. You can also have this parameter in the query and leave this blank - optional eg. '2014-10-06T13:22:17-08:00'
        in: query
        name: lastRunDate
        required: false
        type: string
      - description: The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'
        in: query
        name: from
        required: false
        type: string
      - description: The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'
        in: query
        name: to
        required: false
        type: string
      - description: If this id is supplied the previous job will be continued from where it left off and continue to get all records to the time the new job was started. If this value is passed in - the query parameter is ignored
        in: query
        name: continueFromJobId
        required: false
        type: number
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/BulkQuery'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: <span class='betaAPI'>beta</span> Create an asynchronous bulk query job.
      tags:
      - bulk
  /bulk/{id}/cancel:
    put:
      operationId: replaceBulkCancel
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The ID of the bulk job to cancel.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/BulkStatus'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: <span class='betaAPI'>beta</span> Cancel an asynchronous bulk query job.
      tags:
      - bulk
  /bulk/{id}/errors:
    get:
      operationId: getBulkErrors
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The ID of the bulk job to retrieve its errors.
        in: path
        name: id
        required: true
        type: string
      - description: The start page for pagination, which defaults to 1 if not supplied
        format: int64
        in: query
        name: page
        required: false
        type: integer
      - description: The page size for pagination, which defaults to 200 if not supplied
        format: int64
        in: query
        name: pageSize
        required: false
        type: integer
      - description: The Next page to get from set of bulk results
        in: query
        name: nextPage
        required: false
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            items:
              type: string
            type: array
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: <span class='betaAPI'>beta</span> Retrieve the errors of a bulk job.
      tags:
      - bulk
  /bulk/{id}/status:
    get:
      operationId: getBulkStatus
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The ID of the bulk job to retrieve its status.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/BulkStatus'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Retrieve the status of a bulk job.
      tags:
      - bulk
  /bulk/{id}/{objectName}:
    get:
      operationId: getBulkByObjectName
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The ID of the bulk job
        in: path
        name: id
        required: true
        type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        type: string
      produces:
      - text/csv
      - application/json
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            type: file
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: <span class='betaAPI'>beta</span> Retrieve the results of an asynchronous bulk query.
      tags:
      - bulk
  /bulk/{objectName}:
    post:
      consumes:
      - multipart/form-data
      operationId: createBulkByObjectName
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The Url to send the notification to when the Job is completed
        in: header
        name: Elements-Async-Callback-Url
        required: false
        type: string
      - description: The name of the object for which data needs to be uploaded.
        in: path
        name: objectName
        required: true
        type: string
      - description: 'Optional JSON MetaData that contains path or format, ex: {"path"
          : <path for the sub resource>, "format": <json/csv>}. path - is passed to
          the endpoint for bulk loading the data into a nested object. Optional JSON
          Metadata that contains identifierFieldName, action, listId or campaignId.
          The identifierField name is used for upserts and the optional fields like
          listId or campaignId. Example: {"listId":"1014","action":"upsert"}. If the
          Upload format is JSON pass metadata as {"format":"json"}.'
        in: formData
        name: metaData
        required: false
        type: string
      - description: The file of objects to bulk load. If the JSON file upload, each JSON record should be in a single line
        in: formData
        name: file
        type: file
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/BulkUploadResponse'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: <span class='betaAPI'>beta</span> Upload a file of objects to be bulk uploaded to the provider.
      tags:
      - bulk
  /charges:
    get:
      operationId: getCharges
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The number of resources to return in a given page. Defaults to 200 if not provided
        in: query
        name: pageSize
        required: false
        type: string
      - description: 'The next page cursor, taken from the response header: `elements-next-page-token`'
        in: query
        name: nextPage
        required: false
        type: string
      - description: 'The CEQL search expression. The following operators are supported:
          "=", "<", ">",  "AND" and the supported search fields are: customer, created
          and transfer_group. To search for charges created after 2017-05-13T16:29:05Z,
          enter  <i> created > ''1463156945'' </i>'
        in: query
        name: where
        required: false
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            items:
              $ref: '#/definitions/chargesListObject'
            type: array
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Search for charges
      tags:
      - charges
    post:
      operationId: createCharge
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The charge object
        in: body
        name: charges
        required: true
        schema:
          $ref: '#/definitions/chargesPost'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/chargesPostResp'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Create a charge
      tags:
      - charges
  /charges/{id}:
    get:
      operationId: getChargeById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The charge ID
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/charges'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Retrieve a charge
      tags:
      - charges
    patch:
      operationId: updateChargeById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The charge ID
        in: path
        name: id
        required: true
        type: string
      - description: The charge object
        in: body
        name: charges
        required: true
        schema:
          $ref: '#/definitions/chargesPatch'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/chargesPatchResp'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Update a charge
      tags:
      - charges
  /charges/{id}/capture:
    post:
      operationId: createChargeCapture
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The charge ID
        in: path
        name: id
        required: true
        type: string
      - description: The capture object
        in: body
        name: capture
        required: false
        schema:
          $ref: '#/definitions/chargesCapture'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/chargesCaptureResp'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Create a capture for a charge
      tags:
      - charges
  /charges/{id}/refunds:
    post:
      operationId: createChargeRefund
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The charge ID
        in: path
        name: id
        required: true
        type: string
      - description: The refund object
        in: body
        name: refunds
        required: true
        schema:
          $ref: '#/definitions/chargesRefundsReq'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/chargesRefundsResponse'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Create a refund for a charge
      tags:
      - charges
  /customers:
    get:
      operationId: getCustomers
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: 'The CEQL search expression. The following operators are supported:
          "=", "<", ">",  "AND" and the supported search fields are: field created,
          ending_before, and start_before. To search for customers created after 2017-05-13T16:29:05Z,
          enter  <i> created > ''1463156945'' </i>'
        in: query
        name: where
        required: false
        type: string
      - description: The number of resources to return in a given page. Defaults to 200 if not provided
        in: query
        name: pageSize
        required: false
        type: string
      - description: 'The next page cursor, taken from the response header: `elements-next-page-token`'
        in: query
        name: nextPage
        required: false
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            items:
              $ref: '#/definitions/customersListObject'
            type: array
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Search for a customer
      tags:
      - customers
    post:
      operationId: createCustomer
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The customer object
        in: body
        name: customers
        required: true
        schema:
          $ref: '#/definitions/customersPost'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/customersPostResp'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Create a customer
      tags:
      - customers
  /customers/{customerId}:
    delete:
      operationId: deleteCustomerByCustomerId
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The customer ID
        in: path
        name: customerId
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Delete a customer
      tags:
      - customers
    get:
      operationId: getCustomerByCustomerId
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The customer ID
        in: path
        name: customerId
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/customers'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Retrieve a customer
      tags:
      - customers
    patch:
      operationId: updateCustomerByCustomerId
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The customer ID
        in: path
        name: customerId
        required: true
        type: string
      - description: The customer object
        in: body
        name: customers
        required: true
        schema:
          $ref: '#/definitions/customersPatch'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/customersPatchResp'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Update a customer
      tags:
      - customers
  /customers/{customerId}/payment-methods:
    get:
      operationId: getCustomersPaymentMethods
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The customer ID
        in: path
        name: customerId
        required: true
        type: string
      - description: The cursor ID
        in: query
        name: nextPage
        required: false
        type: string
      - description: The number of resources to return in a given page. Defaults to 10 if not provided
        in: query
        name: pageSize
        required: false
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            items:
              $ref: '#/definitions/customersPaymentMethods'
            type: array
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Search for payment methods for a customer
      tags:
      - customers
    post:
      operationId: createCustomerPaymentMethod
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The customer ID
        in: path
        name: customerId
        required: true
        type: string
      - description: The payment-method object
        in: body
        name: paymentMethod
        required: true
        schema:
          $ref: '#/definitions/customersPaymentMethodsPost'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/customersPaymentMethods'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Create a payment method for a customer
      tags:
      - customers
  /customers/{customerId}/payment-methods/{paymentId}:
    delete:
      operationId: deleteCustomersPaymentMethodByPaymentId
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The customer ID
        in: path
        name: customerId
        required: true
        type: string
      - description: The payment-method ID
        in: path
        name: paymentId
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Delete a payment method for a customer
      tags:
      - customers
    get:
      operationId: getCustomersPaymentMethodByPaymentId
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The customer ID
        in: path
        name: customerId
        required: true
        type: string
      - description: The payment-method ID
        in: path
        name: paymentId
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/customersPaymentMethods'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Retrieve a payment method for a customer
      tags:
      - customers
    patch:
      operationId: updateCustomersPaymentMethodByPaymentId
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The customer ID
        in: path
        name: customerId
        required: true
        type: string
      - description: The payment-method ID
        in: path
        name: paymentId
        required: true
        type: string
      - description: The payment-method object
        in: body
        name: payment-method
        required: true
        schema:
          $ref: '#/definitions/customersPaymentMethodsPatch'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/customersPaymentMethods'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Update a payment method for a customer
      tags:
      - customers
  /customers/{customerId}/subscriptions:
    get:
      operationId: getCustomersSubscriptions
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The customer ID
        in: path
        name: customerId
        required: true
        type: string
      - description: The number of resources to return in a given page. Defaults to 200 if not provided
        in: query
        name: pageSize
        required: false
        type: string
      - description: The cursor ID
        in: query
        name: nextPage
        required: false
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            items:
              $ref: '#/definitions/customersSubscriptions'
            type: array
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Search for subscriptions for a customer
      tags:
      - customers
    post:
      operationId: createCustomerSubscription
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The customer ID
        in: path
        name: customerId
        required: true
        type: string
      - description: The subscription object
        in: body
        name: subscriptions
        required: true
        schema:
          $ref: '#/definitions/customersSubscriptionsPostReq'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/customersSubscriptions'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Create a subscription for a customer
      tags:
      - customers
  /customers/{customerId}/subscriptions/{subscriptionId}:
    delete:
      operationId: deleteCustomersSubscriptionBySubscriptionId
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The customer ID
        in: path
        name: customerId
        required: true
        type: string
      - description: The subscription ID
        in: path
        name: subscriptionId
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Delete a subscription for a customer
      tags:
      - customers
    get:
      operationId: getCustomersSubscriptionBySubscriptionId
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The customer ID
        in: path
        name: customerId
        required: true
        type: string
      - description: The subscription ID
        in: path
        name: subscriptionId
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/customersSubscriptions'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Retrieve a subscription for a customer
      tags:
      - customers
    patch:
      operationId: updateCustomersSubscriptionBySubscriptionId
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The customer ID
        in: path
        name: customerId
        required: true
        type: string
      - description: The subscription ID
        in: path
        name: subscriptionId
        required: true
        type: string
      - description: The subscription object
        in: body
        name: subscriptions
        required: true
        schema:
          $ref: '#/definitions/customersSubscriptionsPatchReq'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/customersSubscriptions'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Update a subscription for a customer
      tags:
      - customers
  /objects:
    get:
      operationId: getObjects
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            items:
              type: string
            type: array
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Get a list of all the available objects.
      tags:
      - objects
  /objects/{objectName}/docs:
    get:
      operationId: getObjectsObjectNameDocs
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        type: string
      - description: Include discovery metadata in definitions
        in: query
        name: discovery
        required: false
        type: boolean
      - description: Optionally resolve swagger references for an inline object definition
        in: query
        name: resolveReferences
        required: false
        type: boolean
      - description: Include only OpenAPI / Swagger properties in definitions
        in: query
        name: basic
        required: false
        type: boolean
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/swaggerDocs'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Get swagger docs for an object.
      tags:
      - objects
  /objects/{objectName}/metadata:
    get:
      operationId: getObjectsObjectNameMetadata
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/objectsMetadata'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Get a list of all the field for an object.
      tags:
      - objects
  /orders:
    get:
      operationId: getOrders
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: 'The CEQL search expression.  The following operators are supported:
          "=", "<", ">", and "AND". For e.g. created > ''1463156945'''
        in: query
        name: where
        required: false
        type: string
      - description: The number of resources to return in a given page. Defaults to 200 if not provided
        in: query
        name: pageSize
        required: false
        type: string
      - description: 'The next page cursor, taken from the response header: `elements-next-page-token`'
        in: query
        name: nextPage
        required: false
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            items:
              $ref: '#/definitions/ordersListObject'
            type: array
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Search for  orders
      tags:
      - orders
    post:
      operationId: createOrder
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The order object
        in: body
        name: orders
        required: true
        schema:
          $ref: '#/definitions/ordersPost'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/ordersPostResponse'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Create an  order
      tags:
      - orders
  /orders/{id}:
    get:
      operationId: getOrderById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The order ID
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/orders'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Retrieve an  order
      tags:
      - orders
    patch:
      operationId: updateOrderById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The order ID
        in: path
        name: id
        required: true
        type: string
      - description: The order object
        in: body
        name: orders
        required: true
        schema:
          $ref: '#/definitions/ordersPatch'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/ordersPatchResponse'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Update an  order
      tags:
      - orders
  /ping:
    get:
      operationId: getPing
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/Pong'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Ping the Element to confirm that the Hub Element has a heartbeat.  If the Element does not have a heartbeat, an error message will be returned.
      tags:
      - ping
  /plans:
    get:
      operationId: getPlans
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: 'The CEQL search expression.  The following operators are supported:
          "=", "<", ">", and "AND". For e.g. created > ''1463156945'''
        in: query
        name: where
        required: false
        type: string
      - description: The number of resources to return in a given page. Defaults to 200 if not provided
        in: query
        name: pageSize
        required: false
        type: string
      - description: 'The next page cursor, taken from the response header: `elements-next-page-token`'
        in: query
        name: nextPage
        required: false
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            items:
              $ref: '#/definitions/plansListObject'
            type: array
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Search for resource plans
      tags:
      - plans
    post:
      operationId: createPlan
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The plan object
        in: body
        name: plans
        required: true
        schema:
          $ref: '#/definitions/plansPost'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/plansPostResp'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Create a plan
      tags:
      - plans
  /plans/{id}:
    delete:
      operationId: deletePlanById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The plan ID
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Delete a plan
      tags:
      - plans
    get:
      operationId: getPlanById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The plan ID
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/plansObject'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Retrieve a plan
      tags:
      - plans
    patch:
      operationId: updatePlanById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The plan ID
        in: path
        name: id
        required: true
        type: string
      - description: The plan object
        in: body
        name: plans
        required: true
        schema:
          $ref: '#/definitions/plansPatch'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/plansPatchResp'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Update a plan
      tags:
      - plans
  /products:
    get:
      operationId: getProducts
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: 'The CEQL search expression.  The following operators are supported:
          "=", "<", ">", and "AND". For e.g. active = ''true'''
        in: query
        name: where
        required: false
        type: string
      - description: 'The next page cursor, taken from the response header: `elements-next-page-token`'
        in: query
        name: nextPage
        required: false
        type: string
      - description: The number of resources to return in a given page. Defaults to 200 if not provided
        in: query
        name: pageSize
        required: false
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            items:
              $ref: '#/definitions/productsListObject'
            type: array
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Search for products
      tags:
      - products
    post:
      operationId: createProduct
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The product object
        in: body
        name: products
        required: true
        schema:
          $ref: '#/definitions/productsPost'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/productsPostResp'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Create a product
      tags:
      - products
  /products/{id}:
    delete:
      operationId: deleteProductById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The product ID
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Delete a product
      tags:
      - products
    get:
      operationId: getProductById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The product ID
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/products'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Retrieve a product
      tags:
      - products
    patch:
      operationId: updateProductById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The product ID
        in: path
        name: id
        required: true
        type: string
      - description: The product object
        in: body
        name: products
        required: true
        schema:
          $ref: '#/definitions/productsPatch'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/productsPatchResp'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Update a product
      tags:
      - products
  /refunds:
    get:
      operationId: getRefunds
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: 'The next page cursor, taken from the response header: `elements-next-page-token`'
        in: query
        name: nextPage
        required: false
        type: string
      - description: The number of resources to return in a given page. Defaults to 200 if not provided
        in: query
        name: pageSize
        required: false
        type: string
      - description: 'The CEQL search expression.  The following operators are supported:
          "=", "<", ">", and "AND". For e.g. created > ''1463156945'''
        in: query
        name: where
        required: false
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            items:
              $ref: '#/definitions/refundsListObject'
            type: array
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Search for refunds
      tags:
      - refunds
  /refunds/{id}:
    get:
      operationId: getRefundById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The refund ID
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/refunds'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Retrieve a refund
      tags:
      - refunds
    patch:
      operationId: updateRefundById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The refund ID
        in: path
        name: id
        required: true
        type: string
      - description: The refund object
        in: body
        name: refunds
        required: true
        schema:
          $ref: '#/definitions/refundsPatch'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/refundsPatchResp'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Update a refund
      tags:
      - refunds
  /subscriptions:
    get:
      operationId: getSubscriptions
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: 'The next page cursor, taken from the response header: `elements-next-page-token`'
        in: query
        name: nextPage
        required: false
        type: string
      - description: 'The CEQL search expression.  The following operators are supported:
          "=", "<", ">", and "AND". For e.g. created > ''1463156945'''
        in: query
        name: where
        required: false
        type: string
      - description: The number of resources to return in a given page. Defaults to 200 if not provided
        in: query
        name: pageSize
        required: false
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            items:
              $ref: '#/definitions/subscriptionsListObject'
            type: array
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Search for subscriptions
      tags:
      - subscriptions
    post:
      operationId: createSubscription
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The subscription body
        in: body
        name: subscriptions
        required: true
        schema:
          $ref: '#/definitions/subscriptionPostModel'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/subscriptionPostResp'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Create a subscription
      tags:
      - subscriptions
  /subscriptions/{id}:
    delete:
      operationId: deleteSubscriptionById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The subscription ID
        in: path
        name: id
        required: true
        type: string
      - description: If you set the at-period-end parameter to true, the subscription will remain active until the end of the period, at which point it will be canceled and not renewed. Otherwise, with the default false value, the subscription is terminated immediately.
        in: query
        name: at-period-end
        required: false
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Delete a subscription
      tags:
      - subscriptions
    get:
      operationId: getSubscriptionById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The subscription ID
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/subscriptions'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Retrieve a subscription
      tags:
      - subscriptions
    patch:
      operationId: updateSubscriptionById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The subscription ID
        in: path
        name: id
        required: true
        type: string
      - description: The subscription body
        in: body
        name: subscriptions
        required: true
        schema:
          $ref: '#/definitions/subscriptionPatch'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/subscriptionPatchResp'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Update a subscription
      tags:
      - subscriptions
  /tokens:
    post:
      operationId: createToken
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The token object
        in: body
        name: tokens
        required: true
        schema:
          $ref: '#/definitions/tokensPost'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/tokensPostResponse'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Create a token
      tags:
      - tokens
  /tokens/{id}:
    get:
      operationId: getTokenById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The token ID
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/tokens'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Retrieve a token
      tags:
      - tokens
  /transactions:
    get:
      operationId: getTransactions
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: 'The CEQL search expression. The following operators are supported:
          "=", "<", ">", and "AND". For e.g. created > ''1463156945'''
        in: query
        name: where
        required: false
        type: string
      - description: 'The next page cursor, taken from the response header: `elements-next-page-token`'
        in: query
        name: nextPage
        required: false
        type: string
      - description: The number of resources to return in a given page. Defaults to 200 if not provided
        in: query
        name: pageSize
        required: false
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            items:
              $ref: '#/definitions/transactions'
            type: array
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Search for transactions
      tags:
      - transactions
  /transactions/{id}:
    get:
      operationId: getTransactionById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The transaction ID
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/transactions'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Retrieve a transaction
      tags:
      - transactions
  /transfers:
    get:
      operationId: getTransfers
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: 'The CEQL search expression. The following operators are supported:
          "=", "<", ">", and "AND". For e.g. created > ''1463156945'''
        in: query
        name: where
        required: false
        type: string
      - description: 'The next page cursor, taken from the response header: `elements-next-page-token`'
        in: query
        name: nextPage
        required: false
        type: string
      - description: The number of resources to return in a given page. Defaults to 200 if not provided
        in: query
        name: pageSize
        required: false
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            items:
              $ref: '#/definitions/transfersListObject'
            type: array
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Search for transfers
      tags:
      - transfers
    post:
      operationId: createTransfer
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The transfer object
        in: body
        name: transfers
        required: true
        schema:
          $ref: '#/definitions/transfersPost'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/transfersPostResp'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Create a transfer
      tags:
      - transfers
  /transfers/{id}:
    get:
      operationId: getTransferById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The transfer ID
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/transfers'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Retrieve a transfer
      tags:
      - transfers
    patch:
      operationId: updateTransferById
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The transfer ID
        in: path
        name: id
        required: true
        type: string
      - description: The transfer object
        in: body
        name: transfers
        required: true
        schema:
          $ref: '#/definitions/transfersPatch'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/transfersPatchResp'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Update a transfer
      tags:
      - transfers
  /{objectName}:
    get:
      operationId: getByObjectName
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        type: string
      - description: The CEQL search expression.
        in: query
        name: where
        required: false
        type: string
      - description: The page number. Defaults to 1 if not provided.
        format: int64
        in: query
        name: page
        required: false
        type: integer
      - description: The page size. Defaults to 200 if not provided. Maximum of 5000.
        format: int64
        in: query
        name: pageSize
        required: false
        type: integer
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            items:
              $ref: '#/definitions/Object'
            type: array
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Search for {objectName}
      tags:
      - objectName
    post:
      operationId: createByObjectName
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        type: string
      - description: The {objectName}
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/Object'
      responses:
        '200':
          description: OK - Everything worked as expected
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Create an {objectName}
      tags:
      - objectName
  /{objectName}/{objectId}:
    delete:
      operationId: deleteObjectNameByObjectId
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        type: string
      - description: The {objectName} ID
        in: path
        name: objectId
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Delete an {objectName}
      tags:
      - objectName
    get:
      operationId: getObjectNameByObjectId
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        type: string
      - description: The {objectName} ID
        in: path
        name: objectId
        required: true
        type: string
      produces:
      - application/json
      - application/pdf
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/Object'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Retrieve an {objectName}
      tags:
      - objectName
    patch:
      operationId: updateObjectNameByObjectId
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        type: string
      - description: The {objectName} ID
        in: path
        name: objectId
        required: true
        type: string
      - description: The {objectName}
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/Object'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/Object'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Update an {objectName}
      tags:
      - objectName
    put:
      operationId: replaceObjectNameByObjectId
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        type: string
      - description: The {objectName} ID
        in: path
        name: objectId
        required: true
        type: string
      - description: The {objectName}
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/Object'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/Object'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the 'Accept' header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Update an {objectName}
      tags:
      - objectName
  /{objectName}/{objectId}/{childObjectName}:
    get:
      operationId: getObjectNameByChildObjectName
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        type: string
      - description: The {objectName} ID
        in: path
        name: objectId
        required: true
        type: string
      - description: The name of the childObjectName
        in: path
        name: childObjectName
        required: true
        type: string
      - description: The CEQL search expression.
        in: query
        name: where
        required: false
        type: string
      - description: The page number. Defaults to 1 if not provided.
        format: int64
        in: query
        name: page
        required: false
        type: integer
      - description: The page size. Defaults to 200 if not provided. Maximum of 5000.
        format: int64
        in: query
        name: pageSize
        required: false
        type: integer
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            items:
              $ref: '#/definitions/Object'
            type: array
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the &quot;Accept&quot; header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Search for {childObjectName}
      tags:
      - objectName
    post:
      operationId: createObjectNameByChildObjectName
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        type: string
      - description: The {objectName} ID
        in: path
        name: objectId
        required: true
        type: string
      - description: The name of the object
        in: path
        name: childObjectName
        required: true
        type: string
      - description: The {childObjectName}
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/Object'
      responses:
        '200':
          description: OK - Everything worked as expected
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the &quot;Accept&quot; header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Create an {childObjectName}
      tags:
      - objectName
  /{objectName}/{objectId}/{childObjectName}/{childObjectId}:
    delete:
      operationId: deleteObjectNameByChildObjectId
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        type: string
      - description: The name of the childObjectName
        in: path
        name: childObjectName
        required: true
        type: string
      - description: The {objectName} ID
        in: path
        name: objectId
        required: true
        type: string
      - description: The {childObjectName} ID
        in: path
        name: childObjectId
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the &quot;Accept&quot; header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Delete an {childObjectName}
      tags:
      - objectName
    get:
      operationId: getObjectNameByChildObjectId
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        type: string
      - description: The name of the childObjectName
        in: path
        name: childObjectName
        required: true
        type: string
      - description: The {objectName} ID
        in: path
        name: objectId
        required: true
        type: string
      - description: The {childObjectName} ID
        in: path
        name: childObjectId
        required: true
        type: string
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/Object'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the &quot;Accept&quot; header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Retrieve an {childObjectName}
      tags:
      - objectName
    patch:
      operationId: updateObjectNameByChildObjectId
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        type: string
      - description: The name of the childObjectName
        in: path
        name: childObjectName
        required: true
        type: string
      - description: The {objectName} ID
        in: path
        name: objectId
        required: true
        type: string
      - description: The {childObjectName} ID
        in: path
        name: childObjectId
        required: true
        type: string
      - description: The {objectName}
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/Object'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/Object'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the &quot;Accept&quot; header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Update an {childObjectName}
      tags:
      - objectName
    put:
      operationId: replaceObjectNameByChildObjectId
      parameters:
      - description: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
        in: header
        name: Authorization
        required: true
        type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        type: string
      - description: The name of the childObjectName
        in: path
        name: childObjectName
        required: true
        type: string
      - description: The {objectName} ID
        in: path
        name: objectId
        required: true
        type: string
      - description: The {childObjectName} ID
        in: path
        name: childObjectId
        required: true
        type: string
      - description: The {objectName}
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/Object'
      responses:
        '200':
          description: OK - Everything worked as expected
          schema:
            $ref: '#/definitions/Object'
        '400':
          description: Bad Request - Often due to a missing request parameter
        '401':
          description: Unauthorized - An invalid element token, user secret and/or org secret provided
        '403':
          description: Forbidden - Access to the resource by the provider is forbidden
        '404':
          description: Not found - The requested resource is not found
        '405':
          description: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
        '406':
          description: Not acceptable - The response content type does not match the &quot;Accept&quot; header value
        '409':
          description: Conflict - If a resource being created already exists
        '415':
          description: Unsupported media type - The server cannot handle the requested Content-Type
        '500':
          description: Server error - Something went wrong on the Cloud Elements server
        '502':
          description: Provider server error - Something went wrong on the Provider or Endpoint's server
      summary: Update an {childObjectName}
      tags:
      - objectName
host: hostname
x-element-swagger-version: 1.0.0
schemes:
- https
definitions:
  BulkQuery:
    description: BulkLoad response of bulk download.
    properties:
      id:
        description: Id of the bulk job
        type: number
      status:
        description: Status of the bulk job
        type: string
    type: object
  BulkStatus:
    description: Status of the bulk upload.
    properties:
      batchId:
        description: Contact/Leads loaded
        type: number
      message:
        type: string
      numOfLeadsProcessed:
        description: Contact/Leads loaded
        type: number
      numOfRowsFailed:
        description: Failed count
        type: number
      numOfRowsWithWarning:
        description: Contact/Leads that had warnings
        type: number
      status:
        description: Status of the bulk job
        type: string
    type: object
  BulkUploadResponse:
    description: BulkLoad response of bulk download.
    properties:
      id:
        description: Id of the bulk job
        type: string
      instanceId:
        description: Instance Id of the bulk job
        format: int64
        type: integer
      status:
        description: Status of the bulk job
        type: string
    type: object
  Object:
    description: Fields for the object. There will be fields associated with an Object, which are not all described here.
    properties:
      objectField:
        type: string
    type: object
  Pong:
    properties:
      dateTime:
        format: date-time
        type: string
      endpoint:
        type: string
    type: object
  availableBalResp:
    properties:
      amount:
        format: int32
        type: integer
        x-samplevalue: 18940461
      currency:
        type: string
        x-samplevalue: usd
      source_types:
        $ref: '#/definitions/sourceTypesBalResp'
    title: availableBalResp
    type: object
    x-has-customfields: false
  balancesListObject:
    properties:
      available:
        items:
          $ref: '#/definitions/availableBalResp'
        type: array
      connect_reserved:
        items:
          $ref: '#/definitions/connect_reservedBalResp'
        type: array
      livemode:
        type: boolean
        x-samplevalue: false
      object:
        type: string
        x-samplevalue: balance
      pending:
        items:
          $ref: '#/definitions/pendingBalResp'
        type: array
    title: balancesListObject
    type: object
    x-has-customfields: false
  chargeDestination:
    properties:
      account:
        description: ID of an existing, connected Stripe account.
        type: string
        x-samplevalue: acct_1C60bWAaQjfDD77K
      amount:
        description: The amount to transfer to the destination account without creating an Application Fee object
        format: int32
        type: integer
    type: object
  charges:
    properties:
      amount:
        description: A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ?100, a zero-decimal currency) representing how much to charge. The minimum amount is $0.50 US or [equivalent in charge currency](https://support.stripe.com/questions/what-is-the-minimum-amount-i-can-charge-with-stripe).
        format: int32
        type: integer
        x-samplevalue: 150
        x-sub-format: Money
      amount_refunded:
        description: Amount in cents refunded (can be less than the amount attribute on the charge if a partial refund was issued).
        format: int32
        type: integer
        x-samplevalue: 0
        x-sub-format: Money
      application:
        description: 'Unique identifier for the object OR The name of the application
          OR String representing the object''s type. Objects of the same type share
          the same value. ID of the Connect application that created the charge. '
        type: string
        x-nullable: true
        x-readOnly: true
      application_fee:
        description: The application fee (if any) for the charge.
        type: string
        x-nullable: true
        x-samplevalue: fee_1C61HTAaQjfDD77Kk7bryqtz
      balance_transaction:
        description: ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).
        type: string
        x-nullable: true
        x-reference-objectname: balance
        x-samplevalue: txn_1C61HTGdZbyQGmEehaboES1V
      captured:
        default: true
        description: If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.
        type: boolean
        x-samplevalue: true
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1521140306
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-samplevalue: usd
        x-sub-format: Currency Code
      customer:
        description: ID of the customer this charge is for if one exists.
        type: string
        x-nullable: true
        x-reference-objectname: customers
        x-samplevalue: cus_CURl3lB2LxHST1
      description:
        default: 'null'
        description: An arbitrary string attached to the object. Often useful for displaying to users.
        type: string
        x-nullable: true
        x-samplevalue: Payment
      destination:
        description: 'The account (if any) the charge was made on behalf of, with
          an automatic transfer. '
        type: string
        x-nullable: true
        x-samplevalue: acct_1C60bWAaQjfDD77K
      dispute:
        description: Details about the dispute if the charge has been disputed.
        type: string
        x-nullable: true
      failure_code:
        description: Error code explaining reason for charge failure if available (see [the errors section](/docs/api#errors) for a list of codes).
        type: string
        x-nullable: true
      failure_message:
        description: Message to user further explaining reason for charge failure if available.
        type: string
        x-nullable: true
      fraud_details:
        $ref: '#/definitions/chargesFraudDetails'
      id:
        description: Unique identifier for the object.
        type: string
        x-name: true
        x-readOnly: true
        x-samplevalue: ch_1C61HSGdZbyQGmEebxKBANaG
      invoice:
        description: ID of the invoice this charge is for if one exists.
        type: string
        x-nullable: true
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/chargesMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - charge
        type: string
        x-samplevalue: charge
        x-sub-format: Enum
      on_behalf_of:
        description: The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](/docs/connect/charges-transfers) for details.
        type: string
        x-nullable: true
        x-samplevalue: acct_1C60bWAaQjfDD77K
      order:
        description: ID of the order this charge is for if one exists.
        type: string
        x-nullable: true
        x-reference-objectname: orders
        x-samplevalue: or_1C61GaGdZbyQGmEeMhk0yAWw
      outcome:
        $ref: '#/definitions/chargesOutcome'
        description: Details about whether the payment was accepted, and why. See [understanding declines](/docs/declines) for details.
        x-nullable: true
      paid:
        description: '`true` if the charge succeeded, or was successfully authorized
          for later capture.'
        type: boolean
        x-samplevalue: true
      receipt_email:
        default: 'null'
        description: This is the email address that the receipt for this charge was sent to.
        type: string
        x-nullable: true
        x-samplevalue: ven-test@gmail.com
        x-sub-format: Email
      receipt_number:
        description: This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.
        type: string
        x-nullable: true
      refunded:
        description: Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.
        type: boolean
        x-samplevalue: false
      refunds:
        $ref: '#/definitions/chargesRefunds'
        description: A list of refunds that have been applied to the charge.
      review:
        description: ID of the review associated with this charge if one exists.
        type: string
        x-nullable: true
      shipping:
        $ref: '#/definitions/chargesShipping'
        description: Shipping information for the charge.
        x-nullable: true
      source:
        $ref: '#/definitions/chargesSource'
        description: For most Stripe users, the source of every charge is a credit or debit card. This hash is then the [card object](#card_object) describing that card.
      source_transfer:
        description: The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](/docs/connect/destination-charges) for details.
        type: string
        x-nullable: true
        x-reference-objectname: transfers
      statement_descriptor:
        default: 'null'
        description: Extra information about a charge. This will appear on your customer's credit card statement. It must contain at least one letter.
        type: string
        x-nullable: true
        x-samplevalue: Rocketship, Inc.
      status:
        description: The status of the payment is either `succeeded`, `pending`, or `failed`.
        type: string
        x-samplevalue: succeeded12
      transfer:
        description: ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).
        type: string
        x-reference-objectname: transfers
        x-samplevalue: tr_1C61HTGdZbyQGmEeApuaWXG3
      transfer_group:
        description: A string that identifies this transaction as part of a group. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details.
        type: string
        x-nullable: true
        x-samplevalue: group_ch_1C5oWG2eZvKYlo2COxhyWgxG
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: charges
  chargesCapture:
    properties:
      amount:
        description: The amount in %s to be charged on the interval specified.
        format: int32
        type: integer
        x-nullable: true
        x-sub-format: Money
      application_fee:
        description: The application fee (if any) for the charge.
        type: string
        x-nullable: true
        x-samplevalue: fee_1C61HTAaQjfDD77Kk7bryqtz
      destination:
        $ref: '#/definitions/destination'
      receipt_email:
        type: string
        x-samplevalue: a@gk.com
        x-sub-format: email
      statement_descriptor:
        type: string
        x-samplevalue: 345sf
      stripe_account:
        type: string
        x-conditionally-required-description: In case application fee is provided, stripe account is mandatory
        x-samplevalue: '1234534354'
    type: object
    x-has-customfields: false
    x-primary-key:
    - amount
  chargesCaptureResp:
    properties:
      amount:
        description: A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ?100, a zero-decimal currency) representing how much to charge. The minimum amount is $0.50 US or [equivalent in charge currency](https://support.stripe.com/questions/what-is-the-minimum-amount-i-can-charge-with-stripe).
        format: int32
        type: integer
        x-samplevalue: 150
        x-sub-format: Money
      amount_refunded:
        description: Amount in cents refunded (can be less than the amount attribute on the charge if a partial refund was issued).
        format: int32
        type: integer
        x-samplevalue: 0
        x-sub-format: Money
      application:
        description: 'Unique identifier for the object OR The name of the application
          OR String representing the object''s type. Objects of the same type share
          the same value. ID of the Connect application that created the charge. '
        type: string
        x-nullable: true
        x-readOnly: true
      application_fee:
        description: The application fee (if any) for the charge.
        type: string
        x-nullable: true
        x-samplevalue: fee_1C61HTAaQjfDD77Kk7bryqtz
      balance_transaction:
        description: ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).
        type: string
        x-nullable: true
        x-reference-objectname: balance
        x-samplevalue: txn_1C61HTGdZbyQGmEehaboES1V
      captured:
        default: true
        description: If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.
        type: boolean
        x-samplevalue: true
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1521140306
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-samplevalue: usd
        x-sub-format: Currency Code
      customer:
        description: ID of the customer this charge is for if one exists.
        type: string
        x-nullable: true
        x-reference-objectname: customers
        x-samplevalue: cus_CURl3lB2LxHST1
      description:
        default: 'null'
        description: An arbitrary string attached to the object. Often useful for displaying to users.
        type: string
        x-nullable: true
        x-samplevalue: Payment
      destination:
        description: 'The account (if any) the charge was made on behalf of, with
          an automatic transfer. '
        type: string
        x-nullable: true
        x-samplevalue: acct_1C60bWAaQjfDD77K
      dispute:
        description: Details about the dispute if the charge has been disputed.
        type: string
        x-nullable: true
      failure_code:
        description: Error code explaining reason for charge failure if available (see [the errors section](/docs/api#errors) for a list of codes).
        type: string
        x-nullable: true
      failure_message:
        description: Message to user further explaining reason for charge failure if available.
        type: string
        x-nullable: true
      fraud_details:
        $ref: '#/definitions/chargesFraudDetails'
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
        x-samplevalue: ch_1C61HSGdZbyQGmEebxKBANaG
      invoice:
        description: ID of the invoice this charge is for if one exists.
        type: string
        x-nullable: true
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/chargesMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - charge
        type: string
        x-samplevalue: charge
        x-sub-format: Enum
      on_behalf_of:
        description: The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](/docs/connect/charges-transfers) for details.
        type: string
        x-nullable: true
        x-samplevalue: acct_1C60bWAaQjfDD77K
      order:
        description: ID of the order this charge is for if one exists.
        type: string
        x-nullable: true
        x-reference-objectname: orders
        x-samplevalue: or_1C61GaGdZbyQGmEeMhk0yAWw
      outcome:
        $ref: '#/definitions/chargesOutcome'
        description: Details about whether the payment was accepted, and why. See [understanding declines](/docs/declines) for details.
        x-nullable: true
      paid:
        description: '`true` if the charge succeeded, or was successfully authorized
          for later capture.'
        type: boolean
        x-samplevalue: true
      receipt_email:
        default: 'null'
        description: This is the email address that the receipt for this charge was sent to.
        type: string
        x-nullable: true
        x-samplevalue: ven-test@gmail.com
        x-sub-format: Email
      receipt_number:
        description: This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.
        type: string
        x-nullable: true
      refunded:
        description: Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.
        type: boolean
        x-samplevalue: false
      refunds:
        $ref: '#/definitions/chargesRefunds'
        description: A list of refunds that have been applied to the charge.
      review:
        description: ID of the review associated with this charge if one exists.
        type: string
        x-nullable: true
      shipping:
        $ref: '#/definitions/chargesShipping'
        description: Shipping information for the charge.
        x-nullable: true
      source:
        $ref: '#/definitions/chargesSource'
        description: For most Stripe users, the source of every charge is a credit or debit card. This hash is then the [card object](#card_object) describing that card.
      source_transfer:
        description: The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](/docs/connect/destination-charges) for details.
        type: string
        x-nullable: true
        x-reference-objectname: transfers
      statement_descriptor:
        default: 'null'
        description: Extra information about a charge. This will appear on your customer's credit card statement. It must contain at least one letter.
        type: string
        x-nullable: true
        x-samplevalue: Rocketship, Inc.
      status:
        description: The status of the payment is either `succeeded`, `pending`, or `failed`.
        type: string
        x-samplevalue: succeeded12
      transfer:
        description: ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).
        type: string
        x-reference-objectname: transfers
        x-samplevalue: tr_1C61HTGdZbyQGmEeApuaWXG3
      transfer_group:
        description: A string that identifies this transaction as part of a group. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details.
        type: string
        x-nullable: true
        x-samplevalue: group_ch_1C5oWG2eZvKYlo2COxhyWgxG
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: charges
  chargesFraudDetails:
    description: Hash with information on fraud assessments for the charge. Assessments reported by you have the key user_report and, if set, possible values of safe and fraudulent. Assessments from Stripe have the key stripe_report and, if set, the value fraudulent.
    properties:
      user_report:
        enum:
        - safe
        - fraudulent
        type: string
        x-sub-format: Enum
    type: object
    x-has-customfields: false
  chargesListObject:
    properties:
      amount:
        description: A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ?100, a zero-decimal currency) representing how much to charge. The minimum amount is $0.50 US or [equivalent in charge currency](https://support.stripe.com/questions/what-is-the-minimum-amount-i-can-charge-with-stripe).
        format: int32
        type: integer
        x-samplevalue: 150
        x-searchable: true
        x-searchable-operators:
        - =
        - '>'
        - <
        - '>='
        - <=
        x-sub-format: Money
      amount_refunded:
        description: Amount in cents refunded (can be less than the amount attribute on the charge if a partial refund was issued).
        format: int32
        type: integer
        x-samplevalue: 0
        x-searchable: true
        x-searchable-operators:
        - =
        - '>'
        - <
        - '>='
        - <=
        x-sub-format: Money
      application:
        description: 'Unique identifier for the object OR The name of the application
          OR String representing the object''s type. Objects of the same type share
          the same value. ID of the Connect application that created the charge. '
        type: string
        x-nullable: true
        x-readOnly: true
      application_fee:
        description: The application fee (if any) for the charge.
        type: string
        x-nullable: true
        x-samplevalue: fee_1C61HTAaQjfDD77Kk7bryqtz
      balance_transaction:
        description: ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).
        type: string
        x-nullable: true
        x-reference-objectname: balance
        x-samplevalue: txn_1C61HTGdZbyQGmEehaboES1V
      captured:
        default: true
        description: If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.
        type: boolean
        x-samplevalue: true
        x-searchable: true
        x-searchable-operators:
        - =
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1521140306
        x-searchable: true
        x-searchable-operators:
        - =
        - '>'
        - <
        - '>='
        - <=
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-samplevalue: usd
        x-sub-format: Currency Code
      customer:
        description: ID of the customer this charge is for if one exists.
        type: string
        x-nullable: true
        x-reference-objectname: customers
        x-samplevalue: cus_CURl3lB2LxHST1
        x-searchable: true
        x-searchable-operators:
        - =
      description:
        default: 'null'
        description: An arbitrary string attached to the object. Often useful for displaying to users.
        type: string
        x-nullable: true
        x-samplevalue: Payment
      destination:
        description: 'The account (if any) the charge was made on behalf of, with
          an automatic transfer. '
        type: string
        x-nullable: true
        x-samplevalue: acct_1C60bWAaQjfDD77K
      dispute:
        description: Details about the dispute if the charge has been disputed.
        type: string
        x-nullable: true
      failure_code:
        description: Error code explaining reason for charge failure if available (see [the errors section](/docs/api#errors) for a list of codes).
        type: string
        x-nullable: true
      failure_message:
        description: Message to user further explaining reason for charge failure if available.
        type: string
        x-nullable: true
      fraud_details:
        $ref: '#/definitions/chargesFraudDetails'
      id:
        description: Unique identifier for the object.
        type: string
        x-name: true
        x-readOnly: true
        x-samplevalue: ch_1C61HSGdZbyQGmEebxKBANaG
      invoice:
        description: ID of the invoice this charge is for if one exists.
        type: string
        x-nullable: true
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/chargesMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - charge
        type: string
        x-samplevalue: charge
        x-sub-format: Enum
      on_behalf_of:
        description: The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](/docs/connect/charges-transfers) for details.
        type: string
        x-nullable: true
        x-samplevalue: acct_1C60bWAaQjfDD77K
      order:
        description: ID of the order this charge is for if one exists.
        type: string
        x-nullable: true
        x-reference-objectname: orders
        x-samplevalue: or_1C61GaGdZbyQGmEeMhk0yAWw
      outcome:
        $ref: '#/definitions/chargesOutcome'
        description: Details about whether the payment was accepted, and why. See [understanding declines](/docs/declines) for details.
        x-nullable: true
      paid:
        description: '`true` if the charge succeeded, or was successfully authorized
          for later capture.'
        type: boolean
        x-samplevalue: true
      receipt_email:
        default: 'null'
        description: This is the email address that the receipt for this charge was sent to.
        type: string
        x-nullable: true
        x-samplevalue: ven-test@gmail.com
        x-sub-format: Email
      receipt_number:
        description: This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.
        type: string
        x-nullable: true
      refunded:
        description: Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.
        type: boolean
        x-samplevalue: false
        x-searchable: true
        x-searchable-operators:
        - =
      refunds:
        $ref: '#/definitions/chargesRefunds'
        description: A list of refunds that have been applied to the charge.
      review:
        description: ID of the review associated with this charge if one exists.
        type: string
        x-nullable: true
      shipping:
        $ref: '#/definitions/chargesShipping'
        description: Shipping information for the charge.
        x-nullable: true
      source:
        $ref: '#/definitions/chargesSource'
        description: For most Stripe users, the source of every charge is a credit or debit card. This hash is then the [card object](#card_object) describing that card.
      source_transfer:
        description: The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](/docs/connect/destination-charges) for details.
        type: string
        x-nullable: true
        x-reference-objectname: transfers
      statement_descriptor:
        default: 'null'
        description: Extra information about a charge. This will appear on your customer's credit card statement. It must contain at least one letter.
        type: string
        x-nullable: true
        x-samplevalue: Rocketship, Inc.
      status:
        description: The status of the payment is either `succeeded`, `pending`, or `failed`.
        type: string
        x-samplevalue: succeeded12
      transfer:
        description: ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).
        type: string
        x-reference-objectname: transfers
        x-samplevalue: tr_1C61HTGdZbyQGmEeApuaWXG3
      transfer_group:
        description: A string that identifies this transaction as part of a group. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details.
        type: string
        x-nullable: true
        x-samplevalue: group_ch_1C5oWG2eZvKYlo2COxhyWgxG
        x-searchable: true
        x-searchable-operators:
        - =
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-searchable: true
    x-searchable-joins:
    - and
    x-vendor-objectname: charges
  chargesMetadata:
    properties: {}
    type: object
    x-has-customfields: true
  chargesOutcome:
    properties:
      network_status:
        description: Possible values are `approved_by_network`, `declined_by_network`, `not_sent_to_network`, and `reversed_after_approval`. The value `reversed_after_approval` indicates the payment was [blocked by Stripe](/docs/declines#blocked-payments) after bank authorization, and may temporarily appear as "pending" on a cardholder's statement.
        type: string
        x-nullable: true
        x-samplevalue: approved_by_network
      reason:
        description: An enumerated value providing a more detailed explanation of the outcome's `type`. Charges blocked by Radar's default block rule have the value `highest_risk_level`. Charges placed in review by Radar's default review rule have the value `elevated_risk_level`. Charges authorized, blocked, or placed in review by custom rules have the value `rule`. See [understanding declines](/docs/declines) for more details.
        type: string
        x-nullable: true
      risk_level:
        description: Stripe's evaluation of the riskiness of the payment. Possible values for evaluated payments are `normal`, `elevated`, `highest`. For non-card payments, and card-based payments predating the public assignment of risk levels, this field will have the value `not_assessed`. In the event of an error in the evaluation, this field will have the value `unknown`.
        type: string
      risk_score:
        description: Stripe�s evaluation of the riskiness of the payment. Possible values for evaluated payments are between 0 and 100. For non-card payments, card-based payments predating the public assignment of risk scores, or in the event of an error during evaluation, this field will not be present. This field is only available with Radar for Fraud Teams
        format: int32
        type: integer
      rule:
        description: The ID of the Radar rule that matched the payment, if applicable.
        type: string
      seller_message:
        description: A human-readable description of the outcome type and reason, designed for you (the recipient of the payment), not your customer.
        type: string
        x-nullable: true
        x-samplevalue: Payment complete.
      type:
        description: Possible values are `authorized`, `manual_review`, `issuer_declined`, `blocked`, and `invalid`. See [understanding declines](/docs/declines) and [Radar reviews](radar/review) for details.
        enum:
        - authorized
        - manual_review
        - issuer_declined
        - blocked
        - invalid
        type: string
        x-samplevalue: authorized
    type: object
    x-has-customfields: false
  chargesPatch:
    properties:
      customer:
        description: ID of the customer this charge is for if one exists.
        type: string
        x-nullable: true
        x-reference-objectname: customers
        x-samplevalue: cus_CURl3lB2LxHST1
      description:
        default: 'null'
        description: An arbitrary string attached to the object. Often useful for displaying to users.
        type: string
        x-nullable: true
        x-samplevalue: Payment
      fraud_details:
        $ref: '#/definitions/chargesPatchfraud_details'
        description: A set of key/value pairs you can attach to a charge giving information about its riskiness. If you believe a charge is fraudulent, include a user_report key with a value of fraudulent. If you believe a charge is safe, include a user_report key with a value of safe. Note that you must refund a charge before setting the user_report to fraudulent. Stripe will use the information you send to improve our fraud detection algorithms.
      metadata:
        $ref: '#/definitions/chargesPatchMetadata'
        description: Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to metadata.
      receipt_email:
        default: 'null'
        description: This is the email address that the receipt for this charge was sent to.
        type: string
        x-nullable: true
        x-samplevalue: ven-test@gmail.com
        x-sub-format: Email
      shipping:
        $ref: '#/definitions/chargesPatchShipping'
        description: Shipping information for the charge. Helps prevent fraud on charges for physical goods.
      transfer_group:
        description: A string that identifies this transaction as part of a group. transfer_group may only be provided if it has not been set. See the Connect documentation for details.
        type: string
        x-nullable: true
    type: object
    x-has-customfields: false
    x-vendor-objectname: charges
  chargesPatchMetadata:
    properties: {}
    type: object
    x-has-customfields: true
  chargesPatchResp:
    properties:
      amount:
        description: A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ?100, a zero-decimal currency) representing how much to charge. The minimum amount is $0.50 US or [equivalent in charge currency](https://support.stripe.com/questions/what-is-the-minimum-amount-i-can-charge-with-stripe).
        format: int32
        type: integer
        x-samplevalue: 150
        x-sub-format: Money
      amount_refunded:
        description: Amount in cents refunded (can be less than the amount attribute on the charge if a partial refund was issued).
        format: int32
        type: integer
        x-samplevalue: 0
        x-sub-format: Money
      application:
        description: 'Unique identifier for the object OR The name of the application
          OR String representing the object''s type. Objects of the same type share
          the same value. ID of the Connect application that created the charge. '
        type: string
        x-nullable: true
        x-readOnly: true
      application_fee:
        description: The application fee (if any) for the charge.
        type: string
        x-nullable: true
        x-samplevalue: fee_1C61HTAaQjfDD77Kk7bryqtz
      balance_transaction:
        description: ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).
        type: string
        x-nullable: true
        x-reference-objectname: balance
        x-samplevalue: txn_1C61HTGdZbyQGmEehaboES1V
      captured:
        default: true
        description: If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.
        type: boolean
        x-samplevalue: true
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1521140306
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-samplevalue: usd
        x-sub-format: Currency Code
      customer:
        description: ID of the customer this charge is for if one exists.
        type: string
        x-nullable: true
        x-reference-objectname: customers
        x-samplevalue: cus_CURl3lB2LxHST1
      description:
        default: 'null'
        description: An arbitrary string attached to the object. Often useful for displaying to users.
        type: string
        x-nullable: true
        x-samplevalue: Payment
      destination:
        description: 'The account (if any) the charge was made on behalf of, with
          an automatic transfer. '
        type: string
        x-nullable: true
        x-samplevalue: acct_1C60bWAaQjfDD77K
      dispute:
        description: Details about the dispute if the charge has been disputed.
        type: string
        x-nullable: true
      failure_code:
        description: Error code explaining reason for charge failure if available (see [the errors section](/docs/api#errors) for a list of codes).
        type: string
        x-nullable: true
      failure_message:
        description: Message to user further explaining reason for charge failure if available.
        type: string
        x-nullable: true
      fraud_details:
        $ref: '#/definitions/chargesFraudDetails'
      id:
        description: Unique identifier for the object.
        type: string
        x-name: true
        x-readOnly: true
        x-samplevalue: ch_1C61HSGdZbyQGmEebxKBANaG
      invoice:
        description: ID of the invoice this charge is for if one exists.
        type: string
        x-nullable: true
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/chargesMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - charge
        type: string
        x-samplevalue: charge
        x-sub-format: Enum
      on_behalf_of:
        description: The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](/docs/connect/charges-transfers) for details.
        type: string
        x-nullable: true
        x-samplevalue: acct_1C60bWAaQjfDD77K
      order:
        description: ID of the order this charge is for if one exists.
        type: string
        x-nullable: true
        x-reference-objectname: orders
        x-samplevalue: or_1C61GaGdZbyQGmEeMhk0yAWw
      outcome:
        $ref: '#/definitions/chargesOutcome'
        description: Details about whether the payment was accepted, and why. See [understanding declines](/docs/declines) for details.
        x-nullable: true
      paid:
        description: '`true` if the charge succeeded, or was successfully authorized
          for later capture.'
        type: boolean
        x-samplevalue: true
      receipt_email:
        default: 'null'
        description: This is the email address that the receipt for this charge was sent to.
        type: string
        x-nullable: true
        x-samplevalue: ven-test@gmail.com
        x-sub-format: Email
      receipt_number:
        description: This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.
        type: string
        x-nullable: true
      refunded:
        description: Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.
        type: boolean
        x-samplevalue: false
      refunds:
        $ref: '#/definitions/chargesRefundsPatch'
        description: A list of refunds that have been applied to the charge.
      review:
        description: ID of the review associated with this charge if one exists.
        type: string
        x-nullable: true
      shipping:
        $ref: '#/definitions/chargesShipping'
        description: Shipping information for the charge.
        x-nullable: true
      source:
        $ref: '#/definitions/chargesSource'
        description: For most Stripe users, the source of every charge is a credit or debit card. This hash is then the [card object](#card_object) describing that card.
      source_transfer:
        description: The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](/docs/connect/destination-charges) for details.
        type: string
        x-nullable: true
        x-reference-objectname: transfers
      statement_descriptor:
        default: 'null'
        description: Extra information about a charge. This will appear on your customer's credit card statement. It must contain at least one letter.
        type: string
        x-nullable: true
        x-samplevalue: Rocketship, Inc.
      status:
        description: The status of the payment is either `succeeded`, `pending`, or `failed`.
        type: string
        x-samplevalue: succeeded12
      transfer:
        description: ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).
        type: string
        x-reference-objectname: transfers
        x-samplevalue: tr_1C61HTGdZbyQGmEeApuaWXG3
      transfer_group:
        description: A string that identifies this transaction as part of a group. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details.
        type: string
        x-nullable: true
        x-samplevalue: group_ch_1C5oWG2eZvKYlo2COxhyWgxG
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: charges
  chargesPatchShipping:
    properties:
      address:
        $ref: '#/definitions/chargesPatchShippingAddress'
      carrier:
        type: string
        x-nullable: true
      name:
        type: string
      phone:
        description: Customer phone (including extension).
        type: string
        x-nullable: true
      tracking_number:
        type: string
        x-nullable: true
    type: object
    x-has-customfields: false
  chargesPatchShippingAddress:
    properties:
      city:
        description: City/District/Suburb/Town/Village.
        type: string
        x-nullable: true
        x-sub-format: City
      country:
        description: 2-letter country code.
        type: string
        x-nullable: true
        x-sub-format: Country
      line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-nullable: true
        x-sub-format: Street Address
      line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
        x-nullable: true
      postal_code:
        description: ZIP or postal code
        type: string
        x-nullable: true
        x-sub-format: Postal Code
      state:
        description: State/County/Province/Region.
        type: string
        x-nullable: true
        x-sub-format: State
    type: object
    x-has-customfields: false
  chargesPatchfraud_details:
    description: Hash with information on fraud assessments for the charge. Assessments reported by you have the key user_report and, if set, possible values of safe and fraudulent. Assessments from Stripe have the key stripe_report and, if set, the value fraudulent.
    properties:
      user_report:
        enum:
        - safe
        - fraudulent
        type: string
        x-sub-format: Enum
    type: object
    x-has-customfields: false
  chargesPost:
    properties:
      amount:
        description: A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ?100, a zero-decimal currency) representing how much to charge. The minimum amount is $0.50 US or [equivalent in charge currency](https://support.stripe.com/questions/what-is-the-minimum-amount-i-can-charge-with-stripe).
        format: int32
        type: integer
        x-samplevalue: 150
        x-sub-format: Money
      application_fee:
        description: The application fee (if any) for the charge.
        type: string
        x-nullable: true
        x-samplevalue: fee_1C61HTAaQjfDD77Kk7bryqtz
      capture:
        default: true
        description: Whether to immediately capture the charge. When false, the charge issues an authorization (or pre-authorization), and will need to be captured later. Uncaptured charges expire in seven days. For more information, see the authorizing charges and settling later documentation.
        type: boolean
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-samplevalue: usd
        x-sub-format: Currency Code
      customer:
        description: ID of the customer this charge is for if one exists.
        type: string
        x-conditionally-required-description: either source or customer is required
        x-nullable: true
        x-reference-objectname: customers
        x-samplevalue: cus_CURl3lB2LxHST1
      description:
        default: 'null'
        description: An arbitrary string attached to the object. Often useful for displaying to users.
        type: string
        x-nullable: true
        x-samplevalue: Payment
      destination:
        $ref: '#/definitions/chargeDestination'
        description: 'If specified, the charge will be attributed to the destination
          account for tax reporting, and the funds from the charge will be transferred
          to the destination account. '
      metadata:
        $ref: '#/definitions/chargesPostMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      on_behalf_of:
        description: The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](/docs/connect/charges-transfers) for details.
        type: string
        x-nullable: true
        x-samplevalue: acct_1C60bWAaQjfDD77K
      order:
        description: ID of the order this charge is for if one exists.
        type: string
        x-nullable: true
        x-reference-objectname: orders
        x-samplevalue: or_1C61GaGdZbyQGmEeMhk0yAWw
      receipt_email:
        default: 'null'
        description: This is the email address that the receipt for this charge was sent to.
        type: string
        x-nullable: true
        x-samplevalue: ven-test@gmail.com
        x-sub-format: Email
      shipping:
        $ref: '#/definitions/chargesPostShipping'
        description: Shipping information for the charge.
        x-nullable: true
      source:
        $ref: '#/definitions/chargesPostSource'
        description: A payment source to be charged, such as a credit card. If you also pass a customer ID, the source must be the ID of a source belonging to the customer (e.g., a saved card). Otherwise, if you do not pass a customer ID, the source you provide must be either a token, like the ones returned by Stripe.js, or a dictionary containing a user's credit card details, with the options described below. Although not all information is required, the extra info helps prevent fraud.
        x-conditionally-required-description: either source or customer is required
      statement_descriptor:
        default: 'null'
        description: Extra information about a charge. This will appear on your customer's credit card statement. It must contain at least one letter.
        type: string
        x-nullable: true
        x-samplevalue: Rocketship, Inc.
      transfer_group:
        description: A string that identifies this transaction as part of a group. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details.
        type: string
        x-nullable: true
        x-samplevalue: group_ch_1C5oWG2eZvKYlo2COxhyWgxG
    required:
    - amount
    - currency
    type: object
    x-has-customfields: true
    x-vendor-objectname: charges
  chargesPostMetadata:
    properties: {}
    type: object
    x-has-customfields: true
  chargesPostResp:
    properties:
      amount:
        description: A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ?100, a zero-decimal currency) representing how much to charge. The minimum amount is $0.50 US or [equivalent in charge currency](https://support.stripe.com/questions/what-is-the-minimum-amount-i-can-charge-with-stripe).
        format: int32
        type: integer
        x-samplevalue: 150
        x-sub-format: Money
      amount_refunded:
        description: Amount in cents refunded (can be less than the amount attribute on the charge if a partial refund was issued).
        format: int32
        type: integer
        x-samplevalue: 0
        x-sub-format: Money
      application:
        description: 'Unique identifier for the object OR The name of the application
          OR String representing the object''s type. Objects of the same type share
          the same value. ID of the Connect application that created the charge. '
        type: string
        x-nullable: true
        x-readOnly: true
      application_fee:
        description: The application fee (if any) for the charge.
        type: string
        x-nullable: true
        x-samplevalue: fee_1C61HTAaQjfDD77Kk7bryqtz
      balance_transaction:
        description: ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).
        type: string
        x-nullable: true
        x-reference-objectname: balance
        x-samplevalue: txn_1C61HTGdZbyQGmEehaboES1V
      captured:
        default: true
        description: If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.
        type: boolean
        x-samplevalue: true
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1521140306
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-samplevalue: usd
        x-sub-format: Currency Code
      customer:
        description: ID of the customer this charge is for if one exists.
        type: string
        x-nullable: true
        x-reference-objectname: customers
        x-samplevalue: cus_CURl3lB2LxHST1
      description:
        default: 'null'
        description: An arbitrary string attached to the object. Often useful for displaying to users.
        type: string
        x-nullable: true
        x-samplevalue: Payment
      destination:
        description: 'The account (if any) the charge was made on behalf of, with
          an automatic transfer. '
        type: string
        x-nullable: true
        x-samplevalue: acct_1C60bWAaQjfDD77K
      dispute:
        description: Details about the dispute if the charge has been disputed.
        type: string
        x-nullable: true
      failure_code:
        description: Error code explaining reason for charge failure if available (see [the errors section](/docs/api#errors) for a list of codes).
        type: string
        x-nullable: true
      failure_message:
        description: Message to user further explaining reason for charge failure if available.
        type: string
        x-nullable: true
      fraud_details:
        $ref: '#/definitions/chargesFraudDetails'
      id:
        description: Unique identifier for the object.
        type: string
        x-name: true
        x-readOnly: true
        x-samplevalue: ch_1C61HSGdZbyQGmEebxKBANaG
      invoice:
        description: ID of the invoice this charge is for if one exists.
        type: string
        x-nullable: true
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/chargesMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - charge
        type: string
        x-samplevalue: charge
        x-sub-format: Enum
      on_behalf_of:
        description: The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](/docs/connect/charges-transfers) for details.
        type: string
        x-nullable: true
        x-samplevalue: acct_1C60bWAaQjfDD77K
      order:
        description: ID of the order this charge is for if one exists.
        type: string
        x-nullable: true
        x-reference-objectname: orders
        x-samplevalue: or_1C61GaGdZbyQGmEeMhk0yAWw
      outcome:
        $ref: '#/definitions/chargesOutcome'
        description: Details about whether the payment was accepted, and why. See [understanding declines](/docs/declines) for details.
        x-nullable: true
      paid:
        description: '`true` if the charge succeeded, or was successfully authorized
          for later capture.'
        type: boolean
        x-samplevalue: true
      receipt_email:
        default: 'null'
        description: This is the email address that the receipt for this charge was sent to.
        type: string
        x-nullable: true
        x-samplevalue: ven-test@gmail.com
        x-sub-format: Email
      receipt_number:
        description: This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.
        type: string
        x-nullable: true
      refunded:
        description: Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.
        type: boolean
        x-samplevalue: false
      refunds:
        $ref: '#/definitions/chargesRefunds'
        description: A list of refunds that have been applied to the charge.
      review:
        description: ID of the review associated with this charge if one exists.
        type: string
        x-nullable: true
      shipping:
        $ref: '#/definitions/chargesShipping'
        description: Shipping information for the charge.
        x-nullable: true
      source:
        $ref: '#/definitions/chargesSource'
        description: For most Stripe users, the source of every charge is a credit or debit card. This hash is then the [card object](#card_object) describing that card.
      source_transfer:
        description: The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](/docs/connect/destination-charges) for details.
        type: string
        x-nullable: true
        x-reference-objectname: transfers
      statement_descriptor:
        default: 'null'
        description: Extra information about a charge. This will appear on your customer's credit card statement. It must contain at least one letter.
        type: string
        x-nullable: true
        x-samplevalue: Rocketship, Inc.
      status:
        description: The status of the payment is either `succeeded`, `pending`, or `failed`.
        type: string
        x-samplevalue: succeeded12
      transfer:
        description: ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).
        type: string
        x-reference-objectname: transfers
        x-samplevalue: tr_1C61HTGdZbyQGmEeApuaWXG3
      transfer_group:
        description: A string that identifies this transaction as part of a group. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details.
        type: string
        x-nullable: true
        x-samplevalue: group_ch_1C5oWG2eZvKYlo2COxhyWgxG
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: charges
  chargesPostShipping:
    properties:
      address:
        $ref: '#/definitions/chargesPostShippingAddress'
      carrier:
        type: string
        x-nullable: true
      name:
        type: string
      phone:
        description: Customer phone (including extension).
        type: string
        x-nullable: true
      tracking_number:
        type: string
        x-nullable: true
    required:
    - address
    - name
    type: object
  chargesPostShippingAddress:
    properties:
      city:
        description: City/District/Suburb/Town/Village.
        type: string
        x-nullable: true
        x-sub-format: City
      country:
        description: 2-letter country code.
        type: string
        x-nullable: true
        x-sub-format: Country
      line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-nullable: true
        x-sub-format: Street Address
      line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
        x-nullable: true
      metadata:
        $ref: '#/definitions/chargesPostMetadata'
      postal_code:
        description: ZIP or postal code
        type: string
        x-nullable: true
        x-sub-format: Postal Code
      state:
        description: State/County/Province/Region.
        type: string
        x-nullable: true
        x-sub-format: State
    required:
    - line1
    type: object
  chargesPostSource:
    properties:
      address_city:
        description: City/District/Suburb/Town/Village.
        type: string
        x-sub-format: City
      address_country:
        description: Billing-address country, if provided when creating the card.
        type: string
        x-samplevalue: India
        x-sub-format: Country
      address_line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-samplevalue: Street address 1
        x-sub-format: Street Address
      address_line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
        x-samplevalue: Street no 303
      address_state:
        description: State/County/Province/Region.
        type: string
        x-samplevalue: Maharashtra
        x-sub-format: State
      address_zip:
        description: ZIP or postal code.
        type: string
        x-samplevalue: '097213'
        x-sub-format: Postal Code
      currency:
        type: string
        x-conditionally-required-description: 'Required when adding a card to an account
          (not applicable to a customers or recipients). '
        x-samplevalue: USD
        x-sub-format: Currency Code
      cvc:
        description: Card security code. Highly recommended to always include this value, but it's required only for accounts based in European countries.
        format: int32
        type: integer
        x-conditionally-required-description: Highly recommended to always include this value, but it's only required for accounts based in European countries.
      default_for_currency:
        type: boolean
        x-samplevalue: true
      exp_month:
        description: Two-digit number representing the card's expiration month.
        format: int32
        type: integer
        x-length: 2
        x-min-length: 2
      exp_year:
        description: Two- or four-digit number representing the card's expiration year.
        format: int32
        type: integer
        x-length: 4
        x-min-length: 2
      name:
        description: Cardholder's full name.
        type: string
        x-samplevalue: Kane Simpson
        x-sub-format: Full Name
      number:
        description: The card number, as a string without any separators.
        format: int64
        type: integer
      object:
        description: The type of payment source. Should be card.
        enum:
        - card
        type: string
        x-sub-format: Enum
    required:
    - object
    - exp_year
    - exp_month
    - number
    type: object
  chargesRefunds:
    description: A list of refunds that have been applied to the charge.
    properties:
      data:
        items:
          $ref: '#/definitions/chargesRefundsData'
        type: array
      has_more:
        description: True if this list has another page of items after this one that can be fetched.
        type: boolean
        x-samplevalue: false
      object:
        description: String representing the object's type. Objects of the same type share the same value. Always has the value "list".
        enum:
        - list
        type: string
        x-readOnly: true
        x-samplevalue: list
        x-sub-format: Enum
      total_count:
        format: int32
        type: integer
        x-samplevalue: 0
      url:
        description: The URL where this list can be accessed.
        type: string
        x-samplevalue: /v1/charges/ch_1C61HSGdZbyQGmEebxKBANaG/refunds
    type: object
    x-has-customfields: false
  chargesRefundsData:
    properties:
      amount:
        description: Amount, in cents.
        format: int32
        type: integer
        x-sub-format: Money
      balance_transaction:
        description: Balance transaction that describes the impact on your account balance.
        type: string
        x-nullable: true
      charge:
        description: ID of the charge that was refunded.
        type: string
        x-nullable: true
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1521140306
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
        x-sub-format: Currency Code
      failure_balance_transaction:
        description: If the refund failed, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction.
        type: string
      failure_reason:
        description: If the refund failed, the reason for refund failure if known. Possible values are `lost_or_stolen_card`, `expired_or_canceled_card`, or `unknown`.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
      metadata:
        $ref: '#/definitions/chargesMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - list
        - refund
        type: string
        x-sub-format: Enum
      reason:
        description: Reason for the refund. If set, possible values are `duplicate`, `fraudulent`, and `requested_by_customer`.
        type: string
        x-nullable: true
      receipt_number:
        description: This is the transaction number that appears on email receipts sent for this refund.
        type: string
        x-nullable: true
      status:
        description: Status of the refund. For credit card refunds, this can be `succeeded` or `failed`. For other types of refunds, it can be `pending`, `succeeded`, `failed`, or `canceled`. Refer to our [refunds](/docs/refunds#failed-refunds) documentation for more details.
        type: string
        x-nullable: true
    type: object
  chargesRefundsDataPatch:
    properties:
      amount:
        description: Amount, in cents.
        format: int32
        type: integer
        x-sub-format: Money
      balance_transaction:
        description: Balance transaction that describes the impact on your account balance.
        type: string
        x-nullable: true
      charge:
        description: ID of the charge that was refunded.
        type: string
        x-nullable: true
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1521140306
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
        x-sub-format: Currency Code
      failure_balance_transaction:
        description: If the refund failed, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction.
        type: string
      failure_reason:
        description: If the refund failed, the reason for refund failure if known. Possible values are `lost_or_stolen_card`, `expired_or_canceled_card`, or `unknown`.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
      metadata:
        $ref: '#/definitions/chargesMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - list
        - refund
        type: string
        x-sub-format: Enum
      reason:
        description: Reason for the refund. If set, possible values are `duplicate`, `fraudulent`, and `requested_by_customer`.
        type: string
        x-nullable: true
      receipt_number:
        description: This is the transaction number that appears on email receipts sent for this refund.
        type: string
        x-nullable: true
      status:
        description: Status of the refund. For credit card refunds, this can be `succeeded` or `failed`. For other types of refunds, it can be `pending`, `succeeded`, `failed`, or `canceled`. Refer to our [refunds](/docs/refunds#failed-refunds) documentation for more details.
        type: string
        x-nullable: true
    type: object
  chargesRefundsPatch:
    description: A list of refunds that have been applied to the charge.
    properties:
      data:
        items:
          $ref: '#/definitions/chargesRefundsDataPatch'
        type: array
      has_more:
        description: True if this list has another page of items after this one that can be fetched.
        type: boolean
        x-samplevalue: false
      object:
        description: String representing the object's type. Objects of the same type share the same value. Always has the value "list".
        enum:
        - list
        type: string
        x-readOnly: true
        x-samplevalue: list
        x-sub-format: Enum
      total_count:
        format: int32
        type: integer
        x-samplevalue: 0
      url:
        description: The URL where this list can be accessed.
        type: string
        x-samplevalue: /v1/charges/ch_1C61HSGdZbyQGmEebxKBANaG/refunds
    type: object
    x-has-customfields: false
  chargesRefundsReq:
    properties:
      amount:
        description: A positive integer in cents representing how much of this charge to refund. Can refund only up to the remaining, unrefunded amount of the charge.
        format: int32
        type: integer
        x-samplevalue: 1
        x-sub-format: Money
      metadata:
        $ref: '#/definitions/chargesRefundsReqMetadata'
        description: A set of key-value pairs that you can attach to a Refund object. This can be useful for storing additional information about the refund in a structured format. You can unset individual keys if you POST an empty value for that key. You can clear all keys if you POST an empty value for metadata.
      reason:
        description: String indicating the reason for the refund. If set, possible values are duplicate, fraudulent, and requested_by_customer. Specifying fraudulent as the reason when you believe the charge to be fraudulent will help us improve our fraud detection algorithms.
        enum:
        - duplicate
        - fradulent
        - requested_by_customer
        type: string
        x-samplevalue: requested_by_customer
      refund_application_fee:
        default: false
        description: |-
          Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded.

          An application fee can be refunded only by the application that created the charge.
        type: boolean
      reverse_transfer:
        default: false
        description: |-
          Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount).

          A transfer can be reversed only by the application that created the charge.
        type: boolean
    title: chargesRefundsReq
    type: object
    x-has-customfields: true
    x-vendor-objectname: refunds
  chargesRefundsReqMetadata:
    description: 'Set of key-value pairs that you can attach to an object. This can
      be useful for storing additional information about the object in a structured
      format. '
    properties: {}
    title: chargesRefundsReqMetadata
    type: object
    x-has-customfields: true
  chargesRefundsResMetadata:
    description: 'Set of key-value pairs that you can attach to an object. This can
      be useful for storing additional information about the object in a structured
      format. '
    properties: {}
    title: chargesRefundsResMetadata
    type: object
    x-has-customfields: true
  chargesRefundsResponse:
    properties:
      amount:
        description: Amount, in cents.
        format: int32
        type: integer
        x-sub-format: Money
      balance_transaction:
        description: 'Balance transaction that describes the impact on your account
          balance. '
        type: string
        x-nullable: true
        x-reference-objectname: Balance
      charge:
        description: ID of the charge that was refunded.
        type: string
        x-reference-objectname: Charges
      created:
        description: 'Time at which the object was created. Measured in seconds since
          the Unix epoch. '
        format: int32
        type: integer
        x-mask: Epoch
        x-samplevalue: 1521140306
        x-sub-format: Date Time Epoch
      currency:
        description: 'Three-letter ISO currency code, in lowercase. Must be a supported
          currency. '
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-sub-format: Currency Code
      failure_balance_transaction:
        description: If the refund failed, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction.
        type: string
      failure_reason:
        description: 'If the refund failed, the reason for refund failure if known.
          Possible values are lost_or_stolen_card, expired_or_canceled_card, or unknown. '
        enum:
        - lost_or_stolen_card
        - expired_or_canceled_card
        - unknown
        type: string
        x-sub-format: Enum
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
      metadata:
        $ref: '#/definitions/chargesRefundsResMetadata'
      object:
        description: 'String representing the object''s type. Objects of the same
          type share the same value. '
        enum:
        - refund
        type: string
        x-readOnly: true
        x-sub-format: Enum
      reason:
        description: 'Reason for the refund. If set, possible values are duplicate,
          fraudulent, and requested_by_customer. '
        enum:
        - duplicate
        - fraudulent
        - requested_by_customer
        type: string
        x-sub-format: Enum
      receipt_number:
        description: 'This is the transaction number that appears on email receipts
          sent for this refund. '
        type: string
        x-nullable: true
      status:
        description: Status of the refund. For credit card refunds, this can be succeeded or failed. For other types of refunds, it can be pending, succeeded, failed, or canceled.
        enum:
        - succeeded
        - failed
        - pending
        - canceled
        type: string
        x-sub-format: Enum
    title: chargesRefundsResponse
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: refunds
  chargesShipping:
    properties:
      address:
        $ref: '#/definitions/chargesShippingAddress'
      carrier:
        type: string
        x-nullable: true
      name:
        type: string
      phone:
        description: Customer phone (including extension).
        type: string
        x-nullable: true
      tracking_number:
        type: string
        x-nullable: true
    type: object
  chargesShippingAddress:
    properties:
      city:
        description: City/District/Suburb/Town/Village.
        type: string
        x-nullable: true
        x-sub-format: City
      country:
        description: 2-letter country code.
        type: string
        x-nullable: true
        x-sub-format: Country
      line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-nullable: true
        x-sub-format: Street Address
      line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
        x-nullable: true
      postal_code:
        description: ZIP or postal code
        type: string
        x-nullable: true
        x-sub-format: Postal Code
      state:
        description: State/County/Province/Region.
        type: string
        x-nullable: true
        x-sub-format: State
    type: object
  chargesSource:
    properties:
      account:
        type: string
      account_holder_name:
        description: The name of the person or business that owns the bank account.
        type: string
        x-sub-format: Full Name
      account_holder_type:
        description: The type of entity that holds the account. This can be either individual or company.
        enum:
        - individual
        - company
        type: string
        x-sub-format: Enum
      ach_credit_transfer:
        $ref: '#/definitions/chargesSourceAch_credit_transfer'
      address_city:
        description: 'City/District/Suburb/Town/Village. '
        type: string
        x-nullable: true
        x-sub-format: City
      address_country:
        description: Billing address country, if provided when creating card.
        type: string
        x-nullable: true
        x-samplevalue: India
        x-sub-format: Country
      address_line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-nullable: true
        x-samplevalue: Street address 1
        x-sub-format: Street Address
      address_line1_check:
        description: 'If `address_line1` was provided, results of the check: `pass`,
          `fail`, `unavailable`, or `unchecked`.'
        enum:
        - pass
        - fail
        - unavailable
        - unchecked
        type: string
        x-nullable: true
        x-sub-format: Enum
      address_line2:
        description: 'Address line 2 (Apartment/Suite/Unit/Building). '
        type: string
        x-nullable: true
        x-samplevalue: Street no 303
      address_state:
        description: 'State/County/Province/Region. '
        type: string
        x-nullable: true
        x-samplevalue: Maharashtra
        x-sub-format: State
      address_zip:
        description: ZIP or postal code.
        type: string
        x-nullable: true
        x-samplevalue: '097213'
        x-sub-format: Postal Code
      address_zip_check:
        description: 'If `address_zip` was provided, results of the check: `pass`,
          `fail`, `unavailable`, or `unchecked`.'
        enum:
        - pass
        - fail
        - unavailable
        - unchecked
        type: string
        x-nullable: true
        x-sub-format: Enum
      amount:
        description: The amount in %s to be charged on the interval specified.
        format: int32
        type: integer
        x-nullable: true
        x-sub-format: Money
      bank_name:
        description: Name of the bank associated with the routing number (e.g., WELLS FARGO).
        type: string
      brand:
        description: Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.
        enum:
        - American Express
        - Diners Club
        - Discover
        - JCB
        - MasterCard
        - UnionPay
        - Visa
        - Unknown
        type: string
        x-samplevalue: Visa
        x-sub-format: Credit Card Type
      client_secret:
        description: The client secret of the source. Used for client-side retrieval using a publishable key.
        type: string
        x-readOnly: true
        x-sample-value: src_client_secret_CUrUf9rfd6NvBezxlD3rHqGH
      country:
        description: 'The country in which the bank account is located. '
        type: string
        x-nullable: true
        x-samplevalue: US
        x-sub-format: Country
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1522395672
        x-sub-format: Date Time Epoch
      currency:
        description: 'Required when adding a card to an account (not applicable to
          customers or recipients). The card (which must be a debit card) can be used
          as a transfer destination for funds in this currency. Currently, the only
          supported currency for debit card transfers is usd.  For bank account: Three-letter
          ISO code for the currency paid out to the bank account. '
        type: string
        x-conditionally-required-description: Required when adding a card to an account (not applicable to a customers or recipients).
        x-nullable: true
        x-samplevalue: USD
        x-sub-format: Currency
      customer:
        description: The customer that this card belongs to. This attribute will not be in the card object if the card belongs to an account or recipient instead.
        type: string
        x-readOnly: true
        x-samplevalue: cus_CURl3lB2LxHST1
      cvc_check:
        description: 'If a CVC was provided, results of the check: `pass`, `fail`,
          `unavailable`, or `unchecked`.'
        enum:
        - pass
        - fail
        - unavailable
        - unchecked
        type: string
        x-nullable: true
        x-samplevalue: pass
        x-sub-format: Enum
      default_for_currency:
        description: Whether this external account is the default account for its currency.
        type: boolean
      dynamic_last4:
        description: (For tokenized numbers only.) The last four digits of the device account number.
        type: string
        x-nullable: true
      exp_month:
        description: 'Two-digit number representing the card''s expiration month. '
        format: int32
        type: integer
        x-length: 2
        x-min-length: 2
        x-nullable: true
        x-samplevalue: 12
      exp_year:
        description: 'Two- or four-digit number representing the card''s expiration
          year. '
        format: int32
        type: integer
        x-length: 4
        x-min-length: 2
        x-nullable: true
        x-samplevalue: 2030
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same. Also, uniquely identifies this particular card number. You can use this attribute to check whether two customers who've signed up with you are using the same card number, for example.
        type: string
        x-nullable: true
        x-samplevalue: D4n6UylngSxfUnqU
      flow:
        description: The authentication `flow` of the source to create. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`. It is generally inferred unless a type supports multiple flows.
        enum:
        - code_verification
        - none
        - receiver
        - redirect
        type: string
      funding:
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        enum:
        - credit
        - debit
        - prepaid
        - unknown
        type: string
        x-nullable: true
        x-samplevalue: credit
        x-sub-format: Enum
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
      last4:
        description: The last 4 digits of the card.
        type: string
        x-nullable: true
        x-samplevalue: '4242'
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/chargesMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      name:
        description: 'Cardholder''s full name. '
        type: string
        x-name: true
        x-nullable: true
        x-samplevalue: Kane Simpson
        x-sub-format: Full Name
      object:
        description: The type of payment source. Should be card.
        enum:
        - card
        - bank_account
        - source
        type: string
        x-samplevalue: card
        x-sub-format: Enum
      owner:
        $ref: '#/definitions/chargesSourceOwner'
      receiver:
        $ref: '#/definitions/chargesSourceReceiver'
      routing_number:
        description: The routing transit number for the bank account.
        type: string
      statement_descriptor:
        description: Extra information about a payout to be displayed on the user's bank statement.
        type: string
        x-nullable: true
      status:
        description: 'Current status of the payout (`paid`, `pending`, `in_transit`,
          `canceled` or `failed`). A payout will be `pending` until it is submitted
          to the bank, at which point it becomes `in_transit`. It will then change
          to `paid` if the transaction goes through. If it does not go through successfully,
          its status will change to `failed` or `canceled`. For bank_account:  Possible
          values are new, validated, verified, verification_failed, or errored. A
          bank account that hasn?t had any activity or validation performed is new.
          If Stripe can determine that the bank account exists, its status will be
          validated. Note that there often isn?t enough information to know (e.g.,
          for smaller credit unions), and the validation is not always run. If customer
          bank account verification has succeeded, the bank account status will be
          verified. If the verification failed for any reason, such as microdeposit
          failure, the status will be verification_failed. If a transfer sent to this
          bank account fails, we?ll set the status to errored and will not continue
          to send transfers until the bank details are updated.'
        enum:
        - paid
        - in_transit
        - pending
        - cancelled
        - failed
        - new
        - validated
        - verified
        - verification_failed
        - errored
        type: string
        x-sub-format: Enum
      tokenization_method:
        description: If the card number is tokenized, this is the method that was used. Can be `apple_pay` or `android_pay`.
        enum:
        - apple_pay
        - android_pay
        type: string
        x-nullable: true
        x-sub-format: Enum
      type:
        description: The type of the source. The type is a payment method, one of ach_credit_transfer, ach_debit, alipay, bancontact, bitcoin, card, eps, giropay, ideal, multibanco, p24, sepa_debit, sofort, or three_d_secure. An additional hash is included on the source with a name matching this value. It contains additional information specific to the payment method used. .
        enum:
        - ach_credit_transfer
        - ach_debit
        - alipay
        - bancontact
        - bitcoin
        - card
        - eps
        - giropay
        - ideal
        - multibanco
        - p24
        - sepa_debit
        - sofort
        - three_d_secure
        type: string
        x-sub-format: Enum
      usage:
        description: 'Either reusable or single_use. Whether this source should be
          reusable or not. Some source types may or may not be reusable by construction,
          while other may leave the option at creation. If an incompatible value is
          passed, an error will be returned. '
        enum:
        - reusable
        - single_user
        type: string
        x-sub-format: Enum
    type: object
    x-has-customfields: true
  chargesSourceAch_credit_transfer:
    properties:
      account_number:
        type: string
        x-nullable: true
      bank_name:
        type: string
        x-nullable: true
      fingerprint:
        type: string
        x-nullable: true
      routing_number:
        type: string
        x-nullable: true
      swift_code:
        type: string
        x-nullable: true
    type: object
  chargesSourceOwner:
    properties:
      address:
        $ref: '#/definitions/chargesSourceOwnerAddress'
        description: Owner?s address.
        x-nullable: true
      email:
        description: Owner?s email address.
        type: string
        x-sub-format: Email
      name:
        description: 'Owner?s full name. '
        type: string
        x-name: true
        x-nullable: true
        x-sub-format: Full Name
      phone:
        description: 'Owner?s phone number (including extension). '
        type: string
        x-nullable: true
        x-sub-format: Phone
      verified_address:
        $ref: '#/definitions/chargesSourceOwnerAddress'
        description: Verified owner?s address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
        x-nullable: true
      verified_email:
        description: 'Verified owner?s email address. Verified values are verified
          or provided by the payment method directly (and if supported) at the time
          of authorization or settlement. They cannot be set or mutated. '
        type: string
        x-nullable: true
      verified_name:
        description: 'Verified owner?s full name. Verified values are verified or
          provided by the payment method directly (and if supported) at the time of
          authorization or settlement. They cannot be set or mutated. '
        type: string
        x-nullable: true
        x-sub-format: Full Name
      verified_phone:
        description: 'Verified owner?s phone number (including extension). Verified
          values are verified or provided by the payment method directly (and if supported)
          at the time of authorization or settlement. They cannot be set or mutated. '
        type: string
        x-nullable: true
        x-sub-format: Phone
    type: object
  chargesSourceOwnerAddress:
    properties:
      city:
        description: City/District/Suburb/Town/Village.
        type: string
        x-nullable: true
        x-sub-format: City
      country:
        description: 2-letter country code.
        type: string
        x-nullable: true
        x-sub-format: Country Code
      line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-nullable: true
        x-sub-format: Street Address
      line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
        x-nullable: true
      postal_code:
        description: ZIP or postal code
        type: string
        x-nullable: true
        x-sub-format: Postal Code
      state:
        description: State/County/Province/Region.
        type: string
        x-nullable: true
        x-sub-format: State
    type: object
    x-has-customfields: false
  chargesSourceReceiver:
    properties:
      address:
        description: The address of the receiver source. This is the value that should be communicated to the customer to send their funds to.
        type: string
        x-nullable: true
      amount_charged:
        description: The total amount that was charged by you. The amount charged is expressed in the source's currency.
        format: int32
        type: integer
        x-sub-format: Money
      amount_received:
        description: The total amount received by the receiver source. `amount_received = amount_returned + amount_charged` is true at all time. The amount received is expressed in the source's currency.
        format: int32
        type: integer
        x-sub-format: Money
      amount_returned:
        description: The total amount that was returned to the customer. The amount returned is expressed in the source's currency.
        format: int32
        type: integer
        x-sub-format: Money
      refund_attributes_method:
        enum:
        - email
        - manual
        - none
        type: string
        x-sub-format: Enum
      refund_attributes_status:
        type: string
    type: object
  connect_reservedBalResp:
    properties:
      amount:
        format: int32
        type: integer
        x-samplevalue: 8362
      currency:
        type: string
        x-samplevalue: usd
      source_types:
        $ref: '#/definitions/sourceTypesBalResp'
    title: connect_reservedBalResp
    type: object
    x-has-customfields: false
  couponmetadata:
    properties: {}
    title: metadata
    type: object
    x-has-customfields: false
  customerPatchShipping:
    properties:
      address:
        $ref: '#/definitions/customerPatchShippingAddress'
      name:
        description: Customer name.
        type: string
        x-name: true
      phone:
        description: Customer phone (including extension).
        type: string
        x-nullable: true
        x-sub-format: Phone
    required:
    - address
    - name
    type: object
  customerPatchShippingAddress:
    properties:
      city:
        description: City/District/Suburb/Town/Village.
        type: string
        x-nullable: true
        x-sub-format: City
      country:
        description: 2-letter country code.
        type: string
        x-nullable: true
        x-sub-format: Country
      line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-nullable: true
        x-sub-format: Street Address
      line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
        x-nullable: true
      postal_code:
        description: ZIP or postal code
        type: string
        x-nullable: true
        x-sub-format: Postal Code
      state:
        description: State/County/Province/Region.
        type: string
        x-nullable: true
        x-sub-format: State
    required:
    - line1
    type: object
  customerPatchSource:
    properties:
      address_city:
        description: City/District/Suburb/Town/Village.
        type: string
        x-sub-format: City
      address_country:
        description: 'Billing address country, if provided when creating card. '
        type: string
        x-samplevalue: India
        x-sub-format: Country
      address_line1:
        description: 'Address line 1 (Street address/PO Box/Company name). '
        type: string
        x-samplevalue: Street address 1
        x-sub-format: Street Address
      address_line2:
        description: 'Address line 2 (Apartment/Suite/Unit/Building). '
        type: string
        x-samplevalue: Street no 303
      address_state:
        description: 'State/County/Province/Region. '
        type: string
        x-samplevalue: Maharashtra
        x-sub-format: State
      address_zip:
        description: 'ZIP or postal code. '
        type: string
        x-samplevalue: '097213'
        x-sub-format: Postal Code
      currency:
        default: usd
        description: 'Required when adding a card to an account (not applicable to
          customers or recipients). The card (which must be a debit card) can be used
          as a transfer destination for funds in this currency. Currently, the only
          supported currency for debit card transfers is usd. '
        type: string
        x-conditionally-required-description: 'Required when adding a card to an account
          (not applicable to a customers or recipients). '
        x-samplevalue: USD
        x-sub-format: Currency
      cvc:
        description: 'Card security code. Highly recommended to always include this
          value, but it''s required only for accounts based in European countries. '
        format: int32
        type: integer
        x-conditionally-required-description: Highly recommended to always include this value, but it's only required for accounts based in European countries.
      default_for_currency:
        description: 'Applicable only on accounts (not customers or recipients). If
          you set this to true (or if this is the first external account being added
          in this currency), this card will become the default external account for
          its currency. '
        type: boolean
        x-samplevalue: true
      exp_month:
        description: ' Two-digit number representing the card''s expiration month. '
        format: int32
        type: integer
        x-length: 2
        x-min-length: 2
      exp_year:
        description: ' Two- or four-digit number representing the card''s expiration
          year.  '
        format: int32
        type: integer
        x-max-length: 4
        x-min-length: 2
      metadata:
        $ref: '#/definitions/customersMetadata'
      name:
        description: 'Cardholder''s full name. '
        type: string
        x-name: true
        x-samplevalue: Kane Simpson
      number:
        description: 'The card number, without any separators. '
        format: int64
        type: integer
      object:
        description: The type of payment source. Should be card.
        enum:
        - card
        type: string
        x-sub-format: Enum
    required:
    - object
    - exp_year
    - exp_month
    - number
    type: object
    x-has-customfields: true
  customerPostShipping:
    properties:
      address:
        $ref: '#/definitions/customerPostShippingAddress'
      name:
        description: Customer name.
        type: string
        x-name: true
      phone:
        description: Customer phone (including extension).
        type: string
        x-nullable: true
        x-sub-format: Phone
    required:
    - address
    - name
    type: object
  customerPostShippingAddress:
    properties:
      city:
        description: City/District/Suburb/Town/Village.
        type: string
        x-nullable: true
        x-sub-format: City
      country:
        description: 2-letter country code.
        type: string
        x-nullable: true
        x-sub-format: Country
      line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-conditionally-required-description: Required if given with any another field else empty address is also accepted.
        x-nullable: true
        x-sub-format: Street Address
      line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
        x-nullable: true
      postal_code:
        description: ZIP or postal code
        type: string
        x-nullable: true
        x-sub-format: Postal Code
      state:
        description: State/County/Province/Region.
        type: string
        x-nullable: true
        x-sub-format: State
    required:
    - line1
    type: object
  customerPostSource:
    properties:
      address_city:
        description: City/District/Suburb/Town/Village.
        type: string
        x-sub-format: City
      address_country:
        description: 'Billing address country, if provided when creating card. '
        type: string
        x-samplevalue: India
        x-sub-format: Country
      address_line1:
        description: 'Address line 1 (Street address/PO Box/Company name). '
        type: string
        x-samplevalue: Street address 1
        x-sub-format: Street Address
      address_line2:
        description: 'Address line 2 (Apartment/Suite/Unit/Building). '
        type: string
        x-samplevalue: Street no 303
      address_state:
        description: 'State/County/Province/Region. '
        type: string
        x-samplevalue: Maharashtra
        x-sub-format: State
      address_zip:
        description: 'ZIP or postal code. '
        type: string
        x-samplevalue: '097213'
        x-sub-format: Postal Code
      currency:
        default: usd
        description: 'Required when adding a card to an account (not applicable to
          customers or recipients). The card (which must be a debit card) can be used
          as a transfer destination for funds in this currency. Currently, the only
          supported currency for debit card transfers is usd. '
        type: string
        x-conditionally-required-description: 'Required when adding a card to an account
          (not applicable to a customers or recipients). '
        x-samplevalue: USD
        x-sub-format: Currency
      cvc:
        description: 'Card security code. Highly recommended to always include this
          value, but it''s required only for accounts based in European countries. '
        format: int32
        type: integer
        x-conditionally-required-description: Highly recommended to always include this value, but it's only required for accounts based in European countries.
      default_for_currency:
        description: 'Applicable only on accounts (not customers or recipients). If
          you set this to true (or if this is the first external account being added
          in this currency), this card will become the default external account for
          its currency. '
        type: boolean
        x-samplevalue: true
      exp_month:
        description: ' Two-digit number representing the card''s expiration month. '
        format: int32
        type: integer
        x-length: 2
        x-min-length: 2
      exp_year:
        description: ' Two- or four-digit number representing the card''s expiration
          year.  '
        format: int32
        type: integer
        x-max-length: 4
        x-min-length: 2
      metadata:
        $ref: '#/definitions/customersMetadata'
      name:
        description: 'Cardholder''s full name. '
        type: string
        x-name: true
        x-samplevalue: Kane Simpson
      number:
        description: 'The card number, without any separators. '
        format: int64
        type: integer
      object:
        description: The type of payment source. Should be card.
        enum:
        - card
        type: string
        x-sub-format: Enum
    required:
    - exp_month
    - exp_year
    - number
    - object
    type: object
    x-has-customfields: true
  customerShipping:
    properties:
      address:
        $ref: '#/definitions/customerShippingAddress'
        description: Customer shipping address.
      name:
        description: Customer name.
        type: string
        x-name: true
      phone:
        description: Customer phone (including extension).
        type: string
        x-nullable: true
        x-sub-format: Phone
    type: object
  customerShippingAddress:
    properties:
      city:
        description: City/District/Suburb/Town/Village.
        type: string
        x-nullable: true
        x-sub-format: City
      country:
        description: 2-letter country code.
        type: string
        x-nullable: true
        x-sub-format: Country
      line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-nullable: true
        x-sub-format: Street Address
      line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
        x-nullable: true
      postal_code:
        description: ZIP or postal code
        type: string
        x-nullable: true
        x-sub-format: Postal Code
      state:
        description: State/County/Province/Region.
        type: string
        x-nullable: true
        x-sub-format: State
    type: object
  customerSource:
    properties:
      cvc:
        description: 'Card security code. Highly recommended to always include this
          value, but it''s required only for accounts based in European countries. '
        format: int32
        type: integer
        x-conditionally-required-description: Highly recommended to always include this value, but it's only required for accounts based in European countries.
      exp_month:
        description: ' Two-digit number representing the card''s expiration month. '
        format: int32
        type: integer
        x-length: 2
        x-min-length: 2
      exp_year:
        description: ' Two- or four-digit number representing the card''s expiration
          year.  '
        format: int32
        type: integer
        x-max-length: 4
        x-min-length: 2
      number:
        description: 'The card number, without any separators. '
        format: int64
        type: integer
      object:
        description: The type of payment source. Should be card.
        enum:
        - card
        type: string
        x-sub-format: Enum
    type: object
  customerSources:
    properties:
      data:
        description: The list contains all payment sources that have been attached to the customer.
        items:
          $ref: '#/definitions/customerSourcesData'
        type: array
      has_more:
        description: True if this list has another page of items after this one that can be fetched.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type share the same value. Always has the value "list".
        enum:
        - list
        type: string
        x-sub-format: Enum
      total_count:
        format: int32
        type: integer
      url:
        description: The URL where this list can be accessed.
        type: string
        x-sub-format: URL
    type: object
  customerSourcesData:
    properties:
      account:
        type: string
      account_holder_name:
        description: The name of the person or business that owns the bank account.
        type: string
        x-sub-format: Full Name
      account_holder_type:
        description: The type of entity that holds the account. This can be either individual or company.
        enum:
        - individual
        - company
        type: string
        x-sub-format: Enum
      ach_credit_transfer:
        $ref: '#/definitions/customerSourcesDataAch_credit_transfer'
      address_city:
        description: 'City/District/Suburb/Town/Village. '
        type: string
        x-nullable: true
        x-sub-format: City
      address_country:
        description: Billing address country, if provided when creating card.
        type: string
        x-nullable: true
        x-samplevalue: India
        x-sub-format: Country
      address_line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-nullable: true
        x-samplevalue: Street address 1
        x-sub-format: Street Address
      address_line1_check:
        description: 'If `address_line1` was provided, results of the check: `pass`,
          `fail`, `unavailable`, or `unchecked`.'
        enum:
        - pass
        - fail
        - unavailable
        - unchecked
        type: string
        x-nullable: true
        x-sub-format: Enum
      address_line2:
        description: 'Address line 2 (Apartment/Suite/Unit/Building). '
        type: string
        x-nullable: true
        x-samplevalue: Street no 303
      address_state:
        description: 'State/County/Province/Region. '
        type: string
        x-nullable: true
        x-samplevalue: Maharashtra
        x-sub-format: State
      address_zip:
        description: ZIP or postal code.
        type: string
        x-nullable: true
        x-samplevalue: '097213'
        x-sub-format: Postal Code
      address_zip_check:
        description: 'If `address_zip` was provided, results of the check: `pass`,
          `fail`, `unavailable`, or `unchecked`.'
        enum:
        - pass
        - fail
        - unavailable
        - unchecked
        type: string
        x-nullable: true
        x-sub-format: Enum
      amount:
        description: The amount in %s to be charged on the interval specified.
        format: int32
        type: integer
        x-nullable: true
        x-sub-format: Money
      bank_name:
        description: Name of the bank associated with the routing number (e.g., WELLS FARGO).
        type: string
      brand:
        description: Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.
        enum:
        - American Express
        - Diners Club
        - Discover
        - JCB
        - MasterCard
        - UnionPay
        - Visa
        - Unknown
        type: string
        x-samplevalue: Visa
        x-sub-format: Credit Card Type
      client_secret:
        description: The client secret of the source. Used for client-side retrieval using a publishable key.
        type: string
        x-readOnly: true
        x-sample-value: src_client_secret_CUrUf9rfd6NvBezxlD3rHqGH
      country:
        description: 'The country in which the bank account is located. '
        type: string
        x-nullable: true
        x-samplevalue: US
        x-sub-format: Country
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1522395672
        x-sub-format: Date Time Epoch
      currency:
        description: 'Required when adding a card to an account (not applicable to
          customers or recipients). The card (which must be a debit card) can be used
          as a transfer destination for funds in this currency. Currently, the only
          supported currency for debit card transfers is usd.  For bank account: Three-letter
          ISO code for the currency paid out to the bank account. '
        type: string
        x-conditionally-required-description: Required when adding a card to an account (not applicable to a customers or recipients).
        x-nullable: true
        x-samplevalue: USD
        x-sub-format: Currency
      customer:
        description: The customer that this card belongs to. This attribute will not be in the card object if the card belongs to an account or recipient instead.
        type: string
        x-readOnly: true
        x-samplevalue: cus_CURl3lB2LxHST1
      cvc_check:
        description: 'If a CVC was provided, results of the check: `pass`, `fail`,
          `unavailable`, or `unchecked`.'
        enum:
        - pass
        - fail
        - unavailable
        - unchecked
        type: string
        x-nullable: true
        x-samplevalue: pass
        x-sub-format: Enum
      default_for_currency:
        description: Whether this external account is the default account for its currency.
        type: boolean
      dynamic_last4:
        description: (For tokenized numbers only.) The last four digits of the device account number.
        type: string
        x-nullable: true
      exp_month:
        description: 'Two-digit number representing the card''s expiration month. '
        format: int32
        type: integer
        x-length: 2
        x-min-length: 2
        x-nullable: true
        x-samplevalue: 12
      exp_year:
        description: 'Two- or four-digit number representing the card''s expiration
          year. '
        format: int32
        type: integer
        x-length: 4
        x-min-length: 2
        x-nullable: true
        x-samplevalue: 2030
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same. Also, uniquely identifies this particular card number. You can use this attribute to check whether two customers who've signed up with you are using the same card number, for example.
        type: string
        x-nullable: true
        x-samplevalue: D4n6UylngSxfUnqU
      flow:
        description: The authentication `flow` of the source to create. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`. It is generally inferred unless a type supports multiple flows.
        enum:
        - code_verification
        - none
        - receiver
        - redirect
        type: string
      funding:
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        enum:
        - credit
        - debit
        - prepaid
        - unknown
        type: string
        x-nullable: true
        x-samplevalue: credit
        x-sub-format: Enum
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
      last4:
        description: The last 4 digits of the card.
        type: string
        x-nullable: true
        x-samplevalue: '4242'
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/customersMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      name:
        description: 'Cardholder''s full name. '
        type: string
        x-name: true
        x-nullable: true
        x-samplevalue: Kane Simpson
        x-sub-format: Full Name
      object:
        description: The type of payment source. Should be card.
        enum:
        - card
        - bank_account
        - source
        type: string
        x-samplevalue: card
        x-sub-format: Enum
      owner:
        $ref: '#/definitions/customerSourcesDataOwner'
      receiver:
        $ref: '#/definitions/customerSourcesDataReceiver'
      routing_number:
        description: The routing transit number for the bank account.
        type: string
      statement_descriptor:
        description: Extra information about a payout to be displayed on the user's bank statement.
        type: string
        x-nullable: true
      status:
        description: 'Current status of the payout (`paid`, `pending`, `in_transit`,
          `canceled` or `failed`). A payout will be `pending` until it is submitted
          to the bank, at which point it becomes `in_transit`. It will then change
          to `paid` if the transaction goes through. If it does not go through successfully,
          its status will change to `failed` or `canceled`. For bank_account:  Possible
          values are new, validated, verified, verification_failed, or errored. A
          bank account that hasn''t had any activity or validation performed is new.
          If Stripe can determine that the bank account exists, its status will be
          validated. Note that there often isn''t enough information to know (e.g.,
          for smaller credit unions), and the validation is not always run. If customer
          bank account verification has succeeded, the bank account status will be
          verified. If the verification failed for any reason, such as microdeposit
          failure, the status will be verification_failed. If a transfer sent to this
          bank account fails, we''ll set the status to errored and will not continue
          to send transfers until the bank details are updated.'
        enum:
        - paid
        - in_transit
        - pending
        - cancelled
        - failed
        - new
        - validated
        - verified
        - verification_failed
        - errored
        type: string
        x-sub-format: Enum
      tokenization_method:
        description: If the card number is tokenized, this is the method that was used. Can be `apple_pay` or `android_pay`.
        enum:
        - apple_pay
        - android_pay
        type: string
        x-nullable: true
        x-sub-format: Enum
      type:
        description: The type of the source. The type is a payment method, one of ach_credit_transfer, ach_debit, alipay, bancontact, bitcoin, card, eps, giropay, ideal, multibanco, p24, sepa_debit, sofort, or three_d_secure. An additional hash is included on the source with a name matching this value. It contains additional information specific to the payment method used. .
        enum:
        - ach_credit_transfer
        - ach_debit
        - alipay
        - bancontact
        - bitcoin
        - card
        - eps
        - giropay
        - ideal
        - multibanco
        - p24
        - sepa_debit
        - sofort
        - three_d_secure
        type: string
        x-sub-format: Enum
      usage:
        description: 'Either reusable or single_use. Whether this source should be
          reusable or not. Some source types may or may not be reusable by construction,
          while other may leave the option at creation. If an incompatible value is
          passed, an error will be returned. '
        enum:
        - reusable
        - single_user
        type: string
        x-sub-format: Enum
    type: object
    x-has-customfields: true
  customerSourcesDataAch_credit_transfer:
    properties:
      account_number:
        type: string
        x-nullable: true
      bank_name:
        type: string
        x-nullable: true
      fingerprint:
        type: string
        x-nullable: true
      routing_number:
        type: string
        x-nullable: true
      swift_code:
        type: string
        x-nullable: true
    type: object
  customerSourcesDataOwner:
    properties:
      address:
        $ref: '#/definitions/customerSourcesDataOwnerAddress'
        description: Owner's address.
        x-nullable: true
      email:
        description: Owner's email address.
        type: string
        x-sub-format: Email
      name:
        description: 'Owner''s full name. '
        type: string
        x-name: true
        x-nullable: true
        x-sub-format: Full Name
      phone:
        description: 'Owner''s phone number (including extension). '
        type: string
        x-nullable: true
        x-sub-format: Phone
      verified_address:
        $ref: '#/definitions/customerSourcesDataOwnerAddress'
        description: Verified Owner's address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
        x-nullable: true
      verified_email:
        description: 'Verified Owner''s email address. Verified values are verified
          or provided by the payment method directly (and if supported) at the time
          of authorization or settlement. They cannot be set or mutated. '
        type: string
        x-nullable: true
      verified_name:
        description: 'Verified Owner''s full name. Verified values are verified or
          provided by the payment method directly (and if supported) at the time of
          authorization or settlement. They cannot be set or mutated. '
        type: string
        x-nullable: true
        x-sub-format: Full Name
      verified_phone:
        description: 'Verified Owner''s phone number (including extension). Verified
          values are verified or provided by the payment method directly (and if supported)
          at the time of authorization or settlement. They cannot be set or mutated. '
        type: string
        x-nullable: true
        x-sub-format: Phone
    type: object
  customerSourcesDataOwnerAddress:
    properties:
      city:
        description: City/District/Suburb/Town/Village.
        type: string
        x-nullable: true
        x-sub-format: City
      country:
        description: 2-letter country code.
        type: string
        x-nullable: true
        x-sub-format: Country Code
      line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-nullable: true
        x-sub-format: Street Address
      line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
        x-nullable: true
      postal_code:
        description: ZIP or postal code
        type: string
        x-nullable: true
        x-sub-format: Postal Code
      state:
        description: State/County/Province/Region.
        type: string
        x-nullable: true
        x-sub-format: State
    type: object
    x-has-customfields: false
  customerSourcesDataReceiver:
    properties:
      address:
        description: The address of the receiver source. This is the value that should be communicated to the customer to send their funds to.
        type: string
        x-nullable: true
      amount_charged:
        description: The total amount that was charged by you. The amount charged is expressed in the source's currency.
        format: int32
        type: integer
        x-sub-format: Money
      amount_received:
        description: The total amount received by the receiver source. `amount_received = amount_returned + amount_charged` is true at all time. The amount received is expressed in the source's currency.
        format: int32
        type: integer
        x-sub-format: Money
      amount_returned:
        description: The total amount that was returned to the customer. The amount returned is expressed in the source's currency.
        format: int32
        type: integer
        x-sub-format: Money
      refund_attributes_method:
        enum:
        - email
        - manual
        - none
        type: string
        x-sub-format: Enum
      refund_attributes_status:
        type: string
    type: object
  customerSubscriptions:
    description: The customer's current subscriptions, if any.
    properties:
      data:
        items:
          $ref: '#/definitions/customerSubscriptionsData'
        type: array
      has_more:
        description: True if this list has another page of items after this one that can be fetched.
        type: boolean
        x-samplevalue: false
      object:
        description: String representing the object's type. Objects of the same type share the same value. Always has the value "list".
        enum:
        - list
        type: string
        x-samplevalue: list
        x-sub-format: Enum
      total_count:
        format: int32
        type: integer
        x-samplevalue: 3
      url:
        description: The URL where this list can be accessed.
        type: string
        x-samplevalue: /v1/customers/cus_AaUeR69TtNbGhe/subscriptions
        x-sub-format: URL
    type: object
  customerSubscriptionsData:
    properties:
      application_fee_percent:
        description: A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account.
        format: double
        type: number
        x-nullable: true
      billing:
        description: Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions.
        enum:
        - charge_automatically
        - send_invoice
        type: string
        x-nullable: true
        x-samplevalue: charge_automatically
        x-sub-format: Enum
      billing_cycle_anchor:
        description: Determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices.
        format: int64
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-samplevalue: 1493822865
        x-sub-format: Date Time Epoch
      cancel_at_period_end:
        description: If the subscription has been canceled with the `at_period_end` flag set to `true`, `cancel_at_period_end` on the subscription will be true. You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.
        type: boolean
        x-samplevalue: false
      canceled_at:
        description: If the subscription has been canceled, the date of that cancellation. If the subscription was canceled with `cancel_at_period_end`, `canceled_at` will still reflect the date of the initial cancellation request, not the end of the subscription period when the subscription is automatically moved to a canceled state.
        format: int64
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-sub-format: Date Time Epoch
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1493822865
        x-sub-format: Date Time Epoch
      current_period_end:
        description: End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created.
        format: int64
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-samplevalue: 1522766865
        x-sub-format: Date Time Epoch
      current_period_start:
        description: Start of the current period that the subscription has been invoiced for.
        format: int64
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-samplevalue: 1520088465
        x-sub-format: Date Time Epoch
      customer:
        description: ID of the customer who owns the subscription.
        type: string
        x-samplevalue: cus_AaUeR69TtNbGhe
      days_until_due:
        description: Number of days a customer has to pay invoices generated by this subscription. This value will be `null` for subscriptions where `billing=charge_automatically`.
        format: int32
        type: integer
        x-nullable: true
      discount:
        $ref: '#/definitions/customerSubscriptionsDataDiscount'
      ended_at:
        description: If the subscription has ended, the date the subscription ended.
        format: int64
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-sub-format: Date Time Epoch
      id:
        description: Unique identifier for the object.
        type: string
        x-reference-objectname: subscriptions
        x-samplevalue: sub_AaZvRH4ehucPrl
      items:
        $ref: '#/definitions/customerSubscriptionsDataItems'
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/customersMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - subscription
        type: string
        x-samplevalue: subscription
        x-sub-format: Enum
      plan:
        $ref: '#/definitions/customerSubscriptionsDataPlan'
        description: Hash describing the plan the customer is subscribed to.
      quantity:
        description: The quantity of the plan to which the customer should be subscribed. For example, if your plan is $10/user/month, and your customer has 5 users, you could pass 5 as the quantity to have the customer charged $50 (5 x $10) monthly.
        format: int32
        type: integer
        x-nullable: true
        x-samplevalue: 1
      start:
        description: Date the most recent update to this subscription started.
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1493822865
        x-sub-format: Date Time Epoch
      status:
        description: Possible values are `trialing`, `active`, `past_due`, `canceled`, or `unpaid`. A subscription still in its trial period is `trialing` and moves to `active` when the trial period is over. If subscription `billing=charge_automatically` it becomes `past_due` when payment to renew it fails and `canceled` or `unpaid` (depending on your subscriptions settings) when Stripe has exhausted all payment retry attempts. If subscription `billing=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed.) After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.
        enum:
        - active
        - canceled
        - past_due
        - trialing
        - unpaid
        type: string
        x-samplevalue: active
        x-sub-format: Enum
      tax_percent:
        description: If provided, each invoice created by this subscription will apply the tax rate, increasing the amount billed to the customer.
        format: double
        type: number
        x-nullable: true
      trial_end:
        description: If the subscription has a trial, the end of that trial.
        format: int32
        type: integer
        x-nullable: true
      trial_start:
        description: If the subscription has a trial, the beginning of that trial.
        format: int32
        type: integer
        x-nullable: true
    type: object
    x-has-customfields: true
  customerSubscriptionsDataDiscount:
    description: Describes the current discount active on the customer, if there is one.
    properties:
      coupon:
        $ref: '#/definitions/customerSubscriptionsDataDiscountCoupon'
      customer:
        type: string
        x-nullable: true
      end:
        description: If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.
        format: int64
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-sub-format: Date Time Epoch
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - discount
        type: string
        x-sub-format: Enum
      start:
        description: Date that the coupon was applied.
        format: int64
        type: integer
        x-mask: milliseconds
        x-sample-value: 1521402844
        x-sub-format: Date Time Epoch
      subscription:
        description: The subscription that this coupon is applied to, if it is applied to a particular subscription.
        type: string
        x-nullable: true
    type: object
  customerSubscriptionsDataDiscountCoupon:
    properties:
      amount_off:
        description: Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.
        format: int32
        type: integer
        x-nullable: true
        x-sub-format: Money
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-sub-format: Date Time Epoch
      currency:
        description: If `amount_off` has been set, the three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the amount to take off.
        type: string
        x-nullable: true
        x-sub-format: Currency
      duration:
        description: One of `forever`, `once`, and `repeating`. Describes how long a customer who applies this coupon will get the discount.
        enum:
        - forever
        - once
        - repeating
        type: string
        x-sub-format: Enum
      duration_in_months:
        description: If `duration` is `repeating`, the number of months the coupon applies. Null if coupon `duration` is `forever` or `once`.
        format: int32
        type: integer
        x-nullable: true
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
      max_redemptions:
        description: Maximum number of times this coupon can be redeemed, in total, before it is no longer valid.
        format: int32
        type: integer
        x-nullable: true
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - coupon
        type: string
        x-sub-format: Enum
      percent_off:
        description: Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For example, a coupon with percent_off of 50 will make a %s100 invoice %s50 instead.
        format: int32
        type: integer
        x-nullable: true
      percent_off_precise:
        format: int32
        type: integer
        x-nullable: true
      redeem_by:
        description: Date after which the coupon can no longer be redeemed.
        format: int32
        type: integer
        x-nullable: true
      times_redeemed:
        description: Number of times this coupon has been applied to a customer.
        format: int32
        type: integer
      valid:
        description: Taking account of the above properties, whether this coupon can still be applied to a customer.
        type: boolean
    type: object
    x-has-customfields: true
  customerSubscriptionsDataItems:
    properties:
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-sub-format: Date Time Epoch
      data:
        items:
          $ref: '#/definitions/customerSubscriptionsDataItemsData'
        type: array
      has_more:
        type: boolean
        x-samplevalue: false
      id:
        description: Unique identifier for the object.
        type: string
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - subscription_item
        type: string
        x-sub-format: Enum
      plan:
        $ref: '#/definitions/customerSubscriptionsDataPlan'
      quantity:
        description: The [quantity](/docs/subscriptions/quantities) of the plan to which the customer should be subscribed.
        format: int32
        type: integer
      subscription:
        type: string
        x-nullable: true
      total_count:
        format: int32
        type: integer
        x-samplevalue: 1
      url:
        type: string
        x-samplevalue: /v1/subscription_items?subscription=sub_CdG5vocVkZWadi
    type: object
    x-has-customfields: true
  customerSubscriptionsDataItemsData:
    properties:
      created:
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1521116764
        x-sub-format: Date Time Epoch
      id:
        type: string
        x-samplevalue: si_ChYupUwLxFaS5a
      object:
        type: string
        x-samplevalue: subscription_item
      plan:
        $ref: '#/definitions/customerSubscriptionsDataPlan'
      quantity:
        format: int32
        type: integer
        x-samplevalue: 1
      subscription:
        type: string
        x-samplevalue: sub_ChYuXE3HraDCeq
    type: object
    x-has-customfields: false
  customerSubscriptionsDataPlan:
    properties:
      amount:
        description: The amount in %s to be charged on the interval specified.
        format: int32
        type: integer
        x-nullable: true
        x-samplevalue: 5000
        x-sub-format: Money
      billing_scheme:
        description: 'Describes how to compute the price per period. Either per_unit
          or tiered. per_unit indicates that the fixed amount (specified in amount)
          will be charged per unit in quantity (for plans with usage_type=licensed),
          or per unit of total usage (for plans with usage_type=metered). tiered indicates
          that the unit pricing will be computed using a tiering strategy as defined
          using the tiers and tiers_mode attributes. '
        enum:
        - tiered
        - per_unit
        type: string
        x-conditionally-required-description: The `tiers` parameter requires billing_scheme to be set to tiered.
        x-sub-format: Enum
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1521116764
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        enum:
        - aud
        - eur
        - dkk
        - gbp
        - nok
        - sek
        - usd
        - chf
        - brl
        - cad
        - hkd
        - jpy
        - mxn
        - nzd
        - sgd
        type: string
        x-samplevalue: usd
        x-sub-format: Currency Code
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
        x-samplevalue: ruby-jar2
      interval:
        description: One of `day`, `week`, `month` or `year`. The frequency with which a subscription should be billed.
        enum:
        - day
        - week
        - month
        - year
        type: string
        x-samplevalue: month
        x-sub-format: Enum
      interval_count:
        description: The number of intervals (specified in the `interval` property) between each subscription billing. For example, `interval=month` and `interval_count=3` bills every 3 months.
        format: int32
        type: integer
        x-samplevalue: 1
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      name:
        type: string
        x-name: true
        x-samplevalue: Ruby Jar
      nickname:
        description: A brief description of the plan, hidden from customers.
        type: string
        x-nullable: true
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - plan
        type: string
        x-samplevalue: plan
        x-sub-format: Enum
      product:
        description: The product whose pricing this plan determines.
        type: string
        x-nullable: true
        x-readOnly: true
        x-samplevalue: prod_CUuzW7XOYFkRlX
      statement_descriptor:
        description: Extra information about a product which will appear on your customer's credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used. Only available on products of type=`service`.
        type: string
        x-nullable: true
      tiers:
        description: Each element represents a pricing tier. This parameter requires billing_scheme to be set to tiered
        items:
          $ref: '#/definitions/customerSubscriptionsDataPlanTiers'
        type: array
      tiers_mode:
        description: 'Defines if the tiering price should be graduated or volume based.
          In volume-based tiering, the maximum quantity within a period determines
          the per unit price, in graduated tiering pricing can successively change
          as the quantity grows. '
        enum:
        - graduated
        - volume
        type: string
        x-sub-format: Enum
      transform_usage:
        $ref: '#/definitions/customerSubscriptionsDataPlanTransformUsage'
        description: Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with tiers.
      trial_period_days:
        description: 'Integer representing the number of trial period days before
          the customer is charged for the first time. '
        format: int32
        type: integer
      usage_type:
        default: licensed
        description: 'Configures how the quantity per period should be determined,
          can be either metered or licensed. licensed will automatically bill the
          quantity set for a plan when adding it to a subscription, metered will aggregate
          the total usage based on usage records. Defaults to licensed. '
        enum:
        - metered
        - licensed
        type: string
        x-sub-format: Enum
    type: object
    x-has-customfields: true
  customerSubscriptionsDataPlanTiers:
    properties:
      amount:
        description: 'The per unit billing amount for each individual unit for which
          this tier applies. '
        type: string
        x-sub-format: Money
      up_to:
        description: 'Specifies the upper bound of this tier. The lower bound of a
          tier is the upper bound of the previous tier adding one. Use inf to define
          a fallback tier. '
        type: string
    type: object
    x-has-customfields: false
  customerSubscriptionsDataPlanTransformUsage:
    properties:
      divide_by:
        description: 'Divide usage by this number. '
        format: int32
        type: integer
      round:
        description: After division, either round the result up or down.
        enum:
        - up
        - down
        type: string
        x-sub-format: Enum
    type: object
    x-has-customfields: false
  customers:
    properties:
      account_balance:
        description: Current balance, if any, being stored on the customer's account. If negative, the customer has credit to apply to the next invoice. If positive, the customer has an amount owed that will be added to the next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account for recurring billing purposes (i.e., subscriptions, invoices, invoice items).
        format: int32
        type: integer
      business_vat_id:
        description: The customer's VAT identification number. Appears on invoices emailed to this customer.
        type: string
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1522395672
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.
        type: string
        x-nullable: true
        x-sub-format: Currency
      default_source:
        description: ID of the default source attached to this customer.
        type: string
        x-nullable: true
        x-samplevalue: card_1AFJf2GdZbyQGmEeiTuNewxi
      delinquent:
        description: When the customer's latest invoice is billed by charging automatically, delinquent is true if the invoice's latest charge is failed. When the customer's latest invoice is billed by sending an invoice, delinquent is true if the invoice is not paid by its due date.
        type: boolean
        x-nullable: true
        x-readOnly: true
      description:
        description: An arbitrary string attached to the object. Often useful for displaying to users.
        type: string
        x-nullable: true
      discount:
        $ref: '#/definitions/customerSubscriptionsDataDiscount'
        description: Describes the current discount active on the customer, if there is one.
        x-nullable: true
      email:
        description: The customer's email address.
        type: string
        x-name: true
        x-nullable: true
        x-sub-format: Email
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
      invoice_prefix:
        description: The prefix for the customer used to generate unique invoice numbers.
        type: string
        x-nullable: true
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
      metadata:
        $ref: '#/definitions/customersMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - customer
        type: string
        x-sub-format: Enum
      quantity:
        format: int32
        type: integer
      shipping:
        $ref: '#/definitions/customerShipping'
        description: 'Mailing and shipping address for the customer. Appears on invoices
          emailed to this customer. '
      source:
        $ref: '#/definitions/customerSource'
      sources:
        $ref: '#/definitions/customerSources'
        description: 'The customer''s payment sources, if any. '
      subscriptions:
        $ref: '#/definitions/customerSubscriptions'
        description: The customer's current subscriptions, if any.
      tax_info:
        $ref: '#/definitions/tax_infoResp'
        description: The customer�s tax information. Appears on invoices emailed to this customer
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: customers
  customersListObject:
    properties:
      account_balance:
        description: Current balance, if any, being stored on the customer's account. If negative, the customer has credit to apply to the next invoice. If positive, the customer has an amount owed that will be added to the next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account for recurring billing purposes (i.e., subscriptions, invoices, invoice items).
        format: int32
        type: integer
      business_vat_id:
        description: The customer's VAT identification number. Appears on invoices emailed to this customer.
        type: string
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1522395672
        x-searchable: true
        x-searchable-operators:
        - =
        - '>'
        - <
        - '>='
        - <=
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.
        type: string
        x-nullable: true
        x-sub-format: Currency
      default_source:
        description: ID of the default source attached to this customer.
        type: string
        x-nullable: true
        x-samplevalue: card_1AFJf2GdZbyQGmEeiTuNewxi
      delinquent:
        description: When the customer's latest invoice is billed by charging automatically, delinquent is true if the invoice's latest charge is failed. When the customer's latest invoice is billed by sending an invoice, delinquent is true if the invoice is not paid by its due date.
        type: boolean
        x-nullable: true
        x-readOnly: true
        x-searchable: true
        x-searchable-operators:
        - =
      description:
        description: An arbitrary string attached to the object. Often useful for displaying to users.
        type: string
        x-nullable: true
      discount:
        $ref: '#/definitions/customerSubscriptionsDataDiscount'
        description: Describes the current discount active on the customer, if there is one.
        x-nullable: true
      email:
        description: The customer's email address.
        type: string
        x-name: true
        x-nullable: true
        x-searchable: true
        x-searchable-operators:
        - =
        x-sub-format: Email
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
      invoice_prefix:
        description: The prefix for the customer used to generate unique invoice numbers.
        type: string
        x-nullable: true
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
      metadata:
        $ref: '#/definitions/customersMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - customer
        type: string
        x-sub-format: Enum
      quantity:
        format: int32
        type: integer
      shipping:
        $ref: '#/definitions/customerShipping'
        description: 'Mailing and shipping address for the customer. Appears on invoices
          emailed to this customer. '
      source:
        $ref: '#/definitions/customerSource'
      sources:
        $ref: '#/definitions/customerSources'
        description: 'The customer''s payment sources, if any. '
      subscriptions:
        $ref: '#/definitions/customerSubscriptions'
        description: The customer's current subscriptions, if any.
      tax_info:
        $ref: '#/definitions/tax_infoResp'
        description: The customer�s tax information. Appears on invoices emailed to this customer
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-searchable: true
    x-searchable-joins:
    - and
    x-vendor-objectname: customers
  customersMetadata:
    description: A set of key/value pairs that you can attach to a customer object. It can be useful for storing additional information about the customer in a structured format.
    properties: {}
    type: object
    x-has-customfields: true
  customersPatch:
    properties:
      account_balance:
        description: An integer amount in %s that is the starting account balance for your customer. A negative amount represents a credit that will be used before attempting any charges to the customer's card; a positive amount will be added to the next invoice.
        format: int32
        type: integer
      business_vat_id:
        description: The customer's VAT identification number. If you are using Relay, this field gets passed to tax provider you are using for your orders.
        type: string
      coupon:
        description: If you provide a coupon code, the customer will have a discount applied on all recurring charges. Charges you create through the API will not have the discount.
        type: string
        x-samplevalue: 25OFF
      default_source:
        type: string
      description:
        description: An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
        type: string
      email:
        description: Customer's email address. It's displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to *512 characters*.
        type: string
        x-length: 512
        x-name: true
        x-sub-format: Email
      invoice_prefix:
        description: The prefix for the customer used to generate unique invoice numbers.
        type: string
        x-nullable: true
      metadata:
        $ref: '#/definitions/customersMetadata'
        description: A set of key/value pairs that you can attach to a customer object. It can be useful for storing additional information about the customer in a structured format.
      shipping:
        $ref: '#/definitions/customerPatchShipping'
      source:
        $ref: '#/definitions/customerPatchSource'
      tax_info:
        $ref: '#/definitions/tax_info'
        description: The customer�s tax information. Appears on invoices emailed to this customer
    type: object
    x-has-customfields: true
    x-vendor-objectname: customers
  customersPatchResp:
    properties:
      account_balance:
        description: Current balance, if any, being stored on the customer's account. If negative, the customer has credit to apply to the next invoice. If positive, the customer has an amount owed that will be added to the next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account for recurring billing purposes (i.e., subscriptions, invoices, invoice items).
        format: int32
        type: integer
      business_vat_id:
        description: The customer's VAT identification number. Appears on invoices emailed to this customer.
        type: string
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1522395672
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.
        type: string
        x-nullable: true
        x-sub-format: Currency
      default_source:
        description: ID of the default source attached to this customer.
        type: string
        x-nullable: true
        x-samplevalue: card_1AFJf2GdZbyQGmEeiTuNewxi
      delinquent:
        description: When the customer's latest invoice is billed by charging automatically, delinquent is true if the invoice's latest charge is failed. When the customer's latest invoice is billed by sending an invoice, delinquent is true if the invoice is not paid by its due date.
        type: boolean
        x-nullable: true
        x-readOnly: true
      description:
        description: An arbitrary string attached to the object. Often useful for displaying to users.
        type: string
        x-nullable: true
      discount:
        $ref: '#/definitions/customerSubscriptionsDataDiscount'
        description: Describes the current discount active on the customer, if there is one.
        x-nullable: true
      email:
        description: The customer's email address.
        type: string
        x-name: true
        x-nullable: true
        x-sub-format: Email
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
      invoice_prefix:
        description: The prefix for the customer used to generate unique invoice numbers.
        type: string
        x-nullable: true
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
      metadata:
        $ref: '#/definitions/customersMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - customer
        type: string
        x-sub-format: Enum
      quantity:
        format: int32
        type: integer
      shipping:
        $ref: '#/definitions/customerShipping'
        description: 'Mailing and shipping address for the customer. Appears on invoices
          emailed to this customer. '
      source:
        $ref: '#/definitions/customerSource'
      sources:
        $ref: '#/definitions/customerSources'
        description: 'The customer''s payment sources, if any. '
      subscriptions:
        $ref: '#/definitions/customerSubscriptions'
        description: The customer's current subscriptions, if any.
      tax_info:
        $ref: '#/definitions/tax_infoResp'
        description: The customer�s tax information. Appears on invoices emailed to this customer
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: customers
  customersPaymentMethodBank_account:
    properties:
      account_holder_name:
        description: 'The name of the person or business that owns the bank account.
          This field is required when attaching the bank account to a Customer object. '
        type: string
        x-samplevalue: Jane Austen
      account_holder_type:
        description: 'The type of entity that holds the account. This can be either
          individual or company. This field is required when attaching the bank account
          to a Customer object. '
        enum:
        - individual
        - company
        type: string
        x-samplevalue: individual
        x-sub-format: enum
      account_number:
        description: 'The account number for the bank account, in string form. Must
          be a checking account. '
        type: string
        x-samplevalue: acct_78j8817654
      country:
        description: 'The country in which the bank account is located. '
        enum:
        - AU
        - AT
        - BE
        - BR
        - CA
        - DK
        - FI
        - FR
        - DE
        - HK
        - IE
        - IT
        - JP
        - LU
        - MX
        - NL
        - NZ
        - 'NO'
        - PT
        - SG
        - ES
        - SE
        - CH
        - GB
        - US
        type: string
        x-nullable: true
        x-samplevalue: US
        x-sub-format: Country
      currency:
        description: 'The currency the bank account is in. '
        enum:
        - aud
        - eur
        - dkk
        - gbp
        - nok
        - sek
        - usd
        - chf
        - brl
        - cad
        - hkd
        - jpy
        - mxn
        - nzd
        - sgd
        type: string
        x-nullable: true
        x-samplevalue: usd
        x-sub-format: Currency
      default_for_currency:
        description: 'Applicable only on accounts (not customers or recipients). If
          you set this to true (or if this is the first external account being added
          in this currency), this card will become the default external account for
          its currency. '
        type: boolean
        x-nullable: true
        x-samplevalue: false
      object:
        description: 'The type of external account. Should be bank_account. '
        enum:
        - bank_account
        type: string
        x-sub-format: enum
      routing_number:
        description: 'The routing number, sort code, or other country-appropriate
          institution number for the bank account. For US bank accounts, this is required
          and should be the ACH routing number, not the wire routing number. If you
          are providing an IBAN for account_number, this field is not required. '
        type: string
        x-conditionally-required-description: For US bank accounts, this is required and should be the ACH routing number, not the wire routing number.
        x-nullable: true
        x-samplevalue: '110000000'
    required:
    - account_number
    - country
    - currency
    - account_holder_name
    - account_holder_type
    title: customersPaymentMethodBank_account
    type: object
    x-has-customfields: true
  customersPaymentMethodPatchBank_account:
    properties:
      account_holder_name:
        description: 'The name of the person or business that owns the bank account.
          This field is required when attaching the bank account to a Customer object. '
        type: string
        x-samplevalue: Jane Austen
      account_holder_type:
        description: 'The type of entity that holds the account. This can be either
          individual or company. This field is required when attaching the bank account
          to a Customer object. '
        enum:
        - individual
        - company
        type: string
        x-samplevalue: individual
        x-sub-format: enum
      metadata:
        $ref: '#/definitions/customersPaymentMethodsMetadata'
    title: customersPaymentMethodPatchBank_account
    type: object
    x-has-customfields: true
  customersPaymentMethods:
    properties:
      account:
        type: string
      account_holder_name:
        description: The name of the person or business that owns the bank account.
        type: string
        x-sub-format: Full Name
      account_holder_type:
        description: The type of entity that holds the account. This can be either individual or company.
        enum:
        - individual
        - company
        type: string
        x-sub-format: Enum
      ach_credit_transfer:
        $ref: '#/definitions/customersPaymentMethodsAch_credit_transfer'
      address_city:
        description: 'City/District/Suburb/Town/Village. '
        type: string
        x-nullable: true
        x-sub-format: City
      address_country:
        description: Billing address country, if provided when creating card.
        type: string
        x-nullable: true
        x-samplevalue: India
        x-sub-format: Country
      address_line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-nullable: true
        x-samplevalue: Street address 1
        x-sub-format: Street Address
      address_line1_check:
        description: 'If `address_line1` was provided, results of the check: `pass`,
          `fail`, `unavailable`, or `unchecked`.'
        enum:
        - pass
        - fail
        - unavailable
        - unchecked
        type: string
        x-nullable: true
        x-sub-format: Enum
      address_line2:
        description: 'Address line 2 (Apartment/Suite/Unit/Building). '
        type: string
        x-nullable: true
        x-samplevalue: Street no 303
      address_state:
        description: 'State/County/Province/Region. '
        type: string
        x-nullable: true
        x-samplevalue: Maharashtra
        x-sub-format: State
      address_zip:
        description: ZIP or postal code.
        type: string
        x-nullable: true
        x-samplevalue: '097213'
        x-sub-format: Postal Code
      address_zip_check:
        description: 'If `address_zip` was provided, results of the check: `pass`,
          `fail`, `unavailable`, or `unchecked`.'
        enum:
        - pass
        - fail
        - unavailable
        - unchecked
        type: string
        x-nullable: true
        x-sub-format: Enum
      amount:
        description: The amount in %s to be charged on the interval specified.
        format: int32
        type: integer
        x-nullable: true
        x-sub-format: Money
      bank_name:
        description: Name of the bank associated with the routing number (e.g., WELLS FARGO).
        type: string
      brand:
        description: Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.
        enum:
        - American Express
        - Diners Club
        - Discover
        - JCB
        - MasterCard
        - UnionPay
        - Visa
        - Unknown
        type: string
        x-samplevalue: Visa
        x-sub-format: Credit Card Type
      client_secret:
        description: The client secret of the source. Used for client-side retrieval using a publishable key.
        type: string
        x-readOnly: true
        x-sample-value: src_client_secret_CUrUf9rfd6NvBezxlD3rHqGH
      country:
        description: 'The country in which the bank account is located. '
        type: string
        x-nullable: true
        x-samplevalue: US
        x-sub-format: Country
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int32
        type: integer
        x-mask: epoch
        x-samplevalue: 1522395672
        x-sub-format: Date Time Epoch
      currency:
        description: 'Required when adding a card to an account (not applicable to
          customers or recipients). The card (which must be a debit card) can be used
          as a transfer destination for funds in this currency. Currently, the only
          supported currency for debit card transfers is usd.  For bank account: Three-letter
          ISO code for the currency paid out to the bank account. '
        type: string
        x-conditionally-required-description: Required when adding a card to an account (not applicable to a customers or recipients).
        x-nullable: true
        x-samplevalue: USD
        x-sub-format: Currency
      customer:
        description: The customer that this card belongs to. This attribute will not be in the card object if the card belongs to an account or recipient instead.
        type: string
        x-readOnly: true
        x-samplevalue: cus_CURl3lB2LxHST1
      cvc_check:
        description: 'If a CVC was provided, results of the check: `pass`, `fail`,
          `unavailable`, or `unchecked`.'
        enum:
        - pass
        - fail
        - unavailable
        - unchecked
        type: string
        x-nullable: true
        x-samplevalue: pass
        x-sub-format: Enum
      default_for_currency:
        description: Whether this external account is the default account for its currency.
        type: boolean
      dynamic_last4:
        description: (For tokenized numbers only.) The last four digits of the device account number.
        type: string
        x-nullable: true
      exp_month:
        description: 'Two-digit number representing the card''s expiration month. '
        format: int32
        type: integer
        x-length: 2
        x-min-length: 2
        x-nullable: true
        x-samplevalue: 12
      exp_year:
        description: 'Two- or four-digit number representing the card''s expiration
          year. '
        format: int32
        type: integer
        x-length: 4
        x-min-length: 2
        x-nullable: true
        x-samplevalue: 2030
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same. Also, uniquely identifies this particular card number. You can use this attribute to check whether two customers who've signed up with you are using the same card number, for example.
        type: string
        x-nullable: true
        x-samplevalue: D4n6UylngSxfUnqU
      flow:
        description: The authentication `flow` of the source to create. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`. It is generally inferred unless a type supports multiple flows.
        enum:
        - code_verification
        - none
        - receiver
        - redirect
        type: string
      funding:
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        enum:
        - credit
        - debit
        - prepaid
        - unknown
        type: string
        x-nullable: true
        x-samplevalue: credit
        x-sub-format: Enum
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
      last4:
        description: The last 4 digits of the card.
        type: string
        x-nullable: true
        x-samplevalue: '4242'
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/customersPaymentMethodsMetadata'
      name:
        description: 'Cardholder''s full name. '
        type: string
        x-name: true
        x-nullable: true
        x-samplevalue: Kane Simpson
        x-sub-format: Full Name
      object:
        description: The type of payment source. Should be card.
        enum:
        - card
        - bank_account
        - source
        type: string
        x-samplevalue: card
        x-sub-format: Enum
      owner:
        $ref: '#/definitions/customersPaymentMethodsOwner'
      receiver:
        $ref: '#/definitions/customersPaymentMethodsReceiver'
      routing_number:
        description: The routing transit number for the bank account.
        type: string
      statement_descriptor:
        description: Extra information about a payout to be displayed on the user's bank statement.
        type: string
        x-nullable: true
      status:
        description: 'Current status of the payout (`paid`, `pending`, `in_transit`,
          `canceled` or `failed`). A payout will be `pending` until it is submitted
          to the bank, at which point it becomes `in_transit`. It will then change
          to `paid` if the transaction goes through. If it does not go through successfully,
          its status will change to `failed` or `canceled`. For bank_account:  Possible
          values are new, validated, verified, verification_failed, or errored. A
          bank account that hasn''t had any activity or validation performed is new.
          If Stripe can determine that the bank account exists, its status will be
          validated. Note that there often isn''t enough information to know (e.g.,
          for smaller credit unions), and the validation is not always run. If customer
          bank account verification has succeeded, the bank account status will be
          verified. If the verification failed for any reason, such as microdeposit
          failure, the status will be verification_failed. If a transfer sent to this
          bank account fails, we''ll set the status to errored and will not continue
          to send transfers until the bank details are updated.'
        enum:
        - paid
        - in_transit
        - pending
        - cancelled
        - failed
        - new
        - validated
        - verified
        - verification_failed
        - errored
        type: string
        x-sub-format: Enum
      tokenization_method:
        description: If the card number is tokenized, this is the method that was used. Can be `apple_pay` or `android_pay`.
        enum:
        - apple_pay
        - android_pay
        type: string
        x-nullable: true
        x-sub-format: Enum
      type:
        description: The type of the source. The type is a payment method, one of ach_credit_transfer, ach_debit, alipay, bancontact, bitcoin, card, eps, giropay, ideal, multibanco, p24, sepa_debit, sofort, or three_d_secure. An additional hash is included on the source with a name matching this value. It contains additional information specific to the payment method used. .
        enum:
        - ach_credit_transfer
        - ach_debit
        - alipay
        - bancontact
        - bitcoin
        - card
        - eps
        - giropay
        - ideal
        - multibanco
        - p24
        - sepa_debit
        - sofort
        - three_d_secure
        type: string
        x-sub-format: Enum
      usage:
        description: 'Either reusable or single_use. Whether this source should be
          reusable or not. Some source types may or may not be reusable by construction,
          while other may leave the option at creation. If an incompatible value is
          passed, an error will be returned. '
        enum:
        - reusable
        - single_user
        type: string
        x-sub-format: Enum
    title: customersPaymentMethods
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: sources
  customersPaymentMethodsAch_credit_transfer:
    properties:
      account_number:
        type: string
        x-nullable: true
      bank_name:
        type: string
        x-nullable: true
      fingerprint:
        type: string
        x-nullable: true
      routing_number:
        type: string
        x-nullable: true
      swift_code:
        type: string
        x-nullable: true
    title: customersPaymentMethodsAch_credit_transfer
    type: object
  customersPaymentMethodsCard:
    properties:
      address_city:
        description: 'City/District/Suburb/Town/Village. '
        type: string
        x-nullable: true
        x-sub-format: City
      address_country:
        description: Billing address country, if provided when creating card.
        type: string
        x-nullable: true
        x-samplevalue: India
        x-sub-format: Country
      address_line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-nullable: true
        x-samplevalue: Street address 1
        x-sub-format: Street Address
      address_line2:
        description: 'Address line 2 (Apartment/Suite/Unit/Building). '
        type: string
        x-nullable: true
        x-samplevalue: Street no 303
      address_state:
        description: 'State/County/Province/Region. '
        type: string
        x-nullable: true
        x-samplevalue: Maharashtra
        x-sub-format: State
      address_zip:
        description: ZIP or postal code.
        type: string
        x-nullable: true
        x-samplevalue: '097213'
        x-sub-format: Postal Code
      currency:
        description: 'Required when adding a card to an account (not applicable to
          customers or recipients). The card (which must be a debit card) can be used
          as a transfer destination for funds in this currency. Currently, the only
          supported currency for debit card transfers is usd. '
        type: string
        x-conditionally-required-description: 'Required when adding a card to an account
          (not applicable to a customers or recipients). '
        x-nullable: true
        x-samplevalue: USD
        x-sub-format: Currency
      cvc:
        description: 'Card security code. Highly recommended to always include this
          value, but it''s required only for accounts based in European countries. '
        format: int32
        type: integer
        x-conditionally-required-description: Highly recommended to always include this value, but it's only required for accounts based in European countries.
      default_for_currency:
        description: 'Applicable only on accounts (not customers or recipients). If
          you set this to true (or if this is the first external account being added
          in this currency), this card will become the default external account for
          its currency. '
        type: boolean
        x-nullable: true
        x-samplevalue: true
      exp_month:
        description: 'Two-digit number representing the card''s expiration month. '
        format: int32
        type: integer
        x-length: 2
        x-min-length: 2
        x-nullable: true
      exp_year:
        description: 'Two- or four-digit number representing the card''s expiration
          year. '
        format: int32
        type: integer
        x-length: 4
        x-min-length: 2
        x-nullable: true
      metadata:
        $ref: '#/definitions/customersPaymentMethodsPostMetadata'
      name:
        description: 'Cardholder''s full name. '
        type: string
        x-name: true
        x-nullable: true
        x-samplevalue: Kane Simpson
      number:
        description: 'The card number, as a string without any separators. '
        format: int64
        type: integer
      object:
        description: The type of payment source. Should be card.
        enum:
        - card
        type: string
        x-sub-format: Enum
    required:
    - object
    - exp_year
    - exp_month
    - number
    title: customersPaymentMethodsCard
    type: object
    x-has-customfields: true
  customersPaymentMethodsMetadata:
    description: 'Set of key-value pairs that you can attach to an object. This can
      be useful for storing additional information about the object in a structured
      format. '
    properties: {}
    title: customersPaymentMethodsMetadata
    type: object
    x-has-customfields: true
  customersPaymentMethodsOwner:
    properties:
      address:
        $ref: '#/definitions/customersPaymentMethodsOwnerAddress'
        description: Owner's address.
        x-nullable: true
      email:
        description: Owner's email address.
        type: string
        x-sub-format: Email
      name:
        description: 'Owner''s full name. '
        type: string
        x-name: true
        x-nullable: true
        x-sub-format: Full Name
      phone:
        description: 'Owner''s phone number (including extension). '
        type: string
        x-nullable: true
        x-sub-format: Phone
      verified_address:
        $ref: '#/definitions/customersPaymentMethodsOwnerAddress'
        description: Verified Owner's address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
        x-nullable: true
      verified_email:
        description: 'Verified Owner''s email address. Verified values are verified
          or provided by the payment method directly (and if supported) at the time
          of authorization or settlement. They cannot be set or mutated. '
        type: string
        x-nullable: true
      verified_name:
        description: 'Verified Owner''s full name. Verified values are verified or
          provided by the payment method directly (and if supported) at the time of
          authorization or settlement. They cannot be set or mutated. '
        type: string
        x-nullable: true
        x-sub-format: Full Name
      verified_phone:
        description: 'Verified Owner''s phone number (including extension). Verified
          values are verified or provided by the payment method directly (and if supported)
          at the time of authorization or settlement. They cannot be set or mutated. '
        type: string
        x-nullable: true
        x-sub-format: Phone
    title: customersPaymentMethodsOwner
    type: object
  customersPaymentMethodsOwnerAddress:
    properties:
      city:
        description: City/District/Suburb/Town/Village.
        type: string
        x-nullable: true
        x-sub-format: City
      country:
        description: 2-letter country code.
        type: string
        x-nullable: true
        x-sub-format: Country Code
      line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-nullable: true
        x-sub-format: Street Address
      line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
        x-nullable: true
      postal_code:
        description: ZIP or postal code
        type: string
        x-nullable: true
        x-sub-format: Postal Code
      state:
        description: State/County/Province/Region.
        type: string
        x-nullable: true
        x-sub-format: State
    title: customersPaymentMethodsOwnerAddress
    type: object
    x-has-customfields: false
  customersPaymentMethodsPatch:
    properties:
      bank_account:
        $ref: '#/definitions/customersPaymentMethodPatchBank_account'
        description: |2-
           These bank accounts are payment methods on Customer objects.

          External Accounts are transfer destinations on Account objects for Custom accounts. They can be bank accounts or debit cards as well. You can only update one of source(token), card or bank_account
      card:
        $ref: '#/definitions/customersPaymentMethodsPatchCard'
        description: If the card's owner has no default card, then the new card will become the default. However, if the owner already has a default, then it will not change. To change the default, you should either update the customer to have a new default_source, or update the recipient to have a new default_card. You can only update one of source(token), card or bank_account
      source:
        $ref: '#/definitions/customersPaymentMethodsPatchSource'
        description: 'Source objects allow you to accept a variety of payment methods.
          They represent a customer''s payment instrument and can be used with the
          Stripe API just like a Card object: once chargeable, they can be charged,
          or attached to customers. You can only update one of source(token), card
          or bank_account'
    title: customersPaymentMethodsPatch
    type: object
    x-has-customfields: true
    x-vendor-objectname: sources
  customersPaymentMethodsPatchCard:
    properties:
      address_city:
        description: 'City/District/Suburb/Town/Village. '
        type: string
        x-nullable: true
        x-sub-format: City
      address_country:
        description: Billing address country, if provided when creating card.
        type: string
        x-nullable: true
        x-samplevalue: India
        x-sub-format: Country
      address_line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-nullable: true
        x-samplevalue: Street address 1
        x-sub-format: Street Address
      address_line2:
        description: 'Address line 2 (Apartment/Suite/Unit/Building). '
        type: string
        x-nullable: true
        x-samplevalue: Street no 303
      address_state:
        description: 'State/County/Province/Region. '
        type: string
        x-nullable: true
        x-samplevalue: Maharashtra
        x-sub-format: State
      address_zip:
        description: ZIP or postal code.
        type: string
        x-nullable: true
        x-samplevalue: '097213'
        x-sub-format: Postal Code
      exp_month:
        description: 'Two-digit number representing the card''s expiration month. '
        format: int32
        type: integer
        x-length: 2
        x-min-length: 2
        x-nullable: true
      exp_year:
        description: 'Two- or four-digit number representing the card''s expiration
          year. '
        format: int32
        type: integer
        x-length: 4
        x-min-length: 2
        x-nullable: true
      metadata:
        $ref: '#/definitions/customersPaymentMethodsMetadata'
      name:
        description: 'Cardholder''s full name. '
        type: string
        x-name: true
        x-nullable: true
        x-samplevalue: Kane Simpson
        x-sub-format: Full Name
    title: customersPaymentMethodsPatchCard
    type: object
    x-has-customfields: true
  customersPaymentMethodsPatchOwnerAddress:
    properties:
      city:
        description: City/District/Suburb/Town/Village.
        type: string
        x-nullable: true
        x-sub-format: City
      country:
        description: 2-letter country code.
        type: string
        x-nullable: true
        x-sub-format: Country Code
      line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-nullable: true
        x-sub-format: Street Address
      line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
        x-nullable: true
      postal_code:
        description: ZIP or postal code
        type: string
        x-nullable: true
        x-sub-format: Postal Code
      state:
        description: State/County/Province/Region.
        type: string
        x-nullable: true
        x-sub-format: State
    required:
    - line1
    title: customersPaymentMethodsPatchOwnerAddress
    type: object
    x-has-customfields: false
  customersPaymentMethodsPatchSource:
    properties:
      metadata:
        $ref: '#/definitions/customersPaymentMethodsMetadata'
      owner:
        $ref: '#/definitions/customersPaymentMethodsPatchSourceOwner'
        description: Information about the owner of the payment instrument that may be used or required by particular source types.
    title: customersPaymentMethodsPatchSource
    type: object
    x-has-customfields: true
  customersPaymentMethodsPatchSourceOwner:
    properties:
      address:
        $ref: '#/definitions/customersPaymentMethodsPatchOwnerAddress'
        description: Owner’s address.
      email:
        description: Owner’s email address.
        type: string
        x-sub-format: Email
      name:
        description: Owner’s full name
        type: string
      phone:
        description: Owner’s phone number.
        type: string
        x-sub-format: Phone
    title: customersPaymentMethodsPatchSourceOwner
    type: object
  customersPaymentMethodsPost:
    properties:
      bank_account:
        $ref: '#/definitions/customersPaymentMethodBank_account'
        description: |2-
           These bank accounts are payment methods on Customer objects.

          External Accounts are transfer destinations on Account objects for Custom accounts. They can be bank accounts or debit cards as well
        x-conditionally-required-description: One of source(token), card or bank_account is required
      card:
        $ref: '#/definitions/customersPaymentMethodsCard'
        description: " When you create a new credit card, you must specify a customer\
          \ or recipient on which to create it.\n\nIf the card's owner has no default\
          \ card, then the new card will become the default. However, if the owner\
          \ already has a default, then it will not change. To change the default,\
          \ you should either update the customer to have a new default_source, or\
          \ update the recipient to have a new default_card. "
        x-conditionally-required-description: One of source(token), card or bank_account is required
      source:
        description: 'Source objects allow you to accept a variety of payment methods.
          They represent a customer''s payment instrument and can be used with the
          Stripe API just like a Card object: once chargeable, they can be charged,
          or attached to customers. '
        type: string
        x-conditionally-required-description: One of source(token), card or bank_account is required
    title: customersPaymentMethodsPost
    type: object
    x-has-customfields: true
    x-vendor-objectname: sources
  customersPaymentMethodsPostMetadata:
    description: 'Set of key-value pairs that you can attach to an object. This can
      be useful for storing additional information about the object in a structured
      format. '
    properties: {}
    title: customersPaymentMethodsPostMetadata
    type: object
    x-has-customfields: true
  customersPaymentMethodsReceiver:
    properties:
      address:
        description: The address of the receiver source. This is the value that should be communicated to the customer to send their funds to.
        type: string
        x-nullable: true
      amount_charged:
        description: The total amount that was charged by you. The amount charged is expressed in the source's currency.
        format: int32
        type: integer
        x-sub-format: Money
      amount_received:
        description: The total amount received by the receiver source. `amount_received = amount_returned + amount_charged` is true at all time. The amount received is expressed in the source's currency.
        format: int32
        type: integer
        x-sub-format: Money
      amount_returned:
        description: The total amount that was returned to the customer. The amount returned is expressed in the source's currency.
        format: int32
        type: integer
        x-sub-format: Money
      refund_attributes_method:
        enum:
        - email
        - manual
        - none
        type: string
        x-sub-format: Enum
      refund_attributes_status:
        type: string
    title: customersPaymentMethodsReceiver
    type: object
  customersPost:
    properties:
      account_balance:
        description: An integer amount in %s that is the starting account balance for your customer. A negative amount represents a credit that will be used before attempting any charges to the customer's card; a positive amount will be added to the next invoice.
        format: int32
        type: integer
      business_vat_id:
        description: The customer's VAT identification number. If you are using Relay, this field gets passed to tax provider you are using for your orders.
        type: string
      coupon:
        description: If you provide a coupon code, the customer will have a discount applied on all recurring charges. Charges you create through the API will not have the discount.
        type: string
        x-samplevalue: 25OFF
      default_source:
        type: string
      description:
        description: An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
        type: string
      email:
        description: Customer's email address. It's displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to *512 characters*.
        type: string
        x-length: 512
        x-name: true
        x-sub-format: Email
      id:
        type: string
      invoice_prefix:
        description: The prefix for the customer used to generate unique invoice numbers.
        type: string
        x-nullable: true
      metadata:
        $ref: '#/definitions/customersMetadata'
        description: A set of key/value pairs that you can attach to a customer object. It can be useful for storing additional information about the customer in a structured format.
      shipping:
        $ref: '#/definitions/customerPostShipping'
      source:
        $ref: '#/definitions/customerPostSource'
        description: The source can either be a [Token](/docs/api#tokens)'s or a [Source](/docs/api#sources)'s ID, as returned by [Elements](/docs/elements), or a dictionary containing a user's credit card details (with the options shown below).
      tax_info:
        $ref: '#/definitions/tax_info'
        description: The customer�s tax information. Appears on invoices emailed to this customer
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: customers
  customersPostResp:
    properties:
      account_balance:
        description: Current balance, if any, being stored on the customer's account. If negative, the customer has credit to apply to the next invoice. If positive, the customer has an amount owed that will be added to the next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account for recurring billing purposes (i.e., subscriptions, invoices, invoice items).
        format: int32
        type: integer
      business_vat_id:
        description: The customer's VAT identification number. Appears on invoices emailed to this customer.
        type: string
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1522395672
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.
        type: string
        x-nullable: true
        x-sub-format: Currency
      default_source:
        description: ID of the default source attached to this customer.
        type: string
        x-nullable: true
        x-samplevalue: card_1AFJf2GdZbyQGmEeiTuNewxi
      delinquent:
        description: When the customer's latest invoice is billed by charging automatically, delinquent is true if the invoice's latest charge is failed. When the customer's latest invoice is billed by sending an invoice, delinquent is true if the invoice is not paid by its due date.
        type: boolean
        x-nullable: true
        x-readOnly: true
      description:
        description: An arbitrary string attached to the object. Often useful for displaying to users.
        type: string
        x-nullable: true
      discount:
        $ref: '#/definitions/customerSubscriptionsDataDiscount'
        description: Describes the current discount active on the customer, if there is one.
        x-nullable: true
      email:
        description: The customer's email address.
        type: string
        x-name: true
        x-nullable: true
        x-sub-format: Email
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
      invoice_prefix:
        description: The prefix for the customer used to generate unique invoice numbers.
        type: string
        x-nullable: true
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
      metadata:
        $ref: '#/definitions/customersMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - customer
        type: string
        x-sub-format: Enum
      quantity:
        format: int32
        type: integer
      shipping:
        $ref: '#/definitions/customerShipping'
        description: 'Mailing and shipping address for the customer. Appears on invoices
          emailed to this customer. '
      source:
        $ref: '#/definitions/customerSource'
      sources:
        $ref: '#/definitions/customerSources'
        description: 'The customer''s payment sources, if any. '
      subscriptions:
        $ref: '#/definitions/customerSubscriptions'
        description: The customer's current subscriptions, if any.
      tax_info:
        $ref: '#/definitions/tax_infoResp'
        description: The customer�s tax information. Appears on invoices emailed to this customer
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: customers
  customersSubscriptions:
    properties:
      application_fee_percent:
        description: A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account.
        format: double
        type: number
        x-max-length: 5
        x-min-length: 1
        x-nullable: true
        x-precision: 2
      billing:
        description: Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions.
        enum:
        - charge_automatically
        - send_invoice
        type: string
        x-nullable: true
        x-samplevalue: charge_automatically
        x-sub-format: Enum
      billing_cycle_anchor:
        description: Determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices.
        format: int32
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      cancel_at_period_end:
        description: If the subscription has been canceled with the `at_period_end` flag set to `true`, `cancel_at_period_end` on the subscription will be true. You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.
        type: boolean
        x-samplevalue: false
      canceled_at:
        description: If the subscription has been canceled, the date of that cancellation. If the subscription was canceled with `cancel_at_period_end`, `canceled_at` will still reflect the date of the initial cancellation request, not the end of the subscription period when the subscription is automatically moved to a canceled state.
        format: int32
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-sub-format: Date Time Epoch
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int32
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      current_period_end:
        description: End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created.
        format: int32
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-samplevalue: 1523803200
        x-sub-format: Date Time Epoch
      current_period_start:
        description: Start of the current period that the subscription has been invoiced for.
        format: int32
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      customer:
        description: ID of the customer who owns the subscription.
        type: string
        x-readOnly: true
        x-samplevalue: cus_CURl3lB2LxHST1
      days_until_due:
        description: Number of days a customer has to pay invoices generated by this subscription. This value will be `null` for subscriptions where `billing=charge_automatically`.
        format: int32
        type: integer
        x-nullable: true
      discount:
        $ref: '#/definitions/customersSubscriptionsDiscount'
        description: Describes the current discount applied to this subscription, if there is one. When billing, a discount applied to a subscription overrides a discount applied on a customer-wide basis.
        x-nullable: true
      ended_at:
        description: If the subscription has ended, the date the subscription ended.
        format: int32
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
        x-samplevalue: sub_CUx9adMEOqN0HA
      items:
        $ref: '#/definitions/customersSubscriptionsItems'
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/customersSubscriptionsMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - subscription
        type: string
        x-samplevalue: subscription
        x-sub-format: Enum
      plan:
        $ref: '#/definitions/customersSubscriptionsPlan'
        description: Hash describing the plan the customer is subscribed to.
        x-nullable: true
      quantity:
        description: The quantity of the plan to which the customer should be subscribed. For example, if your plan is $10/user/month, and your customer has 5 users, you could pass 5 as the quantity to have the customer charged $50 (5 x $10) monthly.
        format: int32
        type: integer
        x-nullable: true
        x-samplevalue: 1
      start:
        description: Date the most recent update to this subscription started.
        format: int32
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      status:
        description: Possible values are `trialing`, `active`, `past_due`, `canceled`, or `unpaid`. A subscription still in its trial period is `trialing` and moves to `active` when the trial period is over. If subscription `billing=charge_automatically` it becomes `past_due` when payment to renew it fails and `canceled` or `unpaid` (depending on your subscriptions settings) when Stripe has exhausted all payment retry attempts. If subscription `billing=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed.) After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.
        enum:
        - active
        - canceled
        - past_due
        - trialing
        - unpaid
        type: string
        x-readOnly: true
        x-samplevalue: active
        x-sub-format: Enum
      tax_percent:
        description: If provided, each invoice created by this subscription will apply the tax rate, increasing the amount billed to the customer.
        format: double
        type: number
        x-nullable: true
      trial_end:
        description: If the subscription has a trial, the end of that trial.
        format: int32
        type: integer
        x-nullable: true
      trial_start:
        description: If the subscription has a trial, the beginning of that trial.
        format: int32
        type: integer
        x-nullable: true
    title: customersSubscriptions
    type: object
    x-has-customfields: false
    x-primary-key:
    - id
    x-vendor-objectname: subscriptions
  customersSubscriptionsDiscount:
    properties:
      coupon:
        $ref: '#/definitions/customersSubscriptionsDiscountCoupon'
      customer:
        type: string
        x-nullable: true
        x-readOnly: true
        x-samplevalue: cus_CURl3lB2LxHST1
      end:
        description: If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.
        format: int32
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-samplevalue: 1529073600
        x-sub-format: Date Time Epoch
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - discount
        type: string
        x-samplevalue: discount
        x-sub-format: Enum
      start:
        description: Date that the coupon was applied.
        format: int32
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      subscription:
        description: The subscription that this coupon is applied to, if it is applied to a particular subscription.
        type: string
        x-nullable: true
        x-samplevalue: sub_CUx9adMEOqN0HA
    title: customersSubscriptionsDiscount
    type: object
    x-has-customfields: false
  customersSubscriptionsDiscountCoupon:
    properties:
      amount_off:
        description: Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.
        format: int32
        type: integer
        x-nullable: true
        x-sub-format: Money
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int32
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1521124662
        x-sub-format: Date Time Epoch
      currency:
        description: If `amount_off` has been set, the three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the amount to take off.
        enum:
        - aud
        - eur
        - dkk
        - gbp
        - nok
        - sek
        - usd
        - chf
        - brl
        - cad
        - hkd
        - jpy
        - mxn
        - nzd
        - sgd
        type: string
        x-nullable: true
        x-sub-format: Currency Code
      duration:
        description: One of `forever`, `once`, and `repeating`. Describes how long a customer who applies this coupon will get the discount.
        enum:
        - forever
        - once
        - repeating
        type: string
        x-samplevalue: repeating
        x-sub-format: Enum
      duration_in_months:
        description: If `duration` is `repeating`, the number of months the coupon applies. Null if coupon `duration` is `forever` or `once`.
        format: int32
        type: integer
        x-nullable: true
        x-samplevalue: 3
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
        x-samplevalue: 15OFF
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      max_redemptions:
        description: Maximum number of times this coupon can be redeemed, in total, before it is no longer valid.
        type: string
        x-nullable: true
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - coupon
        type: string
        x-samplevalue: coupon
        x-sub-format: Enum
      percent_off:
        description: Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For example, a coupon with percent_off of 50 will make a %s100 invoice %s50 instead.
        format: int32
        type: integer
        x-nullable: true
        x-samplevalue: 25
      redeem_by:
        description: Date after which the coupon can no longer be redeemed.
        type: string
        x-nullable: true
      times_redeemed:
        description: Number of times this coupon has been applied to a customer.
        format: int32
        type: integer
        x-samplevalue: 1
      valid:
        description: Taking account of the above properties, whether this coupon can still be applied to a customer.
        type: boolean
        x-samplevalue: true
    title: customersSubscriptionsDiscountCoupon
    type: object
    x-has-customfields: false
  customersSubscriptionsItems:
    properties:
      data:
        items:
          $ref: '#/definitions/customersSubscriptionsItemsData'
        type: array
      has_more:
        type: boolean
        x-samplevalue: false
      object:
        type: string
        x-samplevalue: list
      total_count:
        format: int32
        type: integer
        x-samplevalue: 1
      url:
        type: string
        x-samplevalue: /v1/subscription_items?subscription=sub_CUx9adMEOqN0HA
    title: customersSubscriptionsItems
    type: object
    x-has-customfields: false
  customersSubscriptionsItemsData:
    properties:
      billing_scheme:
        description: Describes how to compute the price per period. Either per_unit or tiered
        enum:
        - per_unit
        - tiered
        type: string
        x-samplevalue: tiered
        x-sub-format: Enum
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int32
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
        x-samplevalue: si_CUx9rs7DZOY4KZ
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - subscription_item
        type: string
        x-samplevalue: subscription_item
        x-sub-format: Enum
      plan:
        $ref: '#/definitions/customersSubscriptionsItemsDataPlan'
      quantity:
        description: The [quantity](/docs/subscriptions/quantities) of the plan to which the customer should be subscribed.
        format: int32
        type: integer
        x-samplevalue: 1
      subscription:
        type: string
        x-nullable: true
        x-samplevalue: sub_CUx9adMEOqN0HA
      usage_type:
        default: licensed
        description: Configures how the quantity per period should be determined, can be either metered or licensed
        enum:
        - metered
        - licensed
        type: string
        x-samplevalue: licensed
        x-sub-format: Enum
    title: customersSubscriptionsItemsData
    type: object
    x-has-customfields: false
  customersSubscriptionsItemsDataPlan:
    properties:
      amount:
        description: The amount in %s to be charged on the interval specified.
        format: int32
        type: integer
        x-nullable: true
        x-samplevalue: 5000
        x-sub-format: Money
      billing_scheme:
        description: Describes how to compute the price per period. Either per_unit or tiered
        enum:
        - per_unit
        - tiered
        type: string
        x-samplevalue: tiered
        x-sub-format: Enum
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int32
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1521116764
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        enum:
        - aud
        - eur
        - dkk
        - gbp
        - nok
        - sek
        - usd
        - chf
        - brl
        - cad
        - hkd
        - jpy
        - mxn
        - nzd
        - sgd
        type: string
        x-samplevalue: usd
        x-sub-format: Currency Code
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
        x-samplevalue: ruby-jar2
      interval:
        description: One of `day`, `week`, `month` or `year`. The frequency with which a subscription should be billed.
        enum:
        - day
        - week
        - month
        - year
        type: string
        x-samplevalue: month
        x-sub-format: Enum
      interval_count:
        description: The number of intervals (specified in the `interval` property) between each subscription billing. For example, `interval=month` and `interval_count=3` bills every 3 months.
        format: int32
        type: integer
        x-samplevalue: 1
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      name:
        type: string
        x-name: true
        x-samplevalue: Ruby Jar
      nickname:
        description: A brief description of the plan, hidden from customers.
        type: string
        x-nullable: true
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - plan
        type: string
        x-samplevalue: plan
        x-sub-format: Enum
      product:
        description: The product whose pricing this plan determines.
        type: string
        x-nullable: true
        x-readOnly: true
        x-samplevalue: prod_CUuzW7XOYFkRlX
      statement_descriptor:
        type: string
      trial_period_days:
        description: 'Integer representing the number of trial period days before
          the customer is charged for the first time. '
        format: int32
        type: integer
      usage_type:
        default: licensed
        description: 'Configures how the quantity per period should be determined,
          can be either metered or licensed. licensed will automatically bill the
          quantity set for a plan when adding it to a subscription, metered will aggregate
          the total usage based on usage records. Defaults to licensed. '
        enum:
        - metered
        - licensed
        type: string
        x-sub-format: Enum
    title: customersSubscriptionsItemsDataPlan
    type: object
    x-has-customfields: false
  customersSubscriptionsMetadata:
    description: 'Set of key-value pairs that you can attach to an object. This can
      be useful for storing additional information about the object in a structured
      format. '
    properties: {}
    title: customersSubscriptionsMetadata
    type: object
    x-has-customfields: true
  customersSubscriptionsPatchReq:
    properties:
      application_fee_percent:
        description: A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account.
        format: double
        type: number
        x-max-length: 5
        x-min-length: 1
        x-nullable: true
        x-precision: 2
      billing:
        description: Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions.
        enum:
        - charge_automatically
        - send_invoice
        type: string
        x-nullable: true
        x-samplevalue: charge_automatically
        x-sub-format: Enum
      billing_cycle_anchor:
        description: Determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices.
        type: string
        x-nullable: true
        x-samplevalue: now
        x-sub-format: Date Time Epoch
      cancel_at_period_end:
        description: Boolean indicating whether this subscription should cancel at the end of the current period.
        type: boolean
        x-samplevalue: false
      coupon:
        description: The code of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription.
        type: string
        x-samplevalue: 15OFF
      days_until_due:
        description: 'Number of days a customer has to pay invoices generated by this
          subscription. Only valid for subscriptions where billing=send_invoice. '
        format: int32
        type: integer
        x-samplevalue: 20
      items:
        description: 'List of subscription items, each with an attached plan. '
        items:
          $ref: '#/definitions/customersSubscriptionsPatchReqItems'
        type: array
      metadata:
        $ref: '#/definitions/customersSubscriptionsPatchReqMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      plan:
        type: string
        x-conditionally-required-description: This field can be used if not put under items
        x-samplevalue: ruby-jar2
      prorate:
        default: true
        description: Boolean (default `true`). Use with a `billing_cycle_anchor` timestamp to determine whether the customer will be invoiced a prorated amount until the anchor date. If `false`, the anchor period will be free (similar to a trial).
        type: boolean
      proration_date:
        description: 'If set, the proration will be calculated as though the subscription
          was updated at the given time. This can be used to apply exactly the same
          proration that was previewed with upcoming invoice endpoint. It can also
          be used to implement custom proration logic, such as prorating by day instead
          of by second, by providing the time that you wish to use for proration calculations. '
        format: int32
        type: integer
        x-mask: Epoch
        x-sub-format: Date Time Epoch
      quantity:
        format: int32
        type: integer
        x-conditionally-required-description: This field can be used if not put under items
        x-samplevalue: 1
      source:
        $ref: '#/definitions/customersSubscriptionsPatchReqSource'
        description: Can be string or object. The source can either be a [Token](/docs/api#tokens) or a [Source](/docs/api#sources), as returned by [Elements](https://stripe.com/docs/elements), or a dictionary containing a user's credit card details (with the options shown below). You must provide a source if the customer does not already have a valid source attached, and you are subscribing the customer to be charged automatically for a plan that is not free. Passing `source` will create a new source object, make it the customer default source, and delete the old customer default if one exists. If you want to add an additional source, instead use the [card creation API](https://stripe.com/docs/api#create_card) to add the card and then the [customer update API](https://stripe.com/docs/api#update_customer) to set it as the default. Whenever you attach a card to a customer, Stripe will automatically validate the card.
      tax_percent:
        description: 'A non-negative decimal (with at most four decimal places) between
          0 and 100. This represents the percentage of the subscription invoice subtotal
          that will be calculated and added as tax to the final amount in each billing
          period. For example, a plan which charges $10/month with a tax_percent of
          20.0 will charge $12 per invoice. '
        format: double
        type: number
        x-length: 8
        x-min-length: 1
        x-precision: 4
        x-samplevalue: 23
      trial_end:
        description: 'Can be integer or string. Unix timestamp representing the end
          of the trial period the customer will get before being charged for the first
          time. The special value `now` can be provided to end the customer''s trial
          immediately. '
        format: int32
        type: integer
        x-mask: Epoch
        x-samplevalue: 1523453200
        x-sub-format: Date Time Epoch
    title: customersSubscriptionsPatchReq
    type: object
    x-has-customfields: true
    x-vendor-objectname: subscriptions
  customersSubscriptionsPatchReqItems:
    properties:
      clear_usage:
        description: Delete all usage for a given subscription item. Allowed only when deleted is set to true and the current plan's usage_type is metered
        type: boolean
      deleted:
        description: 'A flag that, if set to true, will delete the specified item. '
        type: boolean
      id:
        description: 'Subscription item to update. '
        type: string
      plan:
        description: Plan ID for this item.
        type: string
        x-reference-objectname: plans
      quantity:
        description: 'Quantity for this item. '
        type: string
    title: customersSubscriptionsPatchReqItems
    type: object
    x-has-customfields: true
  customersSubscriptionsPatchReqMetadata:
    description: 'Set of key-value pairs that you can attach to an object. This can
      be useful for storing additional information about the object in a structured
      format. '
    properties: {}
    title: customersSubscriptionsPatchReqMetadata
    type: object
    x-has-customfields: true
  customersSubscriptionsPatchReqSource:
    properties:
      address_city:
        description: 'City/District/Suburb/Town/Village. '
        type: string
        x-nullable: true
        x-sub-format: City
      address_country:
        description: Billing address country, if provided when creating card.
        type: string
        x-nullable: true
        x-samplevalue: India
        x-sub-format: Country
      address_line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-nullable: true
        x-samplevalue: Street address 1
        x-sub-format: Street Address
      address_line2:
        description: 'Address line 2 (Apartment/Suite/Unit/Building). '
        type: string
        x-nullable: true
        x-samplevalue: Street no 303
      address_state:
        description: 'State/County/Province/Region. '
        type: string
        x-nullable: true
        x-samplevalue: Maharashtra
        x-sub-format: State
      address_zip:
        description: ZIP or postal code.
        type: string
        x-nullable: true
        x-samplevalue: '097213'
        x-sub-format: Postal Code
      currency:
        description: 'Required when adding a card to an account (not applicable to
          customers or recipients). The card (which must be a debit card) can be used
          as a transfer destination for funds in this currency. Currently, the only
          supported currency for debit card transfers is usd. '
        type: string
        x-conditionally-required-description: 'Required when adding a card to an account
          (not applicable to a customers or recipients). '
        x-nullable: true
        x-samplevalue: USD
        x-sub-format: Currency
      cvc:
        description: 'Card security code. Highly recommended to always include this
          value, but it''s required only for accounts based in European countries. '
        format: int32
        type: integer
        x-conditionally-required-description: Highly recommended to always include this value, but it's only required for accounts based in European countries.
      default_for_currency:
        description: 'Applicable only on accounts (not customers or recipients). If
          you set this to true (or if this is the first external account being added
          in this currency), this card will become the default external account for
          its currency. '
        type: boolean
        x-nullable: true
        x-samplevalue: true
      exp_month:
        description: 'Two-digit number representing the card''s expiration month. '
        format: int32
        type: integer
        x-length: 2
        x-min-length: 2
        x-nullable: true
      exp_year:
        description: 'Two- or four-digit number representing the card''s expiration
          year. '
        format: int32
        type: integer
        x-length: 4
        x-min-length: 2
        x-nullable: true
      name:
        description: 'Cardholder''s full name. '
        type: string
        x-name: true
        x-nullable: true
        x-samplevalue: Kane Simpson
      number:
        description: 'The card number, as a string without any separators. '
        format: int64
        type: integer
      object:
        description: The type of payment source. Should be card.
        enum:
        - card
        type: string
        x-sub-format: Enum
    required:
    - object
    - exp_year
    - exp_month
    - number
    title: customersSubscriptionsPatchReqSource
    type: object
    x-has-customfields: true
  customersSubscriptionsPlan:
    properties:
      amount:
        description: The amount in %s to be charged on the interval specified.
        format: int32
        type: integer
        x-nullable: true
        x-samplevalue: 5000
        x-sub-format: Money
      billing_scheme:
        description: 'Describes how to compute the price per period. Either per_unit
          or tiered. per_unit indicates that the fixed amount (specified in amount)
          will be charged per unit in quantity (for plans with usage_type=licensed),
          or per unit of total usage (for plans with usage_type=metered). tiered indicates
          that the unit pricing will be computed using a tiering strategy as defined
          using the tiers and tiers_mode attributes. '
        enum:
        - tiered
        - per_unit
        type: string
        x-conditionally-required-description: The `tiers` parameter requires billing_scheme to be set to tiered.
        x-sub-format: Enum
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int32
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1521116764
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        enum:
        - aud
        - eur
        - dkk
        - gbp
        - nok
        - sek
        - usd
        - chf
        - brl
        - cad
        - hkd
        - jpy
        - mxn
        - nzd
        - sgd
        type: string
        x-samplevalue: usd
        x-sub-format: Currency Code
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
        x-samplevalue: ruby-jar2
      interval:
        description: One of `day`, `week`, `month` or `year`. The frequency with which a subscription should be billed.
        enum:
        - day
        - week
        - month
        - year
        type: string
        x-samplevalue: month
        x-sub-format: Enum
      interval_count:
        description: The number of intervals (specified in the `interval` property) between each subscription billing. For example, `interval=month` and `interval_count=3` bills every 3 months.
        format: int32
        type: integer
        x-samplevalue: 1
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/customersSubscriptionsMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      name:
        type: string
        x-name: true
        x-samplevalue: Ruby Jar
      nickname:
        description: A brief description of the plan, hidden from customers.
        type: string
        x-nullable: true
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - plan
        type: string
        x-samplevalue: plan
        x-sub-format: Enum
      product:
        description: The product whose pricing this plan determines.
        type: string
        x-nullable: true
        x-readOnly: true
        x-samplevalue: prod_CUuzW7XOYFkRlX
      statement_descriptor:
        description: Extra information about a product which will appear on your customer's credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used. Only available on products of type=`service`.
        type: string
        x-nullable: true
      tiers:
        description: Each element represents a pricing tier. This parameter requires billing_scheme to be set to tiered
        items:
          $ref: '#/definitions/customersSubscriptionsPlanTiers'
        type: array
      tiers_mode:
        description: 'Defines if the tiering price should be graduated or volume based.
          In volume-based tiering, the maximum quantity within a period determines
          the per unit price, in graduated tiering pricing can successively change
          as the quantity grows. '
        enum:
        - graduated
        - volume
        type: string
        x-sub-format: Enum
      transform_usage:
        $ref: '#/definitions/customersSubscriptionsPlanTransformUsage'
        description: Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with tiers.
      trial_period_days:
        description: 'Integer representing the number of trial period days before
          the customer is charged for the first time. '
        format: int32
        type: integer
      usage_type:
        default: licensed
        description: 'Configures how the quantity per period should be determined,
          can be either metered or licensed. licensed will automatically bill the
          quantity set for a plan when adding it to a subscription, metered will aggregate
          the total usage based on usage records. Defaults to licensed. '
        enum:
        - metered
        - licensed
        type: string
        x-sub-format: Enum
    title: customersSubscriptionsPlan
    type: object
    x-has-customfields: false
  customersSubscriptionsPlanTiers:
    properties:
      amount:
        description: 'The per unit billing amount for each individual unit for which
          this tier applies. '
        type: string
        x-sub-format: Money
      up_to:
        description: 'Specifies the upper bound of this tier. The lower bound of a
          tier is the upper bound of the previous tier adding one. Use inf to define
          a fallback tier. '
        type: string
    title: customersSubscriptionsPlanTiers
    type: object
    x-has-customfields: false
  customersSubscriptionsPlanTransformUsage:
    properties:
      divide_by:
        description: 'Divide usage by this number. '
        format: int32
        type: integer
      round:
        description: After division, either round the result up or down.
        enum:
        - up
        - down
        type: string
        x-sub-format: Enum
    title: customersSubscriptionsPlanTransformUsage
    type: object
    x-has-customfields: false
  customersSubscriptionsPostReq:
    properties:
      application_fee_percent:
        description: A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account.
        format: double
        type: number
        x-max-length: 5
        x-min-length: 1
        x-nullable: true
        x-precision: 2
      billing:
        description: Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions.
        enum:
        - charge_automatically
        - send_invoice
        type: string
        x-nullable: true
        x-samplevalue: charge_automatically
        x-sub-format: Enum
      billing_cycle_anchor:
        description: Determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices.
        type: string
        x-nullable: true
        x-samplevalue: now
        x-sub-format: Date Time Epoch
      coupon:
        description: The code of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription.
        type: string
        x-samplevalue: 15OFF
      days_until_due:
        description: 'Number of days a customer has to pay invoices generated by this
          subscription. Only valid for subscriptions where billing=send_invoice. '
        format: int32
        type: integer
        x-samplevalue: 20
      items:
        description: 'List of subscription items, each with an attached plan. '
        items:
          $ref: '#/definitions/customersSubscriptionsPostReqItems'
        type: array
      metadata:
        $ref: '#/definitions/customersSubscriptionsPostReqMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      plan:
        type: string
        x-conditionally-required-description: This field can be used if not put under items
        x-samplevalue: ruby-jar2
      prorate:
        default: true
        description: Boolean (default `true`). Use with a `billing_cycle_anchor` timestamp to determine whether the customer will be invoiced a prorated amount until the anchor date. If `false`, the anchor period will be free (similar to a trial).
        type: boolean
      quantity:
        format: int32
        type: integer
        x-conditionally-required-description: This field can be used if not put under items
        x-samplevalue: 1
      source:
        $ref: '#/definitions/customersSubscriptionsPostReqSource'
        description: Can be string or object. The source can either be a [Token](/docs/api#tokens) or a [Source](/docs/api#sources), as returned by [Elements](https://stripe.com/docs/elements), or a dictionary containing a user's credit card details (with the options shown below). You must provide a source if the customer does not already have a valid source attached, and you are subscribing the customer to be charged automatically for a plan that is not free. Passing `source` will create a new source object, make it the customer default source, and delete the old customer default if one exists. If you want to add an additional source, instead use the [card creation API](https://stripe.com/docs/api#create_card) to add the card and then the [customer update API](https://stripe.com/docs/api#update_customer) to set it as the default. Whenever you attach a card to a customer, Stripe will automatically validate the card.
      tax_percent:
        description: 'A non-negative decimal (with at most four decimal places) between
          0 and 100. This represents the percentage of the subscription invoice subtotal
          that will be calculated and added as tax to the final amount in each billing
          period. For example, a plan which charges $10/month with a tax_percent of
          20.0 will charge $12 per invoice. '
        format: double
        type: number
        x-length: 8
        x-min-length: 1
        x-precision: 4
        x-samplevalue: 23
      trial_end:
        description: 'Can be integer or string. Unix timestamp representing the end
          of the trial period the customer will get before being charged for the first
          time. The special value `now` can be provided to end the customer''s trial
          immediately. '
        format: int32
        type: integer
        x-mask: Epoch
        x-samplevalue: 1523453200
        x-sub-format: Date Time Epoch
      trial_period_days:
        description: Integer representing the number of trial period days before the customer is charged for the first time.
        format: int32
        type: integer
    required:
    - plan
    title: customersSubscriptionsPostReq
    type: object
    x-has-customfields: true
    x-vendor-objectname: subscriptions
  customersSubscriptionsPostReqItems:
    properties:
      plan:
        description: Plan ID for this item.
        type: string
        x-reference-objectname: plans
      quantity:
        description: 'Quantity for this item. '
        type: string
    required:
    - plan
    title: customersSubscriptionsPostReqItems
    type: object
  customersSubscriptionsPostReqMetadata:
    description: 'Set of key-value pairs that you can attach to an object. This can
      be useful for storing additional information about the object in a structured
      format. '
    properties: {}
    title: customersSubscriptionsPostReqMetadata
    type: object
    x-has-customfields: true
  customersSubscriptionsPostReqSource:
    properties:
      address_city:
        description: 'City/District/Suburb/Town/Village. '
        type: string
        x-nullable: true
        x-sub-format: City
      address_country:
        description: Billing address country, if provided when creating card.
        type: string
        x-nullable: true
        x-samplevalue: India
        x-sub-format: Country
      address_line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-nullable: true
        x-samplevalue: Street address 1
        x-sub-format: Street Address
      address_line2:
        description: 'Address line 2 (Apartment/Suite/Unit/Building). '
        type: string
        x-nullable: true
        x-samplevalue: Street no 303
      address_state:
        description: 'State/County/Province/Region. '
        type: string
        x-nullable: true
        x-samplevalue: Maharashtra
        x-sub-format: State
      address_zip:
        description: ZIP or postal code.
        type: string
        x-nullable: true
        x-samplevalue: '097213'
        x-sub-format: Postal Code
      currency:
        description: 'Required when adding a card to an account (not applicable to
          customers or recipients). The card (which must be a debit card) can be used
          as a transfer destination for funds in this currency. Currently, the only
          supported currency for debit card transfers is usd. '
        type: string
        x-conditionally-required-description: 'Required when adding a card to an account
          (not applicable to a customers or recipients). '
        x-nullable: true
        x-samplevalue: USD
        x-sub-format: Currency
      cvc:
        description: 'Card security code. Highly recommended to always include this
          value, but it''s required only for accounts based in European countries. '
        format: int32
        type: integer
        x-conditionally-required-description: Highly recommended to always include this value, but it's only required for accounts based in European countries.
      default_for_currency:
        description: 'Applicable only on accounts (not customers or recipients). If
          you set this to true (or if this is the first external account being added
          in this currency), this card will become the default external account for
          its currency. '
        type: boolean
        x-nullable: true
        x-samplevalue: true
      exp_month:
        description: 'Two-digit number representing the card''s expiration month. '
        format: int32
        type: integer
        x-length: 2
        x-min-length: 2
        x-nullable: true
      exp_year:
        description: 'Two- or four-digit number representing the card''s expiration
          year. '
        format: int32
        type: integer
        x-length: 4
        x-min-length: 2
        x-nullable: true
      name:
        description: 'Cardholder''s full name. '
        type: string
        x-name: true
        x-nullable: true
        x-samplevalue: Kane Simpson
      number:
        description: 'The card number, as a string without any separators. '
        format: int64
        type: integer
      object:
        description: The type of payment source. Should be card.
        enum:
        - card
        type: string
        x-sub-format: Enum
    required:
    - object
    - exp_year
    - exp_month
    - number
    title: customersSubscriptionsPostReqSource
    type: object
    x-has-customfields: true
  datametadata:
    properties: {}
    title: metadata
    type: object
    x-has-customfields: false
  destination:
    properties:
      amount:
        format: int32
        type: integer
        x-samplevalue: 50
    type: object
    x-has-customfields: false
  discount:
    properties:
      coupon:
        $ref: '#/definitions/subscriptionsPostRespcoupon'
      customer:
        type: string
        x-samplevalue: cus_CpNauLRGQE3bOB
      end:
        format: int32
        type: integer
        x-samplevalue: 1533784701
      object:
        type: string
        x-samplevalue: discount
      start:
        format: int32
        type: integer
        x-samplevalue: 1525835901
      subscription:
        type: string
        x-samplevalue: sub_CpNaULYGcmlc8K
    title: discount
    type: object
    x-has-customfields: false
  itemsmetadata:
    properties: {}
    title: metadata
    type: object
    x-has-customfields: false
  metadata:
    properties: {}
    title: metadata
    type: object
    x-has-customfields: false
  objectsMetadata:
    properties:
      fields:
        items:
          $ref: '#/definitions/objectsMetadataFields'
        type: array
    type: object
  objectsMetadataFields:
    properties:
      mask:
        type: string
      type:
        type: string
      vendorDisplayName:
        type: string
      vendorPath:
        type: string
      vendorReadOnly:
        type: boolean
      vendorRequired:
        type: boolean
    type: object
  orders:
    description: Retrieves the details of an existing order. Supply the unique order ID from either an order creation request or the order list, and Stripe will return the corresponding order information.
    properties:
      amount:
        description: A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for 1, Japanese Yen being a zero-decimal currency) representing the total amount for the order.
        format: int32
        type: integer
      amount_returned:
        format: int32
        type: integer
        x-nullable: true
      application:
        description: ID of the Connect Application that created the order.
        type: string
        x-nullable: true
      application_fee:
        format: int32
        type: integer
        x-nullable: true
      charge:
        description: The ID of the payment used to pay for the order. Present if the order status is paid, fulfilled, or refunded.
        type: string
        x-nullable: true
        x-reference-objectname: charges
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter ISO currency code, in lowercase. Must be a supported currency.
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-sub-format: Currency Code
      customer:
        description: The customer used for the order.
        type: string
        x-nullable: true
        x-reference-objectname: customers
      email:
        description: The email address of the customer placing the order.
        type: string
        x-nullable: true
        x-sub-format: Email
      external_coupon_code:
        type: string
      id:
        description: Unique identifier for the object.
        type: string
        x-name: true
        x-readOnly: true
      items:
        description: List of items constituting the order.
        items:
          $ref: '#/definitions/ordersItemsResponse'
        type: array
      livemode:
        description: Has the value true if the object exists in live mode or the value false if the object exists in test mode.
        type: boolean
      metadata:
        $ref: '#/definitions/ordersMetadataResponse'
        description: Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
        x-length: '500'
      object:
        default: order
        description: String representing the object's type. Objects of the same type share the same value.
        type: string
      returns:
        $ref: '#/definitions/ordersReturns'
        x-nullable: true
      selected_shipping_method:
        description: The shipping method that is currently selected for this order, if any. If present, it is equal to one of the ids of shipping methods in the shipping_methods array. At order creation time, if there are multiple shipping methods, Stripe will automatically selected the first method.
        type: string
        x-nullable: true
      shipping:
        $ref: '#/definitions/ordersShippingResponse'
        description: The shipping address for the order. Present if the order is for goods to be shipped.
        x-nullable: true
      shipping_methods:
        description: A list of supported shipping methods for this order. The desired shipping method can be specified either by updating the order, or when paying it.
        items:
          $ref: '#/definitions/ordersShipping_methodsResponse'
        type: array
        x-nullable: true
      status:
        description: Current order status. One of created, paid, canceled, fulfilled, or returned.
        enum:
        - created
        - paid
        - canceled
        - fulfilled
        - returned
        type: string
        x-sub-format: Enum
      status_transitions:
        $ref: '#/definitions/ordersStatus_transitionsResponse'
        description: The timestamps at which the order status was updated.
        x-nullable: true
      updated:
        format: int64
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-sub-format: Date Time Epoch
      upstream_id:
        description: The user's order ID if it is different from the Stripe order ID.
        type: string
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: orders
  ordersAddressRequest:
    properties:
      city:
        description: City/District/Suburb/Town/Village.
        type: string
        x-nullable: true
        x-sub-format: City
      country:
        description: country code.
        type: string
        x-nullable: true
        x-sub-format: Country
      line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-sub-format: Street Address
      line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
        x-nullable: true
        x-sub-format: Street Address
      postal_code:
        description: ZIP or postal code
        type: string
        x-nullable: true
        x-sub-format: Postal Code
      state:
        description: State/County/Province/Region.
        type: string
        x-nullable: true
        x-sub-format: State
    required:
    - line1
    type: object
  ordersAddressResponse:
    properties:
      city:
        description: City/District/Suburb/Town/Village.
        type: string
        x-nullable: true
        x-sub-format: City
      country:
        description: country code.
        type: string
        x-nullable: true
        x-sub-format: Country
      line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-sub-format: Street Address
      line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
        x-nullable: true
        x-sub-format: Street Address
      postal_code:
        description: ZIP or postal code
        type: string
        x-nullable: true
        x-sub-format: Postal Code
      state:
        description: State/County/Province/Region.
        type: string
        x-nullable: true
        x-sub-format: State
    type: object
  ordersData:
    properties:
      amount:
        description: A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for 1, Japanese Yen being a zero-decimal currency) representing the total amount for the returned line item.
        format: int32
        type: integer
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter ISO currency code, in lowercase. Must be a supported currency.
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-sub-format: Currency Code
      id:
        description: Unique identifier for the object.
        type: string
      items:
        items:
          $ref: '#/definitions/ordersDataItems'
        type: array
      livemode:
        description: Has the value true if the object exists in live mode or the value false if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        type: string
      order:
        description: The order that this return includes items from.
        type: string
      refund:
        description: The ID of the refund issued for this return.
        type: string
        x-nullable: true
    type: object
  ordersDataItems:
    properties:
      amount:
        description: A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for 1, Japanese Yen being a zero-decimal currency) representing the total amount for the line item.
        format: int32
        type: integer
      currency:
        description: Three-letter ISO currency code, in lowercase. Must be a supported currency.
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-sub-format: Currency Code
      description:
        description: Description of the line item, meant to be displayable to the user (e.g., Express shipping).
        type: string
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        type: string
      parent:
        description: The ID of the associated object for this line item. Expandable if not null (e.g., expandable to a SKU).
        type: string
      quantity:
        description: A positive integer representing the number of instances of parent that are included in this order item. Applicable/present only if type is sku.
        format: int32
        type: integer
      type:
        description: The type of line item. One of sku, tax, shipping, or discount.
        enum:
        - sku
        - tax
        - shipping
        - discount
        type: string
        x-sub-format: Enum
    type: object
  ordersDelivery_estimateResponse:
    properties:
      date:
        description: If type is exact, date will be the expected delivery date in the format YYYY-MM-DD.
        format: date
        type: string
        x-mask: yyyy-MM-dd
        x-sub-format: Date (yyyy-mm-dd)
      earliest:
        description: If type is range, earliest will be be the earliest delivery date in the format YYYY-MM-DD.
        format: date
        type: string
        x-mask: yyyy-MM-dd
        x-sub-format: Date (yyyy-mm-dd)
      latest:
        description: If type is range, latest will be the latest delivery date in the format YYYY-MM-DD.
        format: date
        type: string
        x-mask: yyyy-MM-dd
        x-sub-format: Date (yyyy-mm-dd)
      type:
        description: The type of estimate. Must be either range or exact.
        enum:
        - range
        - exact
        type: string
        x-sub-format: Enum
    type: object
  ordersItemsRequest:
    properties:
      amount:
        description: A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for 1, Japanese Yen being a zero-decimal currency) representing the total amount for the line item.
        format: int32
        type: integer
      currency:
        description: Three-letter ISO currency code, in lowercase. Must be a supported currency.
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-sub-format: Currency Code
      description:
        description: Description of the line item, meant to be displayable to the user (e.g., Express shipping).
        type: string
      parent:
        description: The ID of the SKU being ordered.
        type: string
        x-conditionally-required-description: Required if it is the first item that is posted
      quantity:
        description: The quantity of this order item. When type is sku, this is the number of instances of the SKU to be ordered.
        format: int32
        type: integer
      type:
        default: sku
        description: The type of line item. One of sku, tax, shipping, or discount.
        enum:
        - sku
        - tax
        - shipping
        - discount
        type: string
    type: object
  ordersItemsResponse:
    properties:
      amount:
        description: A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for 1, Japanese Yen being a zero-decimal currency) representing the total amount for the line item.
        format: int32
        type: integer
      currency:
        description: Three-letter ISO currency code, in lowercase. Must be a supported currency.
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-sub-format: Currency Code
      description:
        description: Description of the line item, meant to be displayable to the user (e.g., Express shipping).
        type: string
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        type: string
      parent:
        description: The ID of the associated object for this line item. Expandable if not null (e.g., expandable to a SKU).
        type: string
      quantity:
        description: A positive integer representing the number of instances of parent that are included in this order item. Applicable/present only if type is sku.
        format: int32
        type: integer
      type:
        default: sku
        description: The type of line item. One of sku, tax, shipping, or discount.
        enum:
        - sku
        - tax
        - shipping
        - discount
        type: string
        x-sub-format: Enum
    type: object
  ordersListObject:
    description: Returns a list of your orders. The orders are returned sorted by creation date, with the most recently created orders appearing first.
    properties:
      amount:
        description: A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for 1, Japanese Yen being a zero-decimal currency) representing the total amount for the order.
        format: int32
        type: integer
      amount_returned:
        format: int32
        type: integer
        x-nullable: true
      application:
        description: ID of the Connect Application that created the order.
        type: string
        x-nullable: true
      application_fee:
        format: int32
        type: integer
        x-nullable: true
      charge:
        description: The ID of the payment used to pay for the order. Present if the order status is paid, fulfilled, or refunded.
        type: string
        x-nullable: true
        x-reference-objectname: charges
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-searchable: true
        x-searchable-operators:
        - <
        - =
        - '>'
        - '>='
        - <=
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter ISO currency code, in lowercase. Must be a supported currency.
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-sub-format: Currency Code
      customer:
        description: The customer used for the order.
        type: string
        x-nullable: true
        x-reference-objectname: customers
        x-searchable: true
        x-searchable-operators:
        - =
      email:
        description: The email address of the customer placing the order.
        type: string
        x-nullable: true
        x-sub-format: Email
      external_coupon_code:
        type: string
      id:
        description: Unique identifier for the object.
        type: string
        x-name: true
        x-readOnly: true
      items:
        description: List of items constituting the order.
        items:
          $ref: '#/definitions/ordersItemsResponse'
        type: array
      livemode:
        description: Has the value true if the object exists in live mode or the value false if the object exists in test mode.
        type: boolean
      metadata:
        $ref: '#/definitions/ordersMetadataResponse'
        description: Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
        x-length: '500'
      object:
        default: order
        description: String representing the object's type. Objects of the same type share the same value.
        type: string
      returns:
        $ref: '#/definitions/ordersReturns'
        x-nullable: true
      selected_shipping_method:
        description: The shipping method that is currently selected for this order, if any. If present, it is equal to one of the ids of shipping methods in the shipping_methods array. At order creation time, if there are multiple shipping methods, Stripe will automatically selected the first method.
        type: string
        x-nullable: true
      shipping:
        $ref: '#/definitions/ordersShippingResponse'
        description: The shipping address for the order. Present if the order is for goods to be shipped.
        x-nullable: true
      shipping_methods:
        description: A list of supported shipping methods for this order. The desired shipping method can be specified either by updating the order, or when paying it.
        items:
          $ref: '#/definitions/ordersShipping_methodsResponse'
        type: array
        x-nullable: true
      status:
        description: Current order status. One of created, paid, canceled, fulfilled, or returned.
        enum:
        - created
        - paid
        - canceled
        - fulfilled
        - returned
        type: string
        x-searchable: true
        x-searchable-operators:
        - =
        x-sub-format: Enum
      status_transitions:
        $ref: '#/definitions/ordersStatus_transitionsResponseList'
        description: The timestamps at which the order status was updated.
        x-nullable: true
      updated:
        format: int64
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-sub-format: Date Time Epoch
      upstream_id:
        description: The user's order ID if it is different from the Stripe order ID.
        type: string
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-searchable: true
    x-searchable-joins:
    - and
    x-vendor-objectname: orders
  ordersMetadataRequest:
    properties: {}
    type: object
  ordersMetadataResponse:
    properties: {}
    type: object
  ordersMetadataUpdate:
    properties: {}
    type: object
  ordersPatch:
    description: Updates the specific order by setting the values of the parameters passed. Any parameters not provided will be left unchanged. This request accepts only the metadata, and status as arguments.
    properties:
      coupon:
        description: A coupon code that represents a discount to be applied to this order. Must be one-time duration and in same currency as the order.
        type: string
      metadata:
        $ref: '#/definitions/ordersMetadataUpdate'
        description: A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the order in a structured format.
        x-length: '500'
      selected_shipping_method:
        description: The shipping method to select for fulfilling this order. If specified, must be one of the ids of a shipping method in the shipping_methods array. If specified, will overwrite the existing selected shipping method, updating items as necessary.
        type: string
      shipping:
        $ref: '#/definitions/ordersShippingUpdate'
        description: Tracking information once the order has been fulfilled.
      status:
        description: Current order status. One of created, paid, canceled, fulfilled, or returned.
        enum:
        - created
        - paid
        - canceled
        - fulfilled
        - returned
        type: string
        x-sub-format: Enum
    type: object
    x-has-customfields: true
    x-vendor-objectname: orders
  ordersPatchResponse:
    description: Updates the specific order by setting the values of the parameters passed. Any parameters not provided will be left unchanged. This request accepts only the metadata, and status as arguments.
    properties:
      amount:
        description: A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for 1, Japanese Yen being a zero-decimal currency) representing the total amount for the order.
        format: int32
        type: integer
      amount_returned:
        format: int32
        type: integer
        x-nullable: true
      application:
        description: ID of the Connect Application that created the order.
        type: string
        x-nullable: true
      application_fee:
        format: int32
        type: integer
        x-nullable: true
      charge:
        description: The ID of the payment used to pay for the order. Present if the order status is paid, fulfilled, or refunded.
        type: string
        x-nullable: true
        x-reference-objectname: charges
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter ISO currency code, in lowercase. Must be a supported currency.
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-sub-format: Currency Code
      customer:
        description: The customer used for the order.
        type: string
        x-nullable: true
        x-reference-objectname: customers
      email:
        description: The email address of the customer placing the order.
        type: string
        x-nullable: true
        x-sub-format: Email
      external_coupon_code:
        type: string
      id:
        description: Unique identifier for the object.
        type: string
        x-name: true
        x-readOnly: true
      items:
        description: List of items constituting the order.
        items:
          $ref: '#/definitions/ordersItemsResponse'
        type: array
      livemode:
        description: Has the value true if the object exists in live mode or the value false if the object exists in test mode.
        type: boolean
      metadata:
        $ref: '#/definitions/ordersMetadataResponse'
        description: Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
        x-length: '500'
      object:
        default: order
        description: String representing the object's type. Objects of the same type share the same value.
        type: string
      returns:
        $ref: '#/definitions/ordersReturns'
        x-nullable: true
      selected_shipping_method:
        description: The shipping method that is currently selected for this order, if any. If present, it is equal to one of the ids of shipping methods in the shipping_methods array. At order creation time, if there are multiple shipping methods, Stripe will automatically selected the first method.
        type: string
        x-nullable: true
      shipping:
        $ref: '#/definitions/ordersShippingResponse'
        description: The shipping address for the order. Present if the order is for goods to be shipped.
        x-nullable: true
      shipping_methods:
        description: A list of supported shipping methods for this order. The desired shipping method can be specified either by updating the order, or when paying it.
        items:
          $ref: '#/definitions/ordersShipping_methodsResponse'
        type: array
        x-nullable: true
      status:
        description: Current order status. One of created, paid, canceled, fulfilled, or returned.
        enum:
        - created
        - paid
        - canceled
        - fulfilled
        - returned
        type: string
        x-sub-format: Enum
      status_transitions:
        $ref: '#/definitions/ordersStatus_transitionsResponse'
        description: The timestamps at which the order status was updated.
        x-nullable: true
      updated:
        format: int64
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-sub-format: Date Time Epoch
      upstream_id:
        description: The user's order ID if it is different from the Stripe order ID.
        type: string
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: orders
  ordersPost:
    description: Creates a new Order object.
    properties:
      coupon:
        description: A coupon code that represents a discount to be applied to this order. Must be one-time duration and in same currency as the order.
        type: string
      currency:
        description: Three-letter ISO currency code, in lowercase. Must be a supported currency. Order item currency should match with this currency
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-sub-format: Currency Code
      customer:
        description: The ID of an existing customer to use for this order. If provided, the customer email and shipping address will be used to create the order. Subsequently, the customer will also be charged to pay the order. If email or shipping are also provided, they will override the values retrieved from the customer object.
        type: string
        x-nullable: true
        x-reference-objectname: customers
      email:
        description: The email address of the customer placing the order.
        type: string
        x-nullable: true
        x-sub-format: Email
      items:
        description: List of items constituting the order.
        items:
          $ref: '#/definitions/ordersItemsRequest'
        type: array
      metadata:
        $ref: '#/definitions/ordersMetadataRequest'
        description: A set of key/value pairs that you can attach to an order object. Limited to 500 characters. Metadata can be useful for storing additional information about the order in a structured format.
        x-length: '500'
      shipping:
        $ref: '#/definitions/ordersShippingRequest'
        description: Shipping address for the order. Required if any of the SKUs are for products that have shippable set to true.
        x-conditionally-required-description: Required if any of the SKUs are for products that have shippable set to true.
    required:
    - currency
    - items
    type: object
    x-has-customfields: true
    x-vendor-objectname: orders
  ordersPostResponse:
    description: Creates a new Order object.
    properties:
      amount:
        description: A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for 1, Japanese Yen being a zero-decimal currency) representing the total amount for the order.
        format: int32
        type: integer
      amount_returned:
        format: int32
        type: integer
        x-nullable: true
      application:
        description: ID of the Connect Application that created the order.
        type: string
        x-nullable: true
      application_fee:
        format: int32
        type: integer
        x-nullable: true
      charge:
        description: The ID of the payment used to pay for the order. Present if the order status is paid, fulfilled, or refunded.
        type: string
        x-nullable: true
        x-reference-objectname: charges
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter ISO currency code, in lowercase. Must be a supported currency.
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-sub-format: Currency Code
      customer:
        description: The customer used for the order.
        type: string
        x-nullable: true
        x-reference-objectname: customers
      email:
        description: The email address of the customer placing the order.
        type: string
        x-nullable: true
        x-sub-format: Email
      external_coupon_code:
        type: string
      id:
        description: Unique identifier for the object.
        type: string
        x-name: true
        x-readOnly: true
      items:
        description: List of items constituting the order.
        items:
          $ref: '#/definitions/ordersItemsResponse'
        type: array
      livemode:
        description: Has the value true if the object exists in live mode or the value false if the object exists in test mode.
        type: boolean
      metadata:
        $ref: '#/definitions/ordersMetadataResponse'
        description: Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
        x-length: '500'
      object:
        default: order
        description: String representing the object's type. Objects of the same type share the same value.
        type: string
      returns:
        $ref: '#/definitions/ordersReturns'
        x-nullable: true
      selected_shipping_method:
        description: The shipping method that is currently selected for this order, if any. If present, it is equal to one of the ids of shipping methods in the shipping_methods array. At order creation time, if there are multiple shipping methods, Stripe will automatically selected the first method.
        type: string
        x-nullable: true
      shipping:
        $ref: '#/definitions/ordersShippingResponse'
        description: The shipping address for the order. Present if the order is for goods to be shipped.
        x-nullable: true
      shipping_methods:
        description: A list of supported shipping methods for this order. The desired shipping method can be specified either by updating the order, or when paying it.
        items:
          $ref: '#/definitions/ordersShipping_methodsResponse'
        type: array
        x-nullable: true
      status:
        description: Current order status. One of created, paid, canceled, fulfilled, or returned.
        enum:
        - created
        - paid
        - canceled
        - fulfilled
        - returned
        type: string
        x-sub-format: Enum
      status_transitions:
        $ref: '#/definitions/ordersStatus_transitionsResponse'
        description: The timestamps at which the order status was updated.
        x-nullable: true
      updated:
        format: int64
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-sub-format: Date Time Epoch
      upstream_id:
        description: The user's order ID if it is different from the Stripe order ID.
        type: string
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: orders
  ordersReturns:
    properties:
      data:
        items:
          $ref: '#/definitions/ordersData'
        type: array
      has_more:
        description: True if this list has another page of items after this one that can be fetched.
        type: boolean
      object:
        default: list
        description: String representing the object's type. Objects of the same type share the same value. Always has the value list.
        type: string
      total_count:
        format: int32
        type: integer
      url:
        description: The URL where this list can be accessed.
        type: string
        x-sub-format: URL
    type: object
  ordersShippingRequest:
    properties:
      address:
        $ref: '#/definitions/ordersAddressRequest'
      name:
        description: Recipient name.
        type: string
        x-sub-format: Full Name
      phone:
        description: Recipient phone (including extension).
        type: string
        x-nullable: true
        x-sub-format: Phone
    required:
    - address
    - name
    type: object
    x-conditionally-required-description: Required if SKU provided in items belongs to a shippable product
  ordersShippingResponse:
    properties:
      address:
        $ref: '#/definitions/ordersAddressResponse'
        description: Shipping address.
      carrier:
        description: The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.
        type: string
        x-nullable: true
      name:
        description: Recipient name.
        type: string
        x-sub-format: Full Name
      phone:
        description: Recipient phone (including extension).
        type: string
        x-nullable: true
        x-sub-format: Phone
      tracking_number:
        description: The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
        type: string
        x-nullable: true
    type: object
  ordersShippingUpdate:
    properties:
      carrier:
        description: The name of the carrier like USPS, UPS, or FedEx.
        type: string
        x-nullable: true
      tracking_number:
        description: The tracking number provided by the carrier.
        type: string
        x-nullable: true
    required:
    - carrier
    - tracking_number
    type: object
  ordersShipping_methodsResponse:
    properties:
      amount:
        description: A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for 1, Japanese Yen being a zero-decimal currency) representing the total amount for the line item.
        format: int32
        type: integer
      currency:
        description: Three-letter ISO currency code, in lowercase. Must be a supported currency.
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-sub-format: Currency Code
      delivery_estimate:
        $ref: '#/definitions/ordersDelivery_estimateResponse'
        description: The estimated delivery date for the given shipping method. Can be either a specific date or a range.
        x-nullable: true
      description:
        description: An arbitrary string attached to the object. Often useful for displaying to users.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
    type: object
  ordersStatus_transitionsResponse:
    properties:
      canceled:
        format: int64
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-sub-format: Date Time Epoch
      fulfiled:
        format: int64
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-sub-format: Date Time Epoch
      paid:
        format: int64
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-sub-format: Date Time Epoch
      returned:
        format: int64
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-sub-format: Date Time Epoch
    type: object
  ordersStatus_transitionsResponseList:
    properties:
      canceled:
        format: int64
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-searchable: true
        x-searchable-operators:
        - <
        - =
        - '>'
        - '>='
        - <=
        x-sub-format: Date Time Epoch
      fulfiled:
        format: int64
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-searchable: true
        x-searchable-operators:
        - <
        - =
        - '>'
        - '>='
        - <=
        x-sub-format: Date Time Epoch
      paid:
        format: int64
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-searchable: true
        x-searchable-operators:
        - <
        - =
        - '>'
        - '>='
        - <=
        x-sub-format: Date Time Epoch
      returned:
        format: int64
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-searchable: true
        x-searchable-operators:
        - <
        - =
        - '>'
        - '>='
        - <=
        x-sub-format: Date Time Epoch
    type: object
  pendingBalResp:
    properties:
      amount:
        format: int32
        type: integer
        x-samplevalue: 517062
      currency:
        type: string
        x-samplevalue: usd
      source_types:
        $ref: '#/definitions/sourceTypesBalResp'
    title: pendingBalResp
    type: object
    x-has-customfields: false
  planMetadata:
    properties: {}
    type: object
    x-has-customfields: true
  planProduct:
    properties:
      id:
        description: The identifier for the product. Must be unique, Use this field to create a plan for an existing product
        type: string
        x-reference-objectname: products
      metadata:
        $ref: '#/definitions/planproductsMetadata'
        description: A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format.
      name:
        description: The product's name, meant to be displayable to the customer
        type: string
        x-conditionally-required-description: This field is required if we want to create a new product for a plan ie when there is no id field mentioned in the payload
      statement_descriptor:
        type: string
        x-length: 22
        x-samplevalue: An arbitrary string to be displayed on your customer's credit card statement. This may be up to 22 characters
    type: object
    x-has-customfields: false
  planTiers:
    properties:
      amount:
        description: The per unit billing amount for each individual unit for which this tier applies
        format: int32
        type: integer
        x-samplevalue: 500
        x-sub-format: Money
      up_to:
        description: Specifies the upper bound of this tier. The lower bound of a tier is the upper bound of the previous tier adding one
        format: int32
        type: integer
        x-samplevalue: 5
    type: object
    x-has-customfields: false
  planTiersPost:
    properties:
      amount:
        description: The per unit billing amount for each individual unit for which this tier applies
        format: int32
        type: integer
        x-samplevalue: 500
        x-sub-format: Money
      up_to:
        description: Specifies the upper bound of this tier. The lower bound of a tier is the upper bound of the previous tier adding one.Use inf to define a fallback tier.
        type: string
        x-samplevalue: '5'
    required:
    - amount
    - up_to
    type: object
    x-has-customfields: false
  planmetadata:
    properties: {}
    title: metadata
    type: object
    x-has-customfields: false
  planproductsMetadata:
    description: A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format
    properties: {}
    type: object
    x-has-customfields: true
  plansListObject:
    properties:
      active:
        default: true
        description: Whether the plan is currently available for new subscriptions
        type: boolean
        x-searchable: true
        x-searchable-operators:
        - =
      aggregate_usage:
        description: Specifies a usage aggregation strategy for plans of usage_type=metered. Allowed values are sum for summing up all usage during a period, last_during_period for picking the last usage record reported within a period, last_ever for picking the last usage record ever (across period bounds) or max which picks the usage record with the maximum reported usage during a period. Defaults to sum
        type: string
      amount:
        description: The amount in cents to be charged on the interval specified
        format: int32
        type: integer
        x-conditionally-required-description: this field is present only when the 'billing_scheme' value is per_unit
        x-samplevalue: 380
        x-searchable: true
        x-searchable-operators:
        - =
        - '>'
        - '>='
        - <
        - <=
        x-sub-format: Money
      billing_scheme:
        description: Describes how to compute the price per period. Either per_unit or tiered
        enum:
        - per_unit
        - tiered
        type: string
        x-samplevalue: tiered
        x-sub-format: Enum
      created:
        description: Time at which the object was created
        format: int32
        type: integer
        x-readOnly: true
        x-samplevalue: 1523268498
        x-searchable: true
        x-searchable-operators:
        - =
        - '>'
        - '>='
        - <
        - <=
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter ISO currency code, in lowercase
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        type: string
        x-samplevalue: usd
        x-searchable: true
        x-searchable-operators:
        - =
        x-sub-format: Enum
      id:
        description: Plans define the base price, currency, and billing cycle for subscriptions.
        type: string
        x-readOnly: true
        x-samplevalue: plan_CeFPYrA9dXB7f0
      interval:
        description: One of day, week, month or year
        enum:
        - day
        - week
        - month
        - year
        type: string
        x-samplevalue: week
        x-sub-format: Enum
      interval_count:
        description: The number of intervals
        format: int32
        type: integer
        x-samplevalue: 1
      livemode:
        description: Has the value true if the object exists in live mode or the value false if the object exists in test mode
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/planMetadata'
        description: Set of key-value pairs that you can attach to an object.This can be useful for storing additional information about the object in a structured format
      name:
        description: name of the product
        type: string
        x-samplevalue: Basic Product
      nickname:
        description: A brief description of the plan, hidden from customers
        type: string
        x-name: true
        x-samplevalue: Daily
      object:
        description: String representing the object's type
        type: string
        x-samplevalue: plan
      product:
        description: The product whose pricing this plan determines
        type: string
        x-reference-objectname: products
        x-samplevalue: prod_CeFM2qOVWAuVa9
        x-searchable: true
        x-searchable-operators:
        - =
      statement_descriptor:
        type: string
        x-samplevalue: Basic Product stt Desc
      tiers:
        description: Each element represents a pricing tier. This parameter requires billing_scheme to be set to tiered
        items:
          $ref: '#/definitions/planTiers'
        type: array
        x-conditionally-required-description: this field is present only when the 'billing_scheme' value is tiered
      tiers_mode:
        description: Defines if the tiering price should be graduated or volume based
        enum:
        - graduated
        - volume
        type: string
        x-conditionally-required-description: this field is present only when the 'billing_scheme' value is tiered
        x-samplevalue: volume
        x-sub-format: Enum
      transform_usage:
        $ref: '#/definitions/plantransform_usageResp'
        description: Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with tiers
      trial_period_days:
        format: int32
        type: integer
        x-samplevalue: 2
        x-searchable: true
        x-searchable-operators:
        - =
        - '>'
        - '>='
        - <
        - <=
      usage_type:
        default: licensed
        description: Configures how the quantity per period should be determined, can be either metered or licensed
        enum:
        - metered
        - licensed
        type: string
        x-samplevalue: licensed
        x-sub-format: Enum
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-searchable: true
    x-searchable-joins:
    - and
    x-vendor-objectname: plans
  plansObject:
    description: Plans define the base price, currency, and billing cycle for subscriptions.
    properties:
      active:
        default: true
        description: Whether the plan is currently available for new subscriptions
        type: boolean
      aggregate_usage:
        description: Specifies a usage aggregation strategy for plans of usage_type=metered. Allowed values are sum for summing up all usage during a period, last_during_period for picking the last usage record reported within a period, last_ever for picking the last usage record ever (across period bounds) or max which picks the usage record with the maximum reported usage during a period. Defaults to sum
        type: string
      amount:
        description: The amount in cents to be charged on the interval specified
        format: int32
        type: integer
        x-conditionally-required-description: this field is present only when the 'billing_scheme' value is per_unit
        x-samplevalue: 380
        x-sub-format: Money
      billing_scheme:
        description: Describes how to compute the price per period. Either per_unit or tiered
        enum:
        - per_unit
        - tiered
        type: string
        x-samplevalue: tiered
        x-sub-format: Enum
      created:
        description: Time at which the object was created
        format: int32
        type: integer
        x-readOnly: true
        x-samplevalue: 1523268498
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter ISO currency code, in lowercase
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        type: string
        x-samplevalue: usd
        x-sub-format: Enum
      id:
        description: Plans define the base price, currency, and billing cycle for subscriptions.
        type: string
        x-readOnly: true
        x-samplevalue: plan_CeFPYrA9dXB7f0
      interval:
        description: One of day, week, month or year
        enum:
        - day
        - week
        - month
        - year
        type: string
        x-samplevalue: week
        x-sub-format: Enum
      interval_count:
        description: The number of intervals
        format: int32
        type: integer
        x-samplevalue: 1
      livemode:
        description: Has the value true if the object exists in live mode or the value false if the object exists in test mode
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/planMetadata'
        description: Set of key-value pairs that you can attach to an object.This can be useful for storing additional information about the object in a structured format
      name:
        description: name of the product
        type: string
        x-samplevalue: Basic Product
      nickname:
        description: A brief description of the plan, hidden from customers
        type: string
        x-name: true
        x-samplevalue: Daily
      object:
        description: String representing the object's type
        type: string
        x-samplevalue: plan
      product:
        description: The product whose pricing this plan determines
        type: string
        x-reference-objectname: products
        x-samplevalue: prod_CeFM2qOVWAuVa9
      statement_descriptor:
        type: string
        x-samplevalue: Basic Product stt Desc
      tiers:
        description: Each element represents a pricing tier. This parameter requires billing_scheme to be set to tiered
        items:
          $ref: '#/definitions/planTiers'
        type: array
        x-conditionally-required-description: this field is present only when the 'billing_scheme' value is tiered
      tiers_mode:
        description: Defines if the tiering price should be graduated or volume based
        enum:
        - graduated
        - volume
        type: string
        x-conditionally-required-description: this field is present only when the 'billing_scheme' value is tiered
        x-samplevalue: volume
        x-sub-format: Enum
      transform_usage:
        $ref: '#/definitions/plantransform_usageResp'
        description: Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with tiers
      trial_period_days:
        format: int32
        type: integer
        x-samplevalue: 2
      usage_type:
        default: licensed
        description: Configures how the quantity per period should be determined, can be either metered or licensed
        enum:
        - metered
        - licensed
        type: string
        x-samplevalue: licensed
        x-sub-format: Enum
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: plans
  plansPatch:
    description: Updates the specified plan by setting the values of the parameters passed. Any parameters not provided are left unchanged. By design, you cannot change a plan's ID, amount, currency, or billing cycle
    properties:
      active:
        default: true
        description: Whether the plan is currently available for new subscriptions
        type: boolean
      metadata:
        $ref: '#/definitions/planMetadata'
        description: Set of key-value pairs that you can attach to an object.This can be useful for storing additional information about the object in a structured format
        x-conditionally-required-description: If product not is mentioned in the payload only then this field can be present in the payload
      nickname:
        description: A brief description of the plan, hidden from customers
        type: string
        x-conditionally-required-description: If product not is mentioned in the payload only then this field can be present in the payload
        x-name: true
        x-samplevalue: Daily
      product:
        description: The product the plan belongs to. Note that after updating, statement descriptors and line items of the plan in active subscriptions will be affected.
        type: string
        x-reference-objectname: products
      trial_period_days:
        format: int32
        type: integer
        x-conditionally-required-description: If product not is mentioned in the payload only then this field can be present in the payload
        x-samplevalue: 2
    type: object
    x-has-customfields: true
    x-vendor-objectname: plans
  plansPatchResp:
    description: Plans define the base price, currency, and billing cycle for subscriptions.
    properties:
      active:
        default: true
        description: Whether the plan is currently available for new subscriptions
        type: boolean
      aggregate_usage:
        description: Specifies a usage aggregation strategy for plans of usage_type=metered. Allowed values are sum for summing up all usage during a period, last_during_period for picking the last usage record reported within a period, last_ever for picking the last usage record ever (across period bounds) or max which picks the usage record with the maximum reported usage during a period. Defaults to sum
        type: string
      amount:
        description: The amount in cents to be charged on the interval specified
        format: int32
        type: integer
        x-conditionally-required-description: this field is present only when the 'billing_scheme' value is per_unit
        x-samplevalue: 380
        x-sub-format: Money
      billing_scheme:
        description: Describes how to compute the price per period. Either per_unit or tiered
        enum:
        - per_unit
        - tiered
        type: string
        x-samplevalue: tiered
        x-sub-format: Enum
      created:
        description: Time at which the object was created
        format: int32
        type: integer
        x-readOnly: true
        x-samplevalue: 1523268498
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter ISO currency code, in lowercase
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        type: string
        x-samplevalue: usd
        x-sub-format: Enum
      id:
        description: Plans define the base price, currency, and billing cycle for subscriptions.
        type: string
        x-readOnly: true
        x-samplevalue: plan_CeFPYrA9dXB7f0
      interval:
        description: One of day, week, month or year
        enum:
        - day
        - week
        - month
        - year
        type: string
        x-samplevalue: week
        x-sub-format: Enum
      interval_count:
        description: The number of intervals
        format: int32
        type: integer
        x-samplevalue: 1
      livemode:
        description: Has the value true if the object exists in live mode or the value false if the object exists in test mode
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/planMetadata'
        description: Set of key-value pairs that you can attach to an object.This can be useful for storing additional information about the object in a structured format
      name:
        description: name of the product
        type: string
        x-samplevalue: Basic Product
      nickname:
        description: A brief description of the plan, hidden from customers
        type: string
        x-name: true
        x-samplevalue: Daily
      object:
        description: String representing the object's type
        type: string
        x-samplevalue: plan
      product:
        description: The product whose pricing this plan determines
        type: string
        x-reference-objectname: products
        x-samplevalue: prod_CeFM2qOVWAuVa9
      statement_descriptor:
        type: string
        x-samplevalue: Basic Product stt Desc
      tiers:
        description: Each element represents a pricing tier. This parameter requires billing_scheme to be set to tiered
        items:
          $ref: '#/definitions/planTiers'
        type: array
        x-conditionally-required-description: this field is present only when the 'billing_scheme' value is tiered
      tiers_mode:
        description: Defines if the tiering price should be graduated or volume based
        enum:
        - graduated
        - volume
        type: string
        x-conditionally-required-description: this field is present only when the 'billing_scheme' value is tiered
        x-samplevalue: volume
        x-sub-format: Enum
      transform_usage:
        $ref: '#/definitions/plantransform_usageResp'
        description: Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with tiers
      trial_period_days:
        format: int32
        type: integer
        x-samplevalue: 2
      usage_type:
        default: licensed
        description: Configures how the quantity per period should be determined, can be either metered or licensed
        enum:
        - metered
        - licensed
        type: string
        x-samplevalue: licensed
        x-sub-format: Enum
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: plans
  plansPost:
    description: You can create plans using the API
    properties:
      active:
        default: true
        description: Whether the plan is currently available for new subscriptions
        type: boolean
      aggregate_usage:
        description: Specifies a usage aggregation strategy for plans of usage_type=metered. Allowed values are sum for summing up all usage during a period, last_during_period for picking the last usage record reported within a period, last_ever for picking the last usage record ever (across period bounds) or max which picks the usage record with the maximum reported usage during a period. Defaults to sum
        type: string
      amount:
        description: A positive integer in cents (or 0 for a free plan) representing how much to charge on a recurring basis
        format: int32
        type: integer
        x-conditionally-required-description: this field is present only when the 'billing_scheme' value is 'per_unit'
        x-samplevalue: 380
        x-sub-format: Money
      billing_scheme:
        description: Describes how to compute the price per period. Either per_unit or tiered
        enum:
        - per_unit
        - tiered
        type: string
        x-samplevalue: tiered
        x-sub-format: Enum
      currency:
        description: Three-letter ISO currency code, in lowercase
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        type: string
        x-samplevalue: usd
        x-sub-format: Enum
      id:
        description: An identifier randomly generated by Stripe. Used to identify this plan when subscribing a customer. You can optionally override this ID, but the ID must be unique across all plans in your Stripe account
        type: string
        x-samplevalue: plan_CeFPYrA9dXB7f0
      interval:
        description: One of day, week, month or year
        enum:
        - day
        - week
        - month
        - year
        type: string
        x-samplevalue: week
        x-sub-format: Enum
      interval_count:
        description: The number of intervals between subscription billings
        format: int32
        type: integer
        x-samplevalue: 1
      metadata:
        $ref: '#/definitions/planMetadata'
        description: Set of key-value pairs that you can attach to an object.This can be useful for storing additional information about the object in a structured format
      nickname:
        description: A brief description of the plan, hidden from customers
        type: string
        x-name: true
        x-samplevalue: Daily
      product:
        $ref: '#/definitions/planProduct'
        description: The product whose pricing this plan determines
        x-reference-objectname: products
      tiers:
        description: Each element represents a pricing tier. This parameter requires billing_scheme to be set to tiered
        items:
          $ref: '#/definitions/planTiersPost'
        type: array
        x-conditionally-required-description: this field is present only when the 'billing_scheme' value is 'tiered'
      tiers_mode:
        description: Defines if the tiering price should be graduated or volume based
        enum:
        - graduated
        - volume
        type: string
        x-conditionally-required-description: this field is present only when the 'billing_scheme' value is 'tiered'
        x-samplevalue: volume
        x-sub-format: Enum
      transform_usage:
        $ref: '#/definitions/plantransform_usage'
        description: Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with tiers
        x-conditionally-required-description: Can be used in payload only when 'tiers' are not present
      trial_period_days:
        format: int32
        type: integer
        x-samplevalue: 2
      usage_type:
        default: licensed
        description: Configures how the quantity per period should be determined, can be either metered or licensed
        enum:
        - metered
        - licensed
        type: string
        x-samplevalue: licensed
        x-sub-format: Enum
    required:
    - currency
    - interval
    - product
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: plans
  plansPostResp:
    description: Plans define the base price, currency, and billing cycle for subscriptions.
    properties:
      active:
        default: true
        description: Whether the plan is currently available for new subscriptions
        type: boolean
      aggregate_usage:
        description: Specifies a usage aggregation strategy for plans of usage_type=metered. Allowed values are sum for summing up all usage during a period, last_during_period for picking the last usage record reported within a period, last_ever for picking the last usage record ever (across period bounds) or max which picks the usage record with the maximum reported usage during a period. Defaults to sum
        type: string
      amount:
        description: The amount in cents to be charged on the interval specified
        format: int32
        type: integer
        x-conditionally-required-description: this field is present only when the 'billing_scheme' value is per_unit
        x-samplevalue: 380
        x-sub-format: Money
      billing_scheme:
        description: Describes how to compute the price per period. Either per_unit or tiered
        enum:
        - per_unit
        - tiered
        type: string
        x-samplevalue: tiered
        x-sub-format: Enum
      created:
        description: Time at which the object was created
        format: int32
        type: integer
        x-readOnly: true
        x-samplevalue: 1523268498
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter ISO currency code, in lowercase
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        type: string
        x-samplevalue: usd
        x-sub-format: Enum
      id:
        description: Plans define the base price, currency, and billing cycle for subscriptions.
        type: string
        x-samplevalue: plan_CeFPYrA9dXB7f0
      interval:
        description: One of day, week, month or year
        enum:
        - day
        - week
        - month
        - year
        type: string
        x-samplevalue: week
        x-sub-format: Enum
      interval_count:
        description: The number of intervals
        format: int32
        type: integer
        x-samplevalue: 1
      livemode:
        description: Has the value true if the object exists in live mode or the value false if the object exists in test mode
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/planMetadata'
        description: Set of key-value pairs that you can attach to an object.This can be useful for storing additional information about the object in a structured format
      name:
        description: name of the product
        type: string
        x-samplevalue: Basic Product
      nickname:
        description: A brief description of the plan, hidden from customers
        type: string
        x-name: true
        x-samplevalue: Daily
      object:
        description: String representing the object's type
        type: string
        x-samplevalue: plan
      product:
        description: The product whose pricing this plan determines
        type: string
        x-reference-objectname: products
        x-samplevalue: prod_CeFM2qOVWAuVa9
      statement_descriptor:
        type: string
        x-samplevalue: Basic Product stt Desc
      tiers:
        description: Each element represents a pricing tier. This parameter requires billing_scheme to be set to tiered
        items:
          $ref: '#/definitions/planTiers'
        type: array
        x-conditionally-required-description: this field is present only when the 'billing_scheme' value is tiered
      tiers_mode:
        description: Defines if the tiering price should be graduated or volume based
        enum:
        - graduated
        - volume
        type: string
        x-conditionally-required-description: this field is present only when the 'billing_scheme' value is tiered
        x-samplevalue: volume
        x-sub-format: Enum
      transform_usage:
        $ref: '#/definitions/plantransform_usageResp'
        description: Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with tiers
      trial_period_days:
        format: int32
        type: integer
        x-samplevalue: 2
      usage_type:
        default: licensed
        description: Configures how the quantity per period should be determined, can be either metered or licensed
        enum:
        - metered
        - licensed
        type: string
        x-samplevalue: licensed
        x-sub-format: Enum
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: plans
  plantiers:
    properties:
      amount:
        format: int32
        type: integer
        x-samplevalue: 10
      up_to:
        format: int32
        type: integer
        x-samplevalue: 10
    title: tiers
    type: object
    x-has-customfields: false
  plantransform_usage:
    properties:
      divide_by:
        description: Divide usage by this number.
        format: int32
        type: integer
      round:
        description: After division, either round the result up or down
        enum:
        - up
        - down
        type: string
        x-sub-format: Enum
    required:
    - divide_by
    - round
    type: object
  plantransform_usageResp:
    properties:
      divide_by:
        description: Divide usage by this number.
        format: int32
        type: integer
      round:
        description: After division, either round the result up or down
        enum:
        - up
        - down
        type: string
        x-sub-format: Enum
    type: object
  plantransform_usage_subscription:
    properties:
      divided_by:
        format: int32
        type: integer
        x-samplevalue: 10
      round:
        enum:
        - up
        - down
        type: string
        x-samplevalue: up
    title: plantransform_usage_subscription
    type: object
    x-has-customfields: false
  products:
    properties:
      active:
        default: true
        description: Whether the product is currently available for purchase. Defaults to `true`. May only be set if type=`good`.
        type: boolean
        x-samplevalue: true
      attributes:
        description: A list of up to 5 alphanumeric attributes. Applicable to both `service` and `good` types.
        items:
          type: string
        type: array
      caption:
        description: A short one-line description of the product, meant to be displayable to the customer. May only be set if type=`good`.
        type: string
        x-nullable: true
        x-samplevalue: test-product
      created:
        description: 'Time at which the object was created. Measured in seconds since
          the Unix epoch. '
        format: int64
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1522395672
        x-sub-format: Date Time Epoch
      deactivate_on:
        description: An array of Connect application names or identifiers that should not be able to order the SKUs for this product. May only be set if type=`good`.
        items:
          type: string
        type: array
      description:
        description: The product's description, meant to be displayable to the customer. May only be set if type=`good`.
        type: string
        x-nullable: true
        x-samplevalue: Ven test product
      id:
        description: An identifier will be randomly generated by Stripe. You can optionally override this ID, but the ID must be unique across all products in your Stripe account. Applicable to both `service` and `good` types.
        type: string
        x-samplevalue: prod_CaSmifXWA6QvD4
      images:
        description: A list of up to 8 URLs of images for this product, meant to be displayable to the customer. May only be set if type=`good`.
        items:
          type: string
        type: array
      livemode:
        description: 'Has the value true if the object exists in live mode or the
          value false if the object exists in test mode. '
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/productsMetadata'
        description: A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format. Applicable to both `service` and `good` types.
      name:
        description: The product's name, meant to be displayable to the customer. Applicable to both `service` and `good` types.
        type: string
        x-name: true
        x-samplevalue: ven-test-product
      object:
        description: 'String representing the object''s type. Objects of the same
          type share the same value. '
        enum:
        - product
        type: string
        x-samplevalue: product
        x-sub-format: Enum
      package_dimensions:
        $ref: '#/definitions/productsPackage_dimensions'
        description: The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`.
        x-nullable: true
      shippable:
        default: true
        description: Whether this product is shipped (i.e., physical goods). Defaults to `true`. May only be set if type=`good`.
        type: boolean
        x-samplevalue: false
      skus:
        $ref: '#/definitions/productsSkus'
        description: A sublist of active SKUs associated with this product.
      statement_descriptor:
        description: Extra information about a product which will appear on your customer's credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used. Only available on products of type=`service`.
        type: string
        x-nullable: true
      type:
        description: The type of the product. The product is either of type `good`, which is eligible for use with Orders and SKUs, or `service`, which is eligible for use with Subscriptions and Plans.
        enum:
        - good
        - service
        type: string
        x-nullable: true
        x-samplevalue: good
        x-sub-format: Enum
      updated:
        format: int64
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1522395672
        x-sub-format: Date Time Epoch
      url:
        description: A URL of a publicly-accessible webpage for this product.
        type: string
        x-nullable: true
        x-samplevalue: https://api.stripe.com/
        x-sub-format: URL
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: products
  productsListObject:
    properties:
      active:
        default: true
        description: Whether the product is currently available for purchase. Defaults to `true`. May only be set if type=`good`.
        type: boolean
        x-samplevalue: true
        x-searchable: true
        x-searchable-operators:
        - =
      attributes:
        description: A list of up to 5 alphanumeric attributes. Applicable to both `service` and `good` types.
        items:
          type: string
        type: array
      caption:
        description: A short one-line description of the product, meant to be displayable to the customer. May only be set if type=`good`.
        type: string
        x-nullable: true
        x-samplevalue: test-product
      created:
        description: 'Time at which the object was created. Measured in seconds since
          the Unix epoch. '
        format: int64
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1522395672
        x-searchable: true
        x-searchable-operators:
        - =
        - '>'
        - <
        - '>='
        - <=
        x-sub-format: Date Time Epoch
      deactivate_on:
        description: An array of Connect application names or identifiers that should not be able to order the SKUs for this product. May only be set if type=`good`.
        items:
          type: string
        type: array
      description:
        description: The product's description, meant to be displayable to the customer. May only be set if type=`good`.
        type: string
        x-nullable: true
        x-samplevalue: Ven test product
      id:
        description: An identifier will be randomly generated by Stripe. You can optionally override this ID, but the ID must be unique across all products in your Stripe account. Applicable to both `service` and `good` types.
        type: string
        x-readOnly: true
        x-samplevalue: prod_CaSmifXWA6QvD4
        x-searchable: true
        x-searchable-names:
        - ids
        x-searchable-operators:
        - IN
      images:
        description: A list of up to 8 URLs of images for this product, meant to be displayable to the customer. May only be set if type=`good`.
        items:
          type: string
        type: array
      livemode:
        description: 'Has the value true if the object exists in live mode or the
          value false if the object exists in test mode. '
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/productsMetadata'
        description: A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format. Applicable to both `service` and `good` types.
      name:
        description: The product's name, meant to be displayable to the customer. Applicable to both `service` and `good` types.
        type: string
        x-name: true
        x-samplevalue: ven-test-product
      object:
        description: 'String representing the object''s type. Objects of the same
          type share the same value. '
        enum:
        - product
        type: string
        x-samplevalue: product
        x-sub-format: Enum
      package_dimensions:
        $ref: '#/definitions/productsPackage_dimensions'
        description: The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`.
        x-nullable: true
      shippable:
        default: true
        description: Whether this product is shipped (i.e., physical goods). Defaults to `true`. May only be set if type=`good`.
        type: boolean
        x-samplevalue: false
        x-searchable: true
        x-searchable-operators:
        - =
      skus:
        $ref: '#/definitions/productsSkus'
        description: A sublist of active SKUs associated with this product.
      statement_descriptor:
        description: Extra information about a product which will appear on your customer's credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used. Only available on products of type=`service`.
        type: string
        x-nullable: true
      type:
        description: The type of the product. The product is either of type `good`, which is eligible for use with Orders and SKUs, or `service`, which is eligible for use with Subscriptions and Plans.
        enum:
        - good
        - service
        type: string
        x-nullable: true
        x-samplevalue: good
        x-searchable: true
        x-searchable-operators:
        - =
        x-sub-format: Enum
      updated:
        format: int64
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1522395672
        x-sub-format: Date Time Epoch
      url:
        description: A URL of a publicly-accessible webpage for this product.
        type: string
        x-nullable: true
        x-samplevalue: https://api.stripe.com/
        x-searchable: true
        x-searchable-operators:
        - =
        x-sub-format: URL
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-searchable: true
    x-searchable-joins:
    - and
    x-vendor-objectname: products
  productsMetadata:
    description: A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format. Applicable to both `service` and `good` types.
    properties: {}
    type: object
    x-has-customfields: true
  productsPackage_dimensions:
    description: The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`.
    properties:
      height:
        description: 'Height, in inches. Maximum precision is 2 decimal places. '
        format: double
        type: number
        x-precision: 2
        x-samplevalue: 12.22
      length:
        description: 'Length, in inches. Maximum precision is 2 decimal places. '
        format: double
        type: number
        x-precision: 2
        x-samplevalue: 122.44
      weight:
        description: Weight, in ounces. Maximum precision is 2 decimal places.
        format: double
        type: number
        x-precision: 2
        x-samplevalue: 76.29
      width:
        description: 'Width, in inches. Maximum precision is 2 decimal places. '
        format: double
        type: number
        x-precision: 2
        x-samplevalue: 776.08
    type: object
    x-has-customfields: false
  productsPatch:
    properties:
      active:
        default: true
        description: Whether the product is currently available for purchase. Defaults to `true`. May only be set if type=`good`.
        type: boolean
        x-samplevalue: true
      attributes:
        description: A list of up to 5 alphanumeric attributes. Applicable to both `service` and `good` types.
        items:
          type: string
        type: array
      caption:
        description: A short one-line description of the product, meant to be displayable to the customer. May only be set if type=`good`.
        type: string
        x-nullable: true
        x-samplevalue: test-product
      deactivate_on:
        description: An array of Connect application names or identifiers that should not be able to order the SKUs for this product. May only be set if type=`good`.
        items:
          type: string
        type: array
      description:
        description: The product's description, meant to be displayable to the customer. May only be set if type=`good`.
        type: string
        x-nullable: true
        x-samplevalue: Ven test product
      images:
        description: A list of up to 8 URLs of images for this product, meant to be displayable to the customer. May only be set if type=`good`.
        items:
          type: string
        type: array
      metadata:
        $ref: '#/definitions/productsMetadata'
        description: A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format. Applicable to both `service` and `good` types.
      name:
        description: The product's name, meant to be displayable to the customer. Applicable to both `service` and `good` types.
        type: string
        x-name: true
        x-samplevalue: ven-test-product
      package_dimensions:
        $ref: '#/definitions/productsPatchPackage_dimensions'
        description: The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`.
        x-nullable: true
      shippable:
        default: true
        description: Whether this product is shipped (i.e., physical goods). Defaults to `true`. May only be set if type=`good`.
        type: boolean
        x-samplevalue: false
      statement_descriptor:
        description: An arbitrary string to be displayed on your customer's credit card statement. This may be up to 22 characters. The statement description may not include <>"' characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped. While most banks display this information consistently, some may display it incorrectly or not at all. May only be set if type=`service`.
        type: string
        x-length: 22
      url:
        description: A URL of a publicly-accessible webpage for this product. May only be set if type=`good`.
        type: string
        x-nuallble: true
        x-samplevalue: https://api.stripe.com/
        x-sub-format: URL
    type: object
    x-has-customfields: true
    x-vendor-objectname: products
  productsPatchPackage_dimensions:
    description: The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`.
    properties:
      height:
        description: 'Height, in inches. Maximum precision is 2 decimal places. '
        format: double
        type: number
        x-precision: 2
        x-samplevalue: 12.22
      length:
        description: 'Length, in inches. Maximum precision is 2 decimal places. '
        format: double
        type: number
        x-precision: 2
        x-samplevalue: 122.44
      weight:
        description: Weight, in ounces. Maximum precision is 2 decimal places.
        format: double
        type: number
        x-precision: 2
        x-samplevalue: 76.29
      width:
        description: 'Width, in inches. Maximum precision is 2 decimal places. '
        format: double
        type: number
        x-precision: 2
        x-samplevalue: 776.08
    required:
    - height
    - length
    - weight
    - width
    type: object
    x-has-customfields: false
  productsPatchResp:
    properties:
      active:
        default: true
        description: Whether the product is currently available for purchase. Defaults to `true`. May only be set if type=`good`.
        type: boolean
        x-samplevalue: true
      attributes:
        description: A list of up to 5 alphanumeric attributes. Applicable to both `service` and `good` types.
        items:
          type: string
        type: array
      caption:
        description: A short one-line description of the product, meant to be displayable to the customer. May only be set if type=`good`.
        type: string
        x-nullable: true
        x-samplevalue: test-product
      created:
        description: 'Time at which the object was created. Measured in seconds since
          the Unix epoch. '
        format: int64
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1522395672
        x-sub-format: Date Time Epoch
      deactivate_on:
        description: An array of Connect application names or identifiers that should not be able to order the SKUs for this product. May only be set if type=`good`.
        items:
          type: string
        type: array
      description:
        description: The product's description, meant to be displayable to the customer. May only be set if type=`good`.
        type: string
        x-nullable: true
        x-samplevalue: Ven test product
      id:
        description: An identifier will be randomly generated by Stripe. You can optionally override this ID, but the ID must be unique across all products in your Stripe account. Applicable to both `service` and `good` types.
        type: string
        x-readOnly: true
        x-samplevalue: prod_CaSmifXWA6QvD4
      images:
        description: A list of up to 8 URLs of images for this product, meant to be displayable to the customer. May only be set if type=`good`.
        items:
          type: string
        type: array
      livemode:
        description: 'Has the value true if the object exists in live mode or the
          value false if the object exists in test mode. '
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/productsMetadata'
        description: A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format. Applicable to both `service` and `good` types.
      name:
        description: The product's name, meant to be displayable to the customer. Applicable to both `service` and `good` types.
        type: string
        x-name: true
        x-samplevalue: ven-test-product
      object:
        description: 'String representing the object''s type. Objects of the same
          type share the same value. '
        enum:
        - product
        type: string
        x-samplevalue: product
        x-sub-format: Enum
      package_dimensions:
        $ref: '#/definitions/productsPackage_dimensions'
        description: The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`.
        x-nullable: true
      shippable:
        default: true
        description: Whether this product is shipped (i.e., physical goods). Defaults to `true`. May only be set if type=`good`.
        type: boolean
        x-samplevalue: false
      skus:
        $ref: '#/definitions/productsSkus'
        description: A sublist of active SKUs associated with this product.
      statement_descriptor:
        description: Extra information about a product which will appear on your customer's credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used. Only available on products of type=`service`.
        type: string
        x-nullable: true
      type:
        description: The type of the product. The product is either of type `good`, which is eligible for use with Orders and SKUs, or `service`, which is eligible for use with Subscriptions and Plans.
        enum:
        - good
        - service
        type: string
        x-nullable: true
        x-samplevalue: good
        x-sub-format: Enum
      updated:
        format: int64
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1522395672
        x-sub-format: Date Time Epoch
      url:
        description: A URL of a publicly-accessible webpage for this product.
        type: string
        x-nullable: true
        x-samplevalue: https://api.stripe.com/
        x-sub-format: URL
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: products
  productsPost:
    properties:
      active:
        default: true
        description: Whether the product is currently available for purchase. Defaults to `true`. May only be set if type=`good`.
        type: boolean
        x-samplevalue: true
      attributes:
        description: A list of up to 5 alphanumeric attributes. Applicable to both `service` and `good` types.
        items:
          type: string
        type: array
      caption:
        description: A short one-line description of the product, meant to be displayable to the customer. May only be set if type=`good`.
        type: string
        x-nullable: true
        x-samplevalue: test-product
      deactivate_on:
        description: An array of Connect application names or identifiers that should not be able to order the SKUs for this product. May only be set if type=`good`.
        items:
          type: string
        type: array
      description:
        description: The product's description, meant to be displayable to the customer. May only be set if type=`good`.
        type: string
        x-nullable: true
        x-samplevalue: Ven test product
      id:
        description: An identifier will be randomly generated by Stripe. You can optionally override this ID, but the ID must be unique across all products in your Stripe account. Applicable to both `service` and `good` types.
        type: string
      images:
        description: A list of up to 8 URLs of images for this product, meant to be displayable to the customer. May only be set if type=`good`.
        items:
          type: string
        type: array
      metadata:
        $ref: '#/definitions/productsMetadata'
        description: A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format. Applicable to both `service` and `good` types.
      name:
        description: The product's name, meant to be displayable to the customer. Applicable to both `service` and `good` types.
        type: string
        x-name: true
        x-samplevalue: ven-test-product
      package_dimensions:
        $ref: '#/definitions/productsPostPackage_dimensions'
        description: The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`.
        x-nullable: true
      shippable:
        default: true
        description: Whether this product is shipped (i.e., physical goods). Defaults to `true`. May only be set if type=`good`.
        type: boolean
        x-samplevalue: false
      statement_descriptor:
        description: Extra information about a product which will appear on your customer�s credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used. Only available on products of type=service
        type: string
        x-length: 22
      type:
        default: good
        description: The type of the product. The product is either of type `service`, which is eligible for use with Subscriptions and Plans or `good`, which is eligible for use with Orders and SKUs.
        enum:
        - good
        - service
        type: string
        x-samplevalue: good
        x-sub-format: Enum
      url:
        description: A URL of a publicly-accessible webpage for this product. May only be set if type=`good`.
        type: string
        x-nuallble: true
        x-samplevalue: https://api.stripe.com/
        x-sub-format: URL
    required:
    - name
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: products
  productsPostPackage_dimensions:
    description: The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`.
    properties:
      height:
        description: 'Height, in inches. Maximum precision is 2 decimal places. '
        format: double
        type: number
        x-precision: 2
        x-samplevalue: 12.22
      length:
        description: 'Length, in inches. Maximum precision is 2 decimal places. '
        format: double
        type: number
        x-precision: 2
        x-samplevalue: 122.44
      weight:
        description: Weight, in ounces. Maximum precision is 2 decimal places.
        format: double
        type: number
        x-precision: 2
        x-samplevalue: 76.29
      width:
        description: 'Width, in inches. Maximum precision is 2 decimal places. '
        format: double
        type: number
        x-precision: 2
        x-samplevalue: 776.08
    required:
    - height
    - length
    - weight
    - width
    type: object
    x-has-customfields: false
  productsPostResp:
    properties:
      active:
        default: true
        description: Whether the product is currently available for purchase. Defaults to `true`. May only be set if type=`good`.
        type: boolean
        x-samplevalue: true
      attributes:
        description: A list of up to 5 alphanumeric attributes. Applicable to both `service` and `good` types.
        items:
          type: string
        type: array
      caption:
        description: A short one-line description of the product, meant to be displayable to the customer. May only be set if type=`good`.
        type: string
        x-nullable: true
        x-samplevalue: test-product
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1522395672
        x-sub-format: Date Time Epoch
      deactivate_on:
        description: An array of Connect application names or identifiers that should not be able to order the SKUs for this product. May only be set if type=`good`.
        items:
          type: string
        type: array
      description:
        description: The product's description, meant to be displayable to the customer. May only be set if type=`good`.
        type: string
        x-nullable: true
        x-samplevalue: Ven test product
      id:
        description: An identifier will be randomly generated by Stripe. You can optionally override this ID, but the ID must be unique across all products in your Stripe account. Applicable to both `service` and `good` types.
        type: string
        x-samplevalue: prod_CaSmifXWA6QvD4
      images:
        description: A list of up to 8 URLs of images for this product, meant to be displayable to the customer. May only be set if type=`good`.
        items:
          type: string
        type: array
      livemode:
        description: 'Has the value true if the object exists in live mode or the
          value false if the object exists in test mode. '
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/productsMetadata'
        description: A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format. Applicable to both `service` and `good` types.
      name:
        description: The product's name, meant to be displayable to the customer. Applicable to both `service` and `good` types.
        type: string
        x-name: true
        x-samplevalue: ven-test-product
      object:
        description: 'String representing the object''s type. Objects of the same
          type share the same value. '
        enum:
        - product
        type: string
        x-samplevalue: product
        x-sub-format: Enum
      package_dimensions:
        $ref: '#/definitions/productsPackage_dimensions'
        description: The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`.
        x-nullable: true
      shippable:
        default: true
        description: Whether this product is shipped (i.e., physical goods). Defaults to `true`. May only be set if type=`good`.
        type: boolean
        x-samplevalue: false
      skus:
        $ref: '#/definitions/productsSkus'
        description: A sublist of active SKUs associated with this product.
      statement_descriptor:
        description: Extra information about a product which will appear on your customer's credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used. Only available on products of type=`service`.
        type: string
        x-nullable: true
      type:
        description: The type of the product. The product is either of type `good`, which is eligible for use with Orders and SKUs, or `service`, which is eligible for use with Subscriptions and Plans.
        enum:
        - good
        - service
        type: string
        x-nullable: true
        x-samplevalue: good
        x-sub-format: Enum
      updated:
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1522395672
        x-sub-format: Date Time Epoch
      url:
        description: A URL of a publicly-accessible webpage for this product.
        type: string
        x-nullable: true
        x-samplevalue: https://api.stripe.com/
        x-sub-format: URL
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: products
  productsSkus:
    description: A sublist of active SKUs associated with this product.
    properties:
      data:
        items:
          $ref: '#/definitions/productsSkusData'
        type: array
      has_more:
        description: True if this list has another page of items after this one that can be fetched.
        type: boolean
        x-samplevalue: false
      object:
        description: String representing the object's type. Objects of the same type share the same value. Always has the value "list".
        enum:
        - list
        type: string
        x-samplevalue: list
        x-sub-format: Enum
      total_count:
        format: int32
        type: integer
        x-samplevalue: 0
      url:
        description: The URL where this list can be accessed.
        type: string
        x-samplevalue: /v1/skus?product=prod_CaSmifXWA6QvD4&active=true
        x-sub-format: URL
    type: object
    x-has-customfields: false
  productsSkusData:
    properties:
      active:
        description: Whether the SKU is available for purchase.
        type: boolean
        x-samplevalue: true
      attributes:
        $ref: '#/definitions/productsSkusDataAttributes'
        description: 'A dictionary of attributes and values for the attributes defined
          by the product. If, for example, a product''s attributes are `["size", "gender"]`,
          a valid SKU has the following dictionary of attributes: `{"size": "Medium",
          "gender": "Unisex"}`.'
      created:
        description: 'Time at which the object was created. Measured in seconds since
          the Unix epoch. '
        format: int64
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1463088028
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-samplevalue: usd
        x-sub-format: Currency Code
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
        x-samplevalue: sku_8RJsP3uMsBzffJ
      image:
        description: The URL of an image for this SKU, meant to be displayable to the customer.
        type: string
        x-nullable: true
      inventory:
        $ref: '#/definitions/productsSkusDataInventory'
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/productsMetadata'
        description: A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format. Applicable to both `service` and `good` types.
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - sku
        type: string
        x-samplevalue: sku
        x-sub-format: Enum
      package_dimensions:
        $ref: '#/definitions/productsPackage_dimensions'
        description: The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`.
        x-nullable: true
      price:
        description: The cost of the item as a positive integer in the smallest currency unit (that is, 100 cents to charge $1.00, or 100 to charge 100, Japanese Yen being a zero-decimal currency).
        format: int32
        type: integer
        x-samplevalue: 1000
        x-sub-format: Money
      product:
        description: The ID of the product this SKU is associated with. The product must be currently active.
        type: string
        x-readOnly: true
        x-samplevalue: prod_8JRPjsyfJ8zA7D
      updated:
        format: int64
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1463088028
        x-sub-format: Date Time Epoch
    type: object
    x-has-customfields: true
  productsSkusDataAttributes:
    properties:
      size:
        type: string
        x-samplevalue: Medium
    type: object
    x-has-customfields: true
  productsSkusDataInventory:
    properties:
      quantity:
        description: The count of inventory available. Will be present if and only if `type` is `finite`.
        format: int32
        type: integer
        x-nullable: true
        x-samplevalue: 500
      type:
        description: Inventory type. Possible values are `finite`, `bucket` (not quantified), and `infinite`.
        enum:
        - finite
        - bucket
        - infinite
        type: string
        x-samplevalue: finite
        x-sub-format: Enum
      value:
        description: An indicator of the inventory available. Possible values are `in_stock`, `limited`, and `out_of_stock`. Will be present if and only if `type` is `bucket`.
        enum:
        - in_stock
        - limited
        - out_of_stock
        type: string
        x-nullable: true
        x-sub-format: Enum
    type: object
    x-has-customfields: false
  refunds:
    properties:
      amount:
        description: Amount, in cents.
        format: int32
        type: integer
        x-sub-format: Money
      balance_transaction:
        description: 'Balance transaction that describes the impact on your account
          balance. '
        type: string
        x-nullable: true
        x-reference-objectname: balance
      charge:
        description: ID of the charge that was refunded.
        type: string
        x-reference-objectname: charges
      created:
        description: 'Time at which the object was created. Measured in seconds since
          the Unix epoch. '
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1521140306
        x-sub-format: Date Time Epoch
      currency:
        description: 'Three-letter ISO currency code, in lowercase. Must be a supported
          currency. '
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-sub-format: Currency Code
      failure_balance_transaction:
        description: If the refund failed, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction.
        type: string
      failure_reason:
        description: 'If the refund failed, the reason for refund failure if known.
          Possible values are lost_or_stolen_card, expired_or_canceled_card, or unknown. '
        enum:
        - lost_or_stolen_card
        - expired_or_canceled_card
        - unknown
        type: string
        x-sub-format: Enum
      id:
        description: Unique identifier for the object.
        type: string
        x-name: true
        x-readOnly: true
      metadata:
        $ref: '#/definitions/refundsMetadata'
      object:
        description: 'String representing the object''s type. Objects of the same
          type share the same value. '
        enum:
        - refund
        type: string
        x-readOnly: true
      reason:
        description: 'Reason for the refund. If set, possible values are duplicate,
          fraudulent, and requested_by_customer. '
        enum:
        - duplicate
        - fraudulent
        - requested_by_customer
        type: string
        x-sub-format: Enum
      receipt_number:
        description: 'This is the transaction number that appears on email receipts
          sent for this refund. '
        type: string
        x-nullable: true
      status:
        description: Status of the refund. For credit card refunds, this can be succeeded or failed. For other types of refunds, it can be pending, succeeded, failed, or canceled.
        enum:
        - succeeded
        - failed
        - pending
        - canceled
        type: string
        x-sub-format: Enum
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: refunds
  refundsListObject:
    properties:
      amount:
        description: Amount, in cents.
        format: int32
        type: integer
        x-sub-format: Money
      balance_transaction:
        description: 'Balance transaction that describes the impact on your account
          balance. '
        type: string
        x-nullable: true
        x-reference-objectname: balance
      charge:
        description: ID of the charge that was refunded.
        type: string
        x-reference-objectname: charges
        x-searchable: true
        x-searchable-operators:
        - =
      created:
        description: 'Time at which the object was created. Measured in seconds since
          the Unix epoch. '
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1521140306
        x-searchable: true
        x-searchable-operators:
        - <
        - =
        - '>'
        - '>='
        - <=
        x-sub-format: Date Time Epoch
      currency:
        description: 'Three-letter ISO currency code, in lowercase. Must be a supported
          currency. '
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-sub-format: Currency Code
      failure_balance_transaction:
        description: If the refund failed, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction.
        type: string
      failure_reason:
        description: 'If the refund failed, the reason for refund failure if known.
          Possible values are lost_or_stolen_card, expired_or_canceled_card, or unknown. '
        enum:
        - lost_or_stolen_card
        - expired_or_canceled_card
        - unknown
        type: string
        x-sub-format: Enum
      id:
        description: Unique identifier for the object.
        type: string
        x-name: true
        x-readOnly: true
      metadata:
        $ref: '#/definitions/refundsMetadata'
      object:
        description: 'String representing the object''s type. Objects of the same
          type share the same value. '
        enum:
        - refund
        type: string
        x-readOnly: true
      reason:
        description: 'Reason for the refund. If set, possible values are duplicate,
          fraudulent, and requested_by_customer. '
        enum:
        - duplicate
        - fraudulent
        - requested_by_customer
        type: string
        x-sub-format: Enum
      receipt_number:
        description: 'This is the transaction number that appears on email receipts
          sent for this refund. '
        type: string
        x-nullable: true
      status:
        description: Status of the refund. For credit card refunds, this can be succeeded or failed. For other types of refunds, it can be pending, succeeded, failed, or canceled.
        enum:
        - succeeded
        - failed
        - pending
        - canceled
        type: string
        x-sub-format: Enum
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-searchable: true
    x-searchable-joins:
    - and
    x-vendor-objectname: refunds
  refundsMetadata:
    description: 'Set of key-value pairs that you can attach to an object. This can
      be useful for storing additional information about the object in a structured
      format. '
    properties: {}
    type: object
    x-has-customfields: true
  refundsPatch:
    properties:
      metadata:
        $ref: '#/definitions/refundsPatchMetadata'
    type: object
    x-has-customfields: true
    x-vendor-objectname: refunds
  refundsPatchMetadata:
    properties: {}
    type: object
  refundsPatchResp:
    properties:
      amount:
        description: Amount, in cents.
        format: int32
        type: integer
        x-sub-format: Money
      balance_transaction:
        description: 'Balance transaction that describes the impact on your account
          balance. '
        type: string
        x-nullable: true
        x-reference-objectname: balance
      charge:
        description: ID of the charge that was refunded.
        type: string
        x-reference-objectname: charges
      created:
        description: 'Time at which the object was created. Measured in seconds since
          the Unix epoch. '
        format: int64
        type: integer
        x-mask: milliseconds
        x-samplevalue: 1521140306
        x-sub-format: Date Time Epoch
      currency:
        description: 'Three-letter ISO currency code, in lowercase. Must be a supported
          currency. '
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-sub-format: Currency Code
      failure_balance_transaction:
        description: If the refund failed, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction.
        type: string
      failure_reason:
        description: 'If the refund failed, the reason for refund failure if known.
          Possible values are lost_or_stolen_card, expired_or_canceled_card, or unknown. '
        enum:
        - lost_or_stolen_card
        - expired_or_canceled_card
        - unknown
        type: string
        x-sub-format: Enum
      id:
        description: Unique identifier for the object.
        type: string
        x-name: true
        x-readOnly: true
      metadata:
        $ref: '#/definitions/refundsMetadata'
      object:
        description: 'String representing the object''s type. Objects of the same
          type share the same value. '
        enum:
        - refund
        type: string
        x-readOnly: true
      reason:
        description: 'Reason for the refund. If set, possible values are duplicate,
          fraudulent, and requested_by_customer. '
        enum:
        - duplicate
        - fraudulent
        - requested_by_customer
        type: string
        x-sub-format: Enum
      receipt_number:
        description: 'This is the transaction number that appears on email receipts
          sent for this refund. '
        type: string
        x-nullable: true
      status:
        description: Status of the refund. For credit card refunds, this can be succeeded or failed. For other types of refunds, it can be pending, succeeded, failed, or canceled.
        enum:
        - succeeded
        - failed
        - pending
        - canceled
        type: string
        x-sub-format: Enum
    type: object
    x-has-customfields: true
    x-primary-key:
    - id
    x-vendor-objectname: refunds
  reversals:
    properties:
      has_more:
        type: boolean
      object:
        type: string
      object_:
        type: string
      total_count:
        format: int32
        type: integer
      url:
        type: string
    type: object
  sourceTypesBalResp:
    properties:
      bank_account:
        format: int64
        type: integer
        x-samplevalue: 517062
      bitcoin_receiver:
        format: int64
        type: integer
        x-samplevalue: 517062
      card:
        format: int64
        type: integer
        x-samplevalue: 517062
    title: sourceTypesBalResp
    type: object
    x-has-customfields: false
  sourcemetadata:
    properties: {}
    title: sourcemetadata
    type: object
    x-has-customfields: false
  subscriptionPatch:
    properties:
      ' billing':
        enum:
        - charge_automatically
        - send_invoice
        type: string
        x-samplevalue: charge_automatically
      application_fee_percent:
        format: double
        type: number
        x-samplevalue: 10
      billing_cycle_anchor:
        enum:
        - now
        - unchanged
        type: string
        x-samplevalue: now
      cancel_at_period_end:
        type: boolean
        x-samplevalue: true
      coupon:
        type: string
        x-samplevalue: free-period
      days_until_due:
        format: int32
        type: integer
        x-samplevalue: 10
      items:
        items:
          $ref: '#/definitions/subscriptionPatchReqItems'
        type: array
      metadata:
        $ref: '#/definitions/metadata'
      prorate:
        type: boolean
        x-samplevalue: true
      proration_date:
        type: integer
        x-samplevalue: 10
      source:
        $ref: '#/definitions/subscriptionPatchReqsource'
      tax_percent:
        format: double
        type: number
        x-samplevalue: 7.5
      trial_end:
        format: int32
        type: integer
        x-mask: epoch
        x-samplevalue: 1525197507
      trial_from_plan:
        type: boolean
        x-samplevalue: true
    required:
    - source
    title: subscriptionPatch
    type: object
    x-has-customfields: false
    x-venfor-objectname: subscriptions
  subscriptionPatchReqItems:
    properties:
      id:
        type: string
        x-samplevalue: plan_ChEvY5ZTAjB2mv
      metadata:
        $ref: '#/definitions/itemsmetadata'
      plan:
        type: string
        x-samplevalue: plan_ChEvY5ZTAjB2mv
      quantity:
        format: int32
        type: integer
        x-samplevalue: 10
    title: items
    type: object
    x-has-customfields: false
  subscriptionPatchReqsource:
    properties:
      address_city:
        type: string
        x-samplevalue: dallas
      address_country:
        type: string
        x-samplevalue: USA
      address_line1:
        type: string
        x-samplevalue: Company name
      address_line2:
        type: string
        x-samplevalue: suite 525
      address_state:
        type: string
        x-samplevalue: TX
      address_zip:
        format: int32
        type: integer
        x-samplevalue: 75038
      currency:
        type: string
        x-samplevalue: usd
      cvc:
        format: int32
        type: integer
        x-samplevalue: 984
      default_for_currency:
        type: boolean
        x-samplevalue: true
      exp_month:
        format: int32
        type: integer
        x-samplevalue: 12
      exp_year:
        format: int32
        type: integer
        x-samplevalue: 2022
      metadata:
        $ref: '#/definitions/sourcemetadata'
      name:
        type: string
        x-samplevalue: mydata
      number:
        type: string
        x-samplevalue: '4242424242424242'
      object:
        type: string
        x-samplevalue: card
    required:
    - object
    - number
    - exp_month
    - cvc
    title: source
    type: object
    x-has-customfields: false
  subscriptionPatchResItems:
    properties:
      data:
        items:
          $ref: '#/definitions/subscriptionPatchResdata'
        type: array
      has_more:
        type: boolean
        x-samplevalue: false
      object:
        type: string
        x-samplevalue: list
      total_count:
        format: int32
        type: integer
        x-samplevalue: 1
      url:
        type: string
        x-samplevalue: /v1/subscription_items?subscription=sub_CpNaULYGcmlc8K
    title: items
    type: object
    x-has-customfields: false
  subscriptionPatchRescoupon:
    properties:
      amount_off:
        format: int32
        type: integer
        x-samplevalue: 3
      created:
        format: int32
        type: integer
        x-samplevalue: 1517942713
      currency:
        type: string
        x-samplevalue: USD
      duration:
        enum:
        - forever
        - once
        - repeating
        type: string
        x-samplevalue: repeating
      duration_in_months:
        format: int32
        type: integer
        x-samplevalue: 3
      id:
        type: string
        x-samplevalue: 25OFF
      livemode:
        type: boolean
        x-samplevalue: false
      max_redemptions:
        format: int32
        type: integer
        x-samplevalue: 2
      metadata:
        $ref: '#/definitions/couponmetadata'
      object:
        type: string
        x-samplevalue: coupon
      percent_off:
        format: int32
        type: integer
        x-samplevalue: 25
      redeem_by:
        format: int32
        type: integer
        x-samplevalue: 1533784701
      times_redeemed:
        format: int32
        type: integer
        x-samplevalue: 1368
      valid:
        type: boolean
        x-samplevalue: true
    title: coupon
    type: object
    x-has-customfields: false
  subscriptionPatchResdata:
    properties:
      created:
        format: int32
        type: integer
        x-samplevalue: 1525835901
      id:
        type: string
        x-samplevalue: si_CpNaj9NckeSYfh
      object:
        type: string
        x-samplevalue: subscription_item
      plan:
        $ref: '#/definitions/subscriptionPatchResplan'
      quantity:
        format: int32
        type: integer
        x-samplevalue: 1
      subscription:
        type: string
        x-samplevalue: sub_CpNaULYGcmlc8K
    title: data
    type: object
    x-has-customfields: false
  subscriptionPatchResdiscount:
    properties:
      coupon:
        $ref: '#/definitions/subscriptionPatchRescoupon'
      customer:
        type: string
        x-samplevalue: cus_CpNauLRGQE3bOB
      end:
        format: int32
        type: integer
        x-samplevalue: 1533784701
      object:
        type: string
        x-samplevalue: discount
      start:
        format: int32
        type: integer
        x-samplevalue: 1525835901
      subscription:
        type: string
        x-samplevalue: sub_CpNaULYGcmlc8K
    title: discount
    type: object
    x-has-customfields: false
  subscriptionPatchResp:
    properties:
      ' billing':
        enum:
        - charge_automatically
        - send_invoice
        type: string
        x-samplevalue: charge_automatically
      application_fee_percent:
        format: double
        type: number
        x-samplevalue: 10.23
      billing_cycle_anchor:
        format: int32
        type: integer
      cancel_at_period_end:
        type: boolean
        x-samplevalue: false
      canceled_at:
        format: int32
        type: integer
      created:
        format: int32
        type: integer
        x-samplevalue: 1525835901
      current_period_end:
        format: int32
        type: integer
        x-samplevalue: 1528514301
      current_period_start:
        format: int32
        type: integer
        x-samplevalue: 1525835901
      customer:
        type: string
        x-samplevalue: cus_CpOYVAgmLqhAtH
      days_until_due:
        format: int32
        type: integer
      discount:
        $ref: '#/definitions/subscriptionPatchResdiscount'
      ended_at:
        format: int32
        type: integer
        x-samplevalue: 1533784701
      id:
        type: string
        x-readOnly: true
        x-samplevalue: sub_CpNaULYGcmlc8K
      items:
        $ref: '#/definitions/subscriptionPatchResItems'
      livemode:
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/metadata'
      object:
        type: string
        x-samplevalue: subscription
      plan:
        $ref: '#/definitions/subscriptionPatchResplan'
      quantity:
        format: int32
        type: integer
        x-samplevalue: 1
      start:
        format: int32
        type: integer
        x-samplevalue: 1525835901
      status:
        enum:
        - trialing
        - active
        - past_due
        - canceled
        - unpaid
        type: string
        x-samplevalue: active
      tax_percent:
        format: double
        type: number
        x-samplevalue: 10.234
      trial_end:
        format: int32
        type: integer
        x-samplevalue: 1525835901
      trial_start:
        format: int32
        type: integer
        x-samplevalue: 1525835901
    title: subscriptionPatchResp
    type: object
    x-has-customfields: false
    x-primarykey:
    - id
    x-vendor-objectname: subscriptions
  subscriptionPatchResplan:
    properties:
      aggregate_usage:
        enum:
        - sum
        - last_during_peroid
        - last_ever
        - max
        type: string
        x-samplevalue: string
      amount:
        format: int32
        type: integer
        x-samplevalue: 999
      billing_scheme:
        enum:
        - per_unit
        - tired
        type: string
        x-samplevalue: per_unit
      created:
        format: int32
        type: integer
        x-samplevalue: 1525835900
      currency:
        type: string
        x-samplevalue: usd
      id:
        type: string
        x-samplevalue: plan_CpNazPoPr8KskY
      interval:
        enum:
        - day
        - week
        - month
        - year
        type: string
        x-samplevalue: month
      interval_count:
        format: int32
        type: integer
        x-samplevalue: 1
      livemode:
        type: boolean
        x-samplevalue: false
      name:
        type: string
        x-samplevalue: Diamond Express
      nickname:
        type: string
        x-samplevalue: string
      object:
        type: string
        x-samplevalue: plan
      product:
        type: string
        x-samplevalue: prod_CpNaObgkX24MkU
      statement_descriptor:
        type: string
        x-samplevalue: string
      tiers:
        items:
          $ref: '#/definitions/subscriptionPatchResplantiers'
        type: array
      tiers_mode:
        enum:
        - graduated
        - volume
        type: string
        x-samplevalue: string
      transform_usage:
        $ref: '#/definitions/subscriptionPatchResplantransform_usage'
      trial_period_days:
        format: int32
        type: integer
        x-samplevalue: 10
      usage_type:
        enum:
        - licensed
        - metered
        type: string
        x-samplevalue: licensed
    title: plan
    type: object
    x-has-customfields: false
  subscriptionPatchResplantiers:
    properties:
      amount:
        format: int32
        type: integer
        x-samplevalue: 10
      up_to:
        format: int32
        type: integer
        x-samplevalue: 10
    title: tiers
    type: object
    x-has-customfields: false
  subscriptionPatchResplantransform_usage:
    properties:
      divided_by:
        format: int32
        type: integer
        x-samplevalue: 10
      round:
        enum:
        - up
        - down
        type: string
        x-samplevalue: up
    title: transform_usage
    type: object
    x-has-customfields: false
  subscriptionPostModel:
    properties:
      application_fee_percent:
        format: int32
        type: integer
        x-samplevalue: 10
      billing:
        enum:
        - charge_automatically
        - send_invoice
        type: string
        x-samplevalue: charge_automatically
      billing_cycle_anchor:
        format: int32
        type: integer
        x-mask: epoch
        x-samplevalue: 1525197507
      coupon:
        type: string
        x-samplevalue: free-period
      customer:
        type: string
        x-readOnly: true
        x-samplevalue: cus_CmgFiYT5tvp5yJ
      days_until_due:
        format: int32
        type: integer
        x-samplevalue: 10
      items:
        items:
          $ref: '#/definitions/subscriptionPostReqItems'
        type: array
      metadata:
        $ref: '#/definitions/metadata'
      prorate:
        type: boolean
        x-samplevalue: true
      source:
        $ref: '#/definitions/subscriptionpostsource'
      tax_percent:
        format: double
        type: number
        x-samplevalue: 7.5
      trial_end:
        format: int32
        type: integer
        x-mask: epoch
        x-samplevalue: 1525197507
      trial_from_plan:
        type: boolean
        x-samplevalue: true
      trial_period_days:
        format: int32
        type: integer
        x-samplevalue: 28
    required:
    - customer
    - items
    title: subscriptionPostModel
    type: object
    x-has-customfields: false
    x-primary-key:
    - customer
    x-vendor-objectname: subscriptions
  subscriptionPostReqItems:
    properties:
      plan:
        type: string
        x-samplevalue: plan_ChEvY5ZTAjB2mv
      quantity:
        format: int32
        type: integer
        x-samplevalue: 10
    required:
    - plan
    title: subscriptionPostReqItems
    type: object
    x-has-customfields: false
  subscriptionPostResp:
    properties:
      application_fee_percent:
        format: double
        type: number
        x-samplevalue: 10.23
      billing:
        enum:
        - charge_automatically
        - send_invoice
        type: string
        x-samplevalue: charge_automatically
      billing_cycle_anchor:
        format: int32
        type: integer
        x-samplevalue: 1525835901
      cancel_at_period_end:
        type: boolean
        x-samplevalue: false
      canceled_at:
        type: string
      created:
        format: int32
        type: integer
        x-samplevalue: 1525835901
      current_period_end:
        format: int32
        type: integer
        x-samplevalue: 1528514301
      current_period_start:
        format: int32
        type: integer
        x-samplevalue: 1525835901
      customer:
        type: string
        x-samplevalue: cus_CpOYVAgmLqhAtH
      days_until_due:
        format: int32
        type: integer
      discount:
        $ref: '#/definitions/discount'
      ended_at:
        format: int32
        type: integer
        x-samplevalue: 1533784701
      id:
        type: string
        x-read-only: true
        x-samplevalue: sub_CpNaULYGcmlc8K
      items:
        $ref: '#/definitions/subscriptionspostrespitems'
      livemode:
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/metadata'
      object:
        type: string
        x-samplevalue: subscription
      plan:
        $ref: '#/definitions/subscriptionsPostRespplan'
      quantity:
        format: int32
        type: integer
        x-samplevalue: 1
      start:
        format: int32
        type: integer
        x-samplevalue: 1525835901
      status:
        enum:
        - trialing
        - active
        - past_due
        - canceled
        - unpaid
        type: string
        x-samplevalue: active
      tax_percent:
        format: double
        type: number
        x-samplevalue: 10.234
      trial_end:
        format: int32
        type: integer
        x-samplevalue: 1525835901
      trial_start:
        format: int32
        type: integer
        x-samplevalue: 1525835901
    title: subscriptionPostResp
    type: object
    x-has-customfields: false
    x-primary-key:
    - id
    x-vendor-objectname: subcriptions
  subscriptionpostsource:
    properties:
      address_city:
        type: string
        x-samplevalue: dallas
      address_country:
        type: string
        x-samplevalue: USA
      address_line1:
        type: string
        x-samplevalue: Company name
      address_line2:
        type: string
        x-samplevalue: suite 525
      address_state:
        type: string
        x-samplevalue: TX
      address_zip:
        format: int32
        type: integer
        x-samplevalue: 75038
      currency:
        type: string
        x-samplevalue: usd
      cvc:
        format: int32
        type: integer
        x-samplevalue: 984
      default_for_currency:
        type: boolean
        x-samplevalue: true
      exp_month:
        format: int32
        type: integer
        x-samplevalue: 12
      exp_year:
        format: int32
        type: integer
        x-samplevalue: 2022
      metadata:
        $ref: '#/definitions/sourcemetadata'
      name:
        type: string
        x-samplevalue: mydata
      number:
        type: string
        x-samplevalue: '4242424242424242'
      object:
        type: string
        x-samplevalue: card
    title: subscriptionpostsource
    type: object
    x-has-customfields: false
  subscriptions:
    properties:
      application_fee_percent:
        description: A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account.
        format: double
        type: number
        x-max-length: 5
        x-min-length: 1
        x-nullable: true
        x-precision: 2
      billing:
        description: Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions.
        enum:
        - charge_automatically
        - send_invoice
        type: string
        x-nullable: true
        x-samplevalue: charge_automatically
        x-sub-format: Enum
      billing_cycle_anchor:
        description: Determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices.
        format: int32
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      cancel_at_period_end:
        description: If the subscription has been canceled with the `at_period_end` flag set to `true`, `cancel_at_period_end` on the subscription will be true. You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.
        type: boolean
        x-samplevalue: false
      canceled_at:
        description: If the subscription has been canceled, the date of that cancellation. If the subscription was canceled with `cancel_at_period_end`, `canceled_at` will still reflect the date of the initial cancellation request, not the end of the subscription period when the subscription is automatically moved to a canceled state.
        format: int32
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-sub-format: Date Time Epoch
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int32
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      current_period_end:
        description: End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created.
        format: int32
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-samplevalue: 1523803200
        x-sub-format: Date Time Epoch
      current_period_start:
        description: Start of the current period that the subscription has been invoiced for.
        format: int32
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      customer:
        description: ID of the customer who owns the subscription.
        type: string
        x-readOnly: true
        x-samplevalue: cus_CURl3lB2LxHST1
      days_until_due:
        description: Number of days a customer has to pay invoices generated by this subscription. This value will be `null` for subscriptions where `billing=charge_automatically`.
        format: int32
        type: integer
        x-nullable: true
      discount:
        $ref: '#/definitions/subscriptionsDiscount'
        description: Describes the current discount applied to this subscription, if there is one. When billing, a discount applied to a subscription overrides a discount applied on a customer-wide basis.
        x-nullable: true
      ended_at:
        description: If the subscription has ended, the date the subscription ended.
        format: int32
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
        x-samplevalue: sub_CUx9adMEOqN0HA
      items:
        $ref: '#/definitions/subscriptionsItems'
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/subscriptionsMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - subscription
        type: string
        x-samplevalue: subscription
        x-sub-format: Enum
      plan:
        $ref: '#/definitions/subscriptionsPlan'
        description: Hash describing the plan the customer is subscribed to.
        x-nullable: true
      quantity:
        description: The quantity of the plan to which the customer should be subscribed. For example, if your plan is $10/user/month, and your customer has 5 users, you could pass 5 as the quantity to have the customer charged $50 (5 x $10) monthly.
        format: int32
        type: integer
        x-nullable: true
        x-samplevalue: 1
      start:
        description: Date the most recent update to this subscription started.
        format: int32
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      status:
        description: Possible values are `trialing`, `active`, `past_due`, `canceled`, or `unpaid`. A subscription still in its trial period is `trialing` and moves to `active` when the trial period is over. If subscription `billing=charge_automatically` it becomes `past_due` when payment to renew it fails and `canceled` or `unpaid` (depending on your subscriptions settings) when Stripe has exhausted all payment retry attempts. If subscription `billing=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed.) After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.
        enum:
        - active
        - canceled
        - past_due
        - trialing
        - unpaid
        type: string
        x-readOnly: true
        x-samplevalue: active
        x-sub-format: Enum
      tax_percent:
        description: If provided, each invoice created by this subscription will apply the tax rate, increasing the amount billed to the customer.
        format: double
        type: number
        x-nullable: true
      trial_end:
        description: If the subscription has a trial, the end of that trial.
        format: int32
        type: integer
        x-nullable: true
      trial_start:
        description: If the subscription has a trial, the beginning of that trial.
        format: int32
        type: integer
        x-nullable: true
    title: subscriptions
    type: object
    x-has-customfields: false
    x-primary-key:
    - id
    x-vendor-objectname: subscriptions
  subscriptionsDiscount:
    properties:
      coupon:
        $ref: '#/definitions/subscriptionsDiscountCoupon'
      customer:
        type: string
        x-nullable: true
        x-readOnly: true
        x-samplevalue: cus_CURl3lB2LxHST1
      end:
        description: If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.
        format: int32
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-samplevalue: 1529073600
        x-sub-format: Date Time Epoch
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - discount
        type: string
        x-samplevalue: discount
        x-sub-format: Enum
      start:
        description: Date that the coupon was applied.
        format: int32
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      subscription:
        description: The subscription that this coupon is applied to, if it is applied to a particular subscription.
        type: string
        x-nullable: true
        x-samplevalue: sub_CUx9adMEOqN0HA
    title: subscriptionsDiscount
    type: object
    x-has-customfields: false
  subscriptionsDiscountCoupon:
    properties:
      amount_off:
        description: Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.
        format: int32
        type: integer
        x-nullable: true
        x-sub-format: Money
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int32
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1521124662
        x-sub-format: Date Time Epoch
      currency:
        description: If `amount_off` has been set, the three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the amount to take off.
        enum:
        - aud
        - eur
        - dkk
        - gbp
        - nok
        - sek
        - usd
        - chf
        - brl
        - cad
        - hkd
        - jpy
        - mxn
        - nzd
        - sgd
        type: string
        x-nullable: true
        x-sub-format: Currency Code
      duration:
        description: One of `forever`, `once`, and `repeating`. Describes how long a customer who applies this coupon will get the discount.
        enum:
        - forever
        - once
        - repeating
        type: string
        x-samplevalue: repeating
        x-sub-format: Enum
      duration_in_months:
        description: If `duration` is `repeating`, the number of months the coupon applies. Null if coupon `duration` is `forever` or `once`.
        format: int32
        type: integer
        x-nullable: true
        x-samplevalue: 3
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
        x-samplevalue: 15OFF
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      max_redemptions:
        description: Maximum number of times this coupon can be redeemed, in total, before it is no longer valid.
        type: string
        x-nullable: true
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - coupon
        type: string
        x-samplevalue: coupon
        x-sub-format: Enum
      percent_off:
        description: Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For example, a coupon with percent_off of 50 will make a %s100 invoice %s50 instead.
        format: int32
        type: integer
        x-nullable: true
        x-samplevalue: 25
      redeem_by:
        description: Date after which the coupon can no longer be redeemed.
        type: string
        x-nullable: true
      times_redeemed:
        description: Number of times this coupon has been applied to a customer.
        format: int32
        type: integer
        x-samplevalue: 1
      valid:
        description: Taking account of the above properties, whether this coupon can still be applied to a customer.
        type: boolean
        x-samplevalue: true
    title: subscriptionsDiscountCoupon
    type: object
    x-has-customfields: false
  subscriptionsItems:
    properties:
      data:
        items:
          $ref: '#/definitions/subscriptionsItemsData'
        type: array
      has_more:
        type: boolean
        x-samplevalue: false
      object:
        type: string
        x-samplevalue: list
      total_count:
        format: int32
        type: integer
        x-samplevalue: 1
      url:
        type: string
        x-samplevalue: /v1/subscription_items?subscription=sub_CUx9adMEOqN0HA
    title: subscriptionsItems
    type: object
    x-has-customfields: false
  subscriptionsItemsData:
    properties:
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int32
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
        x-samplevalue: si_CUx9rs7DZOY4KZ
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - subscription_item
        type: string
        x-samplevalue: subscription_item
        x-sub-format: Enum
      plan:
        $ref: '#/definitions/subscriptionsItemsDataPlan'
      quantity:
        description: The [quantity](/docs/subscriptions/quantities) of the plan to which the customer should be subscribed.
        format: int32
        type: integer
        x-samplevalue: 1
      subscription:
        type: string
        x-nullable: true
        x-samplevalue: sub_CUx9adMEOqN0HA
    title: subscriptionsItemsData
    type: object
    x-has-customfields: false
  subscriptionsItemsDataPlan:
    properties:
      amount:
        description: The amount in %s to be charged on the interval specified.
        format: int32
        type: integer
        x-nullable: true
        x-samplevalue: 5000
        x-sub-format: Money
      billing_scheme:
        description: 'Describes how to compute the price per period. Either per_unit
          or tiered. per_unit indicates that the fixed amount (specified in amount)
          will be charged per unit in quantity (for plans with usage_type=licensed),
          or per unit of total usage (for plans with usage_type=metered). tiered indicates
          that the unit pricing will be computed using a tiering strategy as defined
          using the tiers and tiers_mode attributes. '
        enum:
        - tiered
        - per_unit
        type: string
        x-conditionally-required-description: The `tiers` parameter requires billing_scheme to be set to tiered.
        x-sub-format: Enum
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int32
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1521116764
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        enum:
        - aud
        - eur
        - dkk
        - gbp
        - nok
        - sek
        - usd
        - chf
        - brl
        - cad
        - hkd
        - jpy
        - mxn
        - nzd
        - sgd
        type: string
        x-samplevalue: usd
        x-sub-format: Currency Code
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
        x-samplevalue: ruby-jar2
      interval:
        description: One of `day`, `week`, `month` or `year`. The frequency with which a subscription should be billed.
        enum:
        - day
        - week
        - month
        - year
        type: string
        x-samplevalue: month
        x-sub-format: Enum
      interval_count:
        description: The number of intervals (specified in the `interval` property) between each subscription billing. For example, `interval=month` and `interval_count=3` bills every 3 months.
        format: int32
        type: integer
        x-samplevalue: 1
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      name:
        type: string
        x-name: true
        x-samplevalue: Ruby Jar
      nickname:
        description: A brief description of the plan, hidden from customers.
        type: string
        x-nullable: true
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - plan
        type: string
        x-samplevalue: plan
        x-sub-format: Enum
      product:
        description: The product whose pricing this plan determines.
        type: string
        x-nullable: true
        x-readOnly: true
        x-samplevalue: prod_CUuzW7XOYFkRlX
      statement_descriptor:
        description: Extra information about a product which will appear on your customer's credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used. Only available on products of type=`service`.
        type: string
        x-nullable: true
      tiers:
        description: Each element represents a pricing tier. This parameter requires billing_scheme to be set to tiered
        items:
          $ref: '#/definitions/subscriptionsPlanTiers'
        type: array
      tiers_mode:
        description: 'Defines if the tiering price should be graduated or volume based.
          In volume-based tiering, the maximum quantity within a period determines
          the per unit price, in graduated tiering pricing can successively change
          as the quantity grows. '
        enum:
        - graduated
        - volume
        type: string
        x-sub-format: Enum
      transform_usage:
        $ref: '#/definitions/subscriptionsPlanTransformUsage'
        description: Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with tiers.
      trial_period_days:
        description: 'Integer representing the number of trial period days before
          the customer is charged for the first time. '
        format: int32
        type: integer
      usage_type:
        default: licensed
        description: 'Configures how the quantity per period should be determined,
          can be either metered or licensed. licensed will automatically bill the
          quantity set for a plan when adding it to a subscription, metered will aggregate
          the total usage based on usage records. Defaults to licensed. '
        enum:
        - metered
        - licensed
        type: string
        x-sub-format: Enum
    title: subscriptionsItemsDataPlan
    type: object
    x-has-customfields: false
  subscriptionsListObject:
    properties:
      application_fee_percent:
        description: A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account.
        format: double
        type: number
        x-max-length: 5
        x-min-length: 1
        x-nullable: true
        x-precision: 2
      billing:
        description: Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions.
        enum:
        - charge_automatically
        - send_invoice
        type: string
        x-nullable: true
        x-samplevalue: charge_automatically
        x-sub-format: Enum
      billing_cycle_anchor:
        description: Determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices.
        format: int32
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      cancel_at_period_end:
        description: If the subscription has been canceled with the `at_period_end` flag set to `true`, `cancel_at_period_end` on the subscription will be true. You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.
        type: boolean
        x-samplevalue: false
      canceled_at:
        description: If the subscription has been canceled, the date of that cancellation. If the subscription was canceled with `cancel_at_period_end`, `canceled_at` will still reflect the date of the initial cancellation request, not the end of the subscription period when the subscription is automatically moved to a canceled state.
        format: int32
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-sub-format: Date Time Epoch
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int32
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      current_period_end:
        description: End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created.
        format: int32
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-samplevalue: 1523803200
        x-sub-format: Date Time Epoch
      current_period_start:
        description: Start of the current period that the subscription has been invoiced for.
        format: int32
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      customer:
        description: ID of the customer who owns the subscription.
        type: string
        x-readOnly: true
        x-samplevalue: cus_CURl3lB2LxHST1
      days_until_due:
        description: Number of days a customer has to pay invoices generated by this subscription. This value will be `null` for subscriptions where `billing=charge_automatically`.
        format: int32
        type: integer
        x-nullable: true
      discount:
        $ref: '#/definitions/subscriptionsDiscount'
        description: Describes the current discount applied to this subscription, if there is one. When billing, a discount applied to a subscription overrides a discount applied on a customer-wide basis.
        x-nullable: true
      ended_at:
        description: If the subscription has ended, the date the subscription ended.
        format: int32
        type: integer
        x-mask: milliseconds
        x-nullable: true
        x-readOnly: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
        x-samplevalue: sub_CUx9adMEOqN0HA
      items:
        $ref: '#/definitions/subscriptionsItems'
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/subscriptionsMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - subscription
        type: string
        x-samplevalue: subscription
        x-sub-format: Enum
      plan:
        $ref: '#/definitions/subscriptionsPlan'
        description: Hash describing the plan the customer is subscribed to.
        x-nullable: true
      quantity:
        description: The quantity of the plan to which the customer should be subscribed. For example, if your plan is $10/user/month, and your customer has 5 users, you could pass 5 as the quantity to have the customer charged $50 (5 x $10) monthly.
        format: int32
        type: integer
        x-nullable: true
        x-samplevalue: 1
      start:
        description: Date the most recent update to this subscription started.
        format: int32
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1521124800
        x-sub-format: Date Time Epoch
      status:
        description: Possible values are `trialing`, `active`, `past_due`, `canceled`, or `unpaid`. A subscription still in its trial period is `trialing` and moves to `active` when the trial period is over. If subscription `billing=charge_automatically` it becomes `past_due` when payment to renew it fails and `canceled` or `unpaid` (depending on your subscriptions settings) when Stripe has exhausted all payment retry attempts. If subscription `billing=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed.) After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.
        enum:
        - active
        - canceled
        - past_due
        - trialing
        - unpaid
        type: string
        x-readOnly: true
        x-samplevalue: active
        x-sub-format: Enum
      tax_percent:
        description: If provided, each invoice created by this subscription will apply the tax rate, increasing the amount billed to the customer.
        format: double
        type: number
        x-nullable: true
      trial_end:
        description: If the subscription has a trial, the end of that trial.
        format: int32
        type: integer
        x-nullable: true
      trial_start:
        description: If the subscription has a trial, the beginning of that trial.
        format: int32
        type: integer
        x-nullable: true
    title: subscriptionsListObject
    type: object
    x-has-customfields: false
    x-primary-key:
    - id
    x-vendor-objectname: subscriptions
  subscriptionsMetadata:
    description: 'Set of key-value pairs that you can attach to an object. This can
      be useful for storing additional information about the object in a structured
      format. '
    properties: {}
    title: subscriptionsMetadata
    type: object
    x-has-customfields: true
  subscriptionsPlan:
    properties:
      amount:
        description: The amount in %s to be charged on the interval specified.
        format: int32
        type: integer
        x-nullable: true
        x-samplevalue: 5000
        x-sub-format: Money
      billing_scheme:
        description: 'Describes how to compute the price per period. Either per_unit
          or tiered. per_unit indicates that the fixed amount (specified in amount)
          will be charged per unit in quantity (for plans with usage_type=licensed),
          or per unit of total usage (for plans with usage_type=metered). tiered indicates
          that the unit pricing will be computed using a tiering strategy as defined
          using the tiers and tiers_mode attributes. '
        enum:
        - tiered
        - per_unit
        type: string
        x-conditionally-required-description: The `tiers` parameter requires billing_scheme to be set to tiered.
        x-sub-format: Enum
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int32
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-samplevalue: 1521116764
        x-sub-format: Date Time Epoch
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        enum:
        - aud
        - eur
        - dkk
        - gbp
        - nok
        - sek
        - usd
        - chf
        - brl
        - cad
        - hkd
        - jpy
        - mxn
        - nzd
        - sgd
        type: string
        x-samplevalue: usd
        x-sub-format: Currency Code
      id:
        description: Unique identifier for the object.
        type: string
        x-readOnly: true
        x-samplevalue: ruby-jar2
      interval:
        description: One of `day`, `week`, `month` or `year`. The frequency with which a subscription should be billed.
        enum:
        - day
        - week
        - month
        - year
        type: string
        x-samplevalue: month
        x-sub-format: Enum
      interval_count:
        description: The number of intervals (specified in the `interval` property) between each subscription billing. For example, `interval=month` and `interval_count=3` bills every 3 months.
        format: int32
        type: integer
        x-samplevalue: 1
      livemode:
        description: Flag indicating whether the object exists in live mode or test mode.
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/subscriptionsMetadata'
        description: Set of key/value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
      name:
        type: string
        x-name: true
        x-samplevalue: Ruby Jar
      nickname:
        description: A brief description of the plan, hidden from customers.
        type: string
        x-nullable: true
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - plan
        type: string
        x-samplevalue: plan
        x-sub-format: Enum
      product:
        description: The product whose pricing this plan determines.
        type: string
        x-nullable: true
        x-readOnly: true
        x-samplevalue: prod_CUuzW7XOYFkRlX
      statement_descriptor:
        description: Extra information about a product which will appear on your customer's credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used. Only available on products of type=`service`.
        type: string
        x-nullable: true
      tiers:
        description: Each element represents a pricing tier. This parameter requires billing_scheme to be set to tiered
        items:
          $ref: '#/definitions/subscriptionsPlanTiers'
        type: array
      tiers_mode:
        description: 'Defines if the tiering price should be graduated or volume based.
          In volume-based tiering, the maximum quantity within a period determines
          the per unit price, in graduated tiering pricing can successively change
          as the quantity grows. '
        enum:
        - graduated
        - volume
        type: string
        x-sub-format: Enum
      transform_usage:
        $ref: '#/definitions/subscriptionsPlanTransformUsage'
        description: Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with tiers.
      trial_period_days:
        description: 'Integer representing the number of trial period days before
          the customer is charged for the first time. '
        format: int32
        type: integer
      usage_type:
        default: licensed
        description: 'Configures how the quantity per period should be determined,
          can be either metered or licensed. licensed will automatically bill the
          quantity set for a plan when adding it to a subscription, metered will aggregate
          the total usage based on usage records. Defaults to licensed. '
        enum:
        - metered
        - licensed
        type: string
        x-sub-format: Enum
    title: subscriptionsPlan
    type: object
    x-has-customfields: false
  subscriptionsPlanTiers:
    properties:
      amount:
        description: 'The per unit billing amount for each individual unit for which
          this tier applies. '
        type: string
        x-sub-format: Money
      up_to:
        description: 'Specifies the upper bound of this tier. The lower bound of a
          tier is the upper bound of the previous tier adding one. Use inf to define
          a fallback tier. '
        type: string
    title: subscriptionsPlanTiers
    type: object
    x-has-customfields: false
  subscriptionsPlanTransformUsage:
    properties:
      divide_by:
        description: 'Divide usage by this number. '
        format: int32
        type: integer
      round:
        description: After division, either round the result up or down.
        enum:
        - up
        - down
        type: string
        x-sub-format: Enum
    title: subscriptionsPlanTransformUsage
    type: object
    x-has-customfields: false
  subscriptionsPostRespData:
    properties:
      created:
        format: int32
        type: integer
        x-samplevalue: 1525835901
      id:
        type: string
        x-samplevalue: si_CpNaj9NckeSYfh
      metadata:
        $ref: '#/definitions/subscriptionsPostRespData'
      object:
        type: string
        x-samplevalue: subscription_item
      plan:
        $ref: '#/definitions/subscriptionsPostRespplan'
      quantity:
        format: int32
        type: integer
        x-samplevalue: 1
      subscription:
        type: string
        x-samplevalue: sub_CpNaULYGcmlc8K
    title: data
    type: object
    x-has-customfields: false
  subscriptionsPostRespcoupon:
    properties:
      amount_off:
        format: int32
        type: integer
        x-samplevalue: 3
      created:
        format: int32
        type: integer
        x-samplevalue: 1517942713
      currency:
        type: string
        x-samplevalue: USD
      duration:
        enum:
        - forever
        - once
        - repeating
        type: string
        x-samplevalue: repeating
      duration_in_months:
        format: int32
        type: integer
        x-samplevalue: 3
      id:
        type: string
        x-samplevalue: 25OFF
      livemode:
        type: boolean
        x-samplevalue: false
      max_redemptions:
        format: int32
        type: integer
        x-samplevalue: 2
      metadata:
        $ref: '#/definitions/couponmetadata'
      object:
        type: string
        x-samplevalue: coupon
      percent_off:
        format: int32
        type: integer
        x-samplevalue: 25
      redeem_by:
        format: int32
        type: integer
        x-samplevalue: 1533784701
      times_redeemed:
        format: int32
        type: integer
        x-samplevalue: 1368
      valid:
        type: boolean
        x-samplevalue: true
    title: coupon
    type: object
    x-has-customfields: false
  subscriptionsPostRespplan:
    properties:
      aggregate_usage:
        enum:
        - sum
        - last_during_peroid
        - last_ever
        - max
        type: string
        x-samplevalue: string
      amount:
        format: int32
        type: integer
        x-samplevalue: 999
      billing_scheme:
        enum:
        - per_unit
        - tired
        type: string
        x-samplevalue: per_unit
      created:
        format: int32
        type: integer
        x-samplevalue: 1525835900
      currency:
        type: string
        x-samplevalue: usd
      id:
        type: string
        x-samplevalue: plan_CpNazPoPr8KskY
      interval:
        enum:
        - day
        - week
        - month
        - year
        type: string
        x-samplevalue: month
      interval_count:
        format: int32
        type: integer
        x-samplevalue: 1
      livemode:
        type: boolean
        x-samplevalue: false
      metadata:
        $ref: '#/definitions/planmetadata'
      name:
        type: string
        x-samplevalue: Diamond Express
      nickname:
        type: string
        x-samplevalue: string
      object:
        type: string
        x-samplevalue: plan
      product:
        type: string
        x-samplevalue: prod_CpNaObgkX24MkU
      statement_descriptor:
        type: string
        x-samplevalue: string
      tiers:
        items:
          $ref: '#/definitions/plantiers'
        type: array
      tiers_mode:
        enum:
        - graduated
        - volume
        type: string
        x-samplevalue: string
      transform_usage:
        $ref: '#/definitions/plantransform_usage_subscription'
      trial_period_days:
        format: int32
        type: integer
        x-samplevalue: 10
      usage_type:
        enum:
        - licensed
        - metered
        type: string
        x-samplevalue: licensed
    title: plan
    type: object
    x-has-customfields: false
  subscriptionspostrespitems:
    properties:
      data:
        items:
          $ref: '#/definitions/subscriptionsPostRespData'
        type: array
      has_more:
        type: boolean
        x-samplevalue: false
      object:
        type: string
        x-samplevalue: list
      total_count:
        format: int32
        type: integer
        x-samplevalue: 1
      url:
        type: string
        x-samplevalue: /v1/subscription_items?subscription=sub_CpNaULYGcmlc8K
    title: items
    type: object
    x-has-customfields: false
  swagger-contacts-path:
    properties:
      post:
        $ref: '#/definitions/swaggerpost'
    title: /contacts
    type: object
    x-has-customfields: false
  swagger200:
    properties:
      description:
        type: string
        x-samplevalue: OK - Everything worked as expected
      schema:
        $ref: '#/definitions/swaggerschema'
    title: '200'
    type: object
    x-has-customfields: false
  swagger400:
    properties:
      description:
        type: string
        x-samplevalue: Bad Request - Often due to a missing request parameter
    title: '400'
    type: object
    x-has-customfields: false
  swagger401:
    properties:
      description:
        type: string
        x-samplevalue: Unauthorized - An invalid element token, user secret and/or org secret provided
    title: '401'
    type: object
    x-has-customfields: false
  swagger403:
    properties:
      description:
        type: string
        x-samplevalue: Forbidden - Access to the resource by the provider is forbidden
    title: '403'
    type: object
    x-has-customfields: false
  swagger404:
    properties:
      description:
        type: string
        x-samplevalue: Not found - The requested resource is not found
    title: '404'
    type: object
    x-has-customfields: false
  swagger405:
    properties:
      description:
        type: string
        x-samplevalue: Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected
    title: '405'
    type: object
    x-has-customfields: false
  swagger406:
    properties:
      description:
        type: string
        x-samplevalue: Not acceptable - The response content type does not match the 'Accept' header value
    title: '406'
    type: object
    x-has-customfields: false
  swagger409:
    properties:
      description:
        type: string
        x-samplevalue: Conflict - If a resource being created already exists
    title: '409'
    type: object
    x-has-customfields: false
  swagger415:
    properties:
      description:
        type: string
        x-samplevalue: Unsupported media type - The server cannot handle the requested Content-Type
    title: '415'
    type: object
    x-has-customfields: false
  swagger500:
    properties:
      description:
        type: string
        x-samplevalue: Server error - Something went wrong on the Cloud Elements server
    title: '500'
    type: object
    x-has-customfields: false
  swagger502:
    properties:
      description:
        type: string
        x-samplevalue: Provider server error - Something went wrong on the Provider or Endpoint's server
    title: '502'
    type: object
    x-has-customfields: false
  swaggerDocs:
    properties:
      basePath:
        type: string
        x-samplevalue: /elements/api-v2/hubs/crm
      definitions:
        $ref: '#/definitions/swaggerdefinitions'
      host:
        type: string
        x-samplevalue: localhost:5050
      info:
        $ref: '#/definitions/swaggerinfo'
      paths:
        $ref: '#/definitions/swaggerpaths'
      schemes:
        items:
          type: string
        type: array
        x-samplevalue:
        - http
      swagger:
        type: string
        x-samplevalue: '2.0'
      tags:
        items:
          $ref: '#/definitions/swaggertags'
        type: array
    title: swaggerDocs
    type: object
    x-has-customfields: false
  swaggercontact:
    properties:
      email:
        type: string
        x-samplevalue: support@cloud-elements.com
    title: contact
    type: object
    x-has-customfields: false
  swaggerdefinition-name:
    properties:
      properties:
        $ref: '#/definitions/swaggerproperties'
    title: definition-name
    type: object
    x-has-customfields: false
  swaggerdefinition-property:
    properties:
      type:
        type: string
        x-samplevalue: string
    title: '#/definitions/definition-property'
    type: object
    x-has-customfields: false
  swaggerdefinitions:
    properties:
      definition-name:
        $ref: '#/definitions/swaggerdefinition-name'
    title: definitions
    type: object
    x-has-customfields: false
  swaggerinfo:
    properties:
      contact:
        $ref: '#/definitions/swaggercontact'
      title:
        type: string
        x-samplevalue: hubspotcrm
      version:
        type: string
        x-samplevalue: api-v2
    title: info
    type: object
    x-has-customfields: false
  swaggerparameters:
    properties:
      description:
        type: string
        x-samplevalue: The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'
      in:
        type: string
        x-samplevalue: header
      name:
        type: string
        x-samplevalue: Authorization
      required:
        type: boolean
        x-samplevalue: true
      schema:
        $ref: '#/definitions/swaggerparametersschema'
      type:
        type: string
        x-samplevalue: string
    title: parameters
    type: object
    x-has-customfields: false
  swaggerparametersschema:
    properties:
      $ref:
        type: string
        x-samplevalue: '#/definitions/Contact'
    title: schema
    type: object
    x-has-customfields: false
  swaggerpaths:
    properties:
      /contacts:
        $ref: '#/definitions/swagger-contacts-path'
    title: paths
    type: object
    x-has-customfields: false
  swaggerpost:
    properties:
      operationId:
        type: string
        x-samplevalue: createContact
      parameters:
        items:
          $ref: '#/definitions/swaggerparameters'
        type: array
      responses:
        $ref: '#/definitions/swaggerresponses'
      summary:
        type: string
        x-samplevalue: Create a new contact in the CRM service. Contact creation will flow through Cloud Elements to your CRM service. With the exception of the 'id' field, the required fields indicated in the 'Contact' model are those required to create a new contact.
      tags:
        items:
          type: string
        type: array
        x-samplevalue:
        - contacts
    title: post
    type: object
    x-has-customfields: false
  swaggerproperties:
    properties:
      definition-property:
        $ref: '#/definitions/swaggerdefinition-property'
    title: properties
    type: object
    x-has-customfields: false
  swaggerresponses:
    properties:
      '200':
        $ref: '#/definitions/swagger200'
      '400':
        $ref: '#/definitions/swagger400'
      '401':
        $ref: '#/definitions/swagger401'
      '403':
        $ref: '#/definitions/swagger403'
      '404':
        $ref: '#/definitions/swagger404'
      '405':
        $ref: '#/definitions/swagger405'
      '406':
        $ref: '#/definitions/swagger406'
      '409':
        $ref: '#/definitions/swagger409'
      '415':
        $ref: '#/definitions/swagger415'
      '500':
        $ref: '#/definitions/swagger500'
      '502':
        $ref: '#/definitions/swagger502'
    title: responses
    type: object
    x-has-customfields: false
  swaggerschema:
    properties:
      $ref:
        type: string
        x-samplevalue: '#/definitions/Contact-POST-Response'
    title: schema
    type: object
    x-has-customfields: false
  swaggertags:
    properties:
      name:
        type: string
        x-samplevalue: contacts
    title: tags
    type: object
    x-has-customfields: false
  tax_info:
    properties:
      tax_id:
        description: The customer�s tax ID number. This will be unset if you POST an empty value
        type: string
      type:
        description: The type of ID number. The only possible value is vat
        enum:
        - vat
        type: string
        x-samplevalue: vat
        x-sub-format: Enum
    required:
    - tax_id
    - type
    type: object
  tax_infoResp:
    properties:
      tax_id:
        description: The customer�s tax ID number. This will be unset if you POST an empty value
        type: string
      type:
        description: The type of ID number. The only possible value is vat
        enum:
        - vat
        type: string
        x-samplevalue: vat
        x-sub-format: Enum
    type: object
  tiers:
    properties:
      amount:
        format: int32
        type: integer
        x-samplevalue: 10
      up_to:
        format: int32
        type: integer
        x-samplevalue: 10
    title: tiers
    type: object
    x-has-customfields: false
  tokens:
    description: Tokenization is the process Stripe uses to collect sensitive card or bank account details, or personally identifiable information (PII), directly from your customers in a secure manner. This ensures that no sensitive card data touches your server, and allows your integration to operate in a PCI-compliant way.
    properties:
      bank_account:
        $ref: '#/definitions/tokensBank_accountResponse'
        description: Hash describing the bank account.
      card:
        $ref: '#/definitions/tokensCardResponse'
        description: Hash describing the card used to make the charge.
      client_ip:
        description: IP address of the client that generated the token.
        type: string
        x-nullable: true
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-sub-format: Date Time Epoch
      id:
        description: Unique identifier for the object.
        type: string
        x-name: true
        x-readOnly: true
      livemode:
        description: Has the value true if the object exists in live mode or the value false if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - token
        type: string
        x-sub-format: Enum
      type:
        description: 'Type of the token: account, bank_account, card, or pii.'
        enum:
        - account
        - bank_account
        - card
        - pii
        type: string
        x-sub-format: Enum
      used:
        description: Whether this token has already been used (tokens can be used only once).
        type: boolean
    type: object
    x-has-customfields: false
    x-primary-key:
    - id
    x-vendor-objectname: tokens
  tokensAccount:
    properties:
      legal_entity:
        $ref: '#/definitions/tokensAccountLegal_entity'
        description: A hash of information about the account. See the legal_entity hash accepted by the account update endpoint for the full set of accepted members.
      tos_shown_and_accepted:
        description: A Boolean value indicating that the user described by the data in the token has been shown the Stripe Connected Account Agreement. When creating an account token to create a new Connect account, this value must be true.
        type: boolean
    required:
    - legal_entity
    type: object
  tokensAccountLegal_entity:
    properties:
      additional_owners:
        $ref: '#/definitions/tokensLegal_entityAdditional_owners'
        description: Information about anyone besides the account representative who owns at least 25% of the legal entity. This field is required only for Singapore, Hong Kong, and SEPA member countries. For details, see our Handling Identity Verification with the API documentation. This can be unset by updating the value to null and then saving.
        x-conditionally-required-description: Any one field is required.
      address:
        $ref: '#/definitions/tokensLegal_entityAddress'
        description: The address of the legal entity (i.e., individual or company).
        x-conditionally-required-description: Any one field is required.
      address_kana:
        $ref: '#/definitions/tokensLegal_entityJapan_Address'
        description: The Kana address variation for the legal entity (Japan only).
        x-conditionally-required-description: Any one field is required.
      address_kanji:
        $ref: '#/definitions/tokensLegal_entityJapan_Address'
        description: The Kanji address variation for the legal entity (Japan only).
        x-conditionally-required-description: Any one field is required.
      business_name:
        description: The legal name of the entity (companies only). This can be unset by updating the value to null and then saving.
        type: string
        x-conditionally-required-description: Any one field is required.
        x-nullable: true
      business_name_kana:
        description: The Kana legal name variation for the company (Japan-based companies only). This can be unset by updating the value to null and then saving.
        type: string
        x-conditionally-required-description: Any one field is required.
        x-nullable: true
      business_name_kanji:
        description: The Kanji legal name variation for the company (Japan-based companies only). This can be unset by updating the value to null and then saving.
        type: string
        x-conditionally-required-description: Any one field is required.
        x-nullable: true
      business_tax_id:
        description: The business ID number of the legal entity (companies only), as appropriate for the company's country. (Examples are an Employer ID Number in the U.S., a Business Number in Canada, or a Company Number in the UK.) This can be unset by updating the value to null and then saving.
        type: string
        x-conditionally-required-description: Any one field is required.
        x-nullable: true
      business_vat_id:
        description: The VAT number of the legal entity (companies only). This can be unset by updating the value to null and then saving.
        type: string
        x-conditionally-required-description: Any one field is required.
        x-nullable: true
      dob:
        $ref: '#/definitions/tokensLegal_entityDob'
        description: The account representative's date of birth. Note that you must provide the entire date of birth at the same time. You cannot, for example, provide only the year without also providing the month and day.
        x-conditionally-required-description: Any one field is required.
      first_name:
        description: The account representative's first name. This can be unset by updating the value to null and then saving.
        type: string
        x-conditionally-required-description: Any one field is required.
        x-nullable: true
        x-sub-format: First Name
      first_name_kana:
        description: The Kana variation of the account representative's first name (Japan only). This can be unset by updating the value to null and then saving.
        type: string
        x-conditionally-required-description: Any one field is required.
        x-nullable: true
        x-sub-format: First Name
      first_name_kanji:
        description: The Kanji variation of the account representative's first name (Japan only). This can be unset by updating the value to null and then saving.
        type: string
        x-conditionally-required-description: Any one field is required.
        x-nullable: true
        x-sub-format: First Name
      gender:
        description: The gender of the account representative. Can be male or female (by international regulations). This can be unset by updating the value to null and then saving.
        enum:
        - male
        - female
        type: string
        x-conditionally-required-description: Any one field is required.
        x-sub-format: Gender
      last_name:
        description: The account representative's last name. This can be unset by updating the value to null and then saving.
        type: string
        x-conditionally-required-description: Any one field is required.
        x-nullable: true
        x-sub-format: Last Name
      last_name_kana:
        description: The Kana varation of the account representative's last name (Japan only). This can be unset by updating the value to null and then saving.
        type: string
        x-conditionally-required-description: Any one field is required.
        x-nullable: true
        x-sub-format: Last Name
      last_name_kanji:
        description: The Kanji varation of the account representative's last name (Japan only). This can be unset by updating the value to null and then saving.
        type: string
        x-conditionally-required-description: Any one field is required.
        x-nullable: true
        x-sub-format: Last Name
      maiden_name:
        description: The account representative's maiden name. This can be unset by updating the value to null and then saving.
        type: string
        x-conditionally-required-description: Any one field is required.
        x-nullable: true
      personal_address:
        $ref: '#/definitions/tokensLegal_entityAddress'
        description: The account representative's personal address, used for verification.
        x-conditionally-required-description: Any one field is required.
      personal_address_kana:
        $ref: '#/definitions/tokensLegal_entityJapan_Address'
        description: The Kana address variation for the account representative, used for verification (Japan only).
        x-conditionally-required-description: Any one field is required.
      personal_address_kanji:
        $ref: '#/definitions/tokensLegal_entityJapan_Address'
        description: The Kanji address variation for the account representative, used for verification (Japan only).
        x-conditionally-required-description: Any one field is required.
      personal_id_number:
        description: The government-issued ID number of the account representative, as appropriate for the representative's country. (Examples are a Social Security Number in the U.S., or a Social Insurance Number in Canada). Instead of the number itself, you can also provide a PII token created with Stripe.js. This can be unset by updating the value to null and then saving.
        type: string
        x-conditionally-required-description: Any one field is required.Cannot provide both personal_id_number and ssn_last_4 unless they match
        x-nullable: true
      phone_number:
        description: The legal entity's phone number, used for verification. This can be unset by updating the value to null and then saving.
        type: string
        x-conditionally-required-description: Any one field is required.
        x-nullable: true
        x-sub-format: Phone
      ssn_last_4:
        description: The last four digits of the account representative's Social Security Number (U.S. only). This can be unset by updating the value to null and then saving.
        type: string
        x-conditionally-required-description: Any one field is required.Cannot provide both personal_id_number and ssn_last_4 unless they match
      tax_id_registrar:
        description: The jurisdiction in which the business_tax_id is registered (Germany-based companies only). This can be unset by updating the value to null and then saving.
        type: string
        x-conditionally-required-description: Any one field is required.
        x-nullable: true
      type:
        description: The legal entity type. Can be individual or company.
        enum:
        - individual
        - company
        type: string
        x-conditionally-required-description: Any one field is required.
        x-sub-format: Enum
      verification:
        $ref: '#/definitions/tokensLegal_entityVerification'
        description: Information on the verification state of the account representative.
        x-conditionally-required-description: Any one field is required.
    type: object
  tokensBank_account:
    properties:
      account_holder_name:
        description: The name of the person or business owning the bank account. This field is required when attaching the bank account to a Customer object.
        type: string
        x-conditionally-required-description: This field is required when attaching the bank account to a Customer object.
        x-nullable: true
        x-sub-format: Full Name
      account_holder_type:
        description: The type of entity holding the account. This can be either individual or company. This field is required when attaching the bank account to a Customer object.
        enum:
        - individual
        - company
        type: string
        x-conditionally-required-description: This field is required when attaching the bank account to a Customer object.
        x-nullable: true
        x-sub-format: Enum
      account_number:
        description: The bank account number, in string form. Must be a checking account.
        type: string
      country:
        description: The country in which the bank account is located.
        enum:
        - AU
        - AT
        - BE
        - BR
        - CA
        - DK
        - FI
        - FR
        - DE
        - HK
        - IE
        - IT
        - JP
        - LU
        - MX
        - NL
        - NZ
        - 'NO'
        - PT
        - SG
        - ES
        - SE
        - CH
        - GB
        - US
        type: string
        x-sub-format: Country Code
      currency:
        description: The bank account's currency. This must be a country-and-currency pairing that Stripe supports.
        enum:
        - aud
        - eur
        - dkk
        - gbp
        - nok
        - sek
        - usd
        - chf
        - brl
        - cad
        - hkd
        - jpy
        - mxn
        - nzd
        - sgd
        type: string
        x-sub-format: Currency Code
      routing_number:
        description: The routing number, sort code, or other country-appropriate institution number for the bank account. For US bank accounts, this is required and should be the ACH routing number, not the wire routing number. If you are providing an IBAN for account_number, this field is not required.
        type: string
        x-conditionally-required-description: For US bank accounts, this is required and should be the ACH routing number, not the wire routing number.
        x-nullable: true
    required:
    - account_number
    - country
    - currency
    type: object
  tokensBank_accountResponse:
    properties:
      account_holder_name:
        description: The name of the person or business that owns the bank account.
        type: string
        x-nullable: true
        x-sub-format: Full Name
      account_holder_type:
        description: The type of entity that holds the account. This can be either individual or company.
        enum:
        - individual
        - company
        type: string
        x-nullable: true
        x-sub-format: Enum
      bank_name:
        description: Name of the bank associated with the routing number (e.g., WELLS FARGO).
        type: string
        x-nullable: true
      country:
        description: Two-letter ISO code representing the country the bank account is located in.
        enum:
        - AU
        - AT
        - BE
        - BR
        - CA
        - DK
        - FI
        - FR
        - DE
        - HK
        - IE
        - IT
        - JP
        - LU
        - MX
        - NL
        - NZ
        - 'NO'
        - PT
        - SG
        - ES
        - SE
        - CH
        - GB
        - US
        type: string
        x-sub-format: Country Code
      currency:
        description: Three-letter ISO code for the currency paid out to the bank account.
        enum:
        - aud
        - eur
        - dkk
        - gbp
        - nok
        - sek
        - usd
        - chf
        - brl
        - cad
        - hkd
        - jpy
        - mxn
        - nzd
        - sgd
        type: string
        x-sub-format: Currency Code
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
        type: string
        x-nullable: true
      id:
        description: Unique identifier for the object.
        type: string
      last4:
        type: string
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - bank_account
        type: string
        x-sub-format: Enum
      routing_number:
        description: The routing transit number for the bank account.
        type: string
        x-nullable: true
      status:
        description: Possible values are new, validated, verified, verification_failed, or errored. A bank account that hasn't had any activity or validation performed is new. If Stripe can determine that the bank account exists, its status will be validated. Note that there often isn't enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be verified. If the verification failed for any reason, such as microdeposit failure, the status will be verification_failed. If a transfer sent to this bank account fails, we'll set the status to errored and will not continue to send transfers until the bank details are updated.
        enum:
        - new
        - validated
        - verified
        - verification_failed
        - errored
        type: string
        x-sub-format: Enum
    type: object
  tokensCard:
    properties:
      address_city:
        description: City/District/Suburb/Town/Village.
        type: string
        x-nullable: true
        x-sub-format: City
      address_country:
        description: Billing address country
        type: string
        x-nullable: true
        x-sub-format: Country
      address_line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-nullable: true
        x-sub-format: Street Address
      address_line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
        x-nullable: true
        x-sub-format: Street Address
      address_state:
        description: State/County/Province/Region.
        type: string
        x-nullable: true
        x-sub-format: State
      address_zip:
        description: ZIP or postal code.
        type: string
        x-nullable: true
        x-sub-format: Postal Code
      currency:
        description: Required in order to add the card to an account; in all other cases, this parameter is not used. When added to an account, the card (which must be a debit card) can be used as a transfer destination for funds in this currency.
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-sub-format: Currency Code
      cvc:
        description: Card security code. Highly recommended to always include this value, but it's required only for accounts based in European countries.
        type: string
        x-conditionally-required-description: It's required only for accounts based in European countries.
      exp_month:
        description: Two-digit number representing the card's expiration month.
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        format: int32
        type: integer
      exp_year:
        description: Two- or four-digit number representing the card's expiration year.
        format: int32
        type: integer
      name:
        description: Cardholder's full name.
        type: string
        x-nullable: true
        x-sub-format: Full Name
      number:
        description: The card number, as a string without any separators.
        type: string
    required:
    - exp_month
    - exp_year
    - number
    type: object
    x-has-customfields: true
  tokensCardResponse:
    properties:
      address_city:
        description: City/District/Suburb/Town/Village
        type: string
        x-nullable: true
        x-sub-format: City
      address_country:
        description: Billing address country, if provided when creating card.
        type: string
        x-nullable: true
        x-sub-format: Country
      address_line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
        x-nullable: true
        x-sub-format: Street Address
      address_line1_check:
        description: 'If address_line1 was provided, results of the check: pass, fail,
          unavailable, or unchecked.'
        enum:
        - pass
        - fail
        - unavailable
        - unchecked
        type: string
        x-nullable: true
        x-sub-format: Enum
      address_line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
        x-nullable: true
        x-sub-format: Street Address
      address_state:
        description: State/County/Province/Region.
        type: string
        x-nullable: true
        x-sub-format: State
      address_zip:
        description: ZIP or postal code.
        type: string
        x-nullable: true
        x-sub-format: Postal Code
      address_zip_check:
        description: 'If address_zip was provided, results of the check: pass, fail,
          unavailable, or unchecked.'
        enum:
        - pass
        - fail
        - unavailable
        - unchecked
        type: string
        x-nullable: true
        x-sub-format: Enum
      brand:
        description: Card brand. Can be American Express, Diners Club, Discover, JCB, MasterCard, UnionPay, Visa, or Unknown.
        enum:
        - American Express
        - Diners Club
        - Discover
        - JCB
        - MasterCard
        - UnionPay
        - Visa
        - Unknown
        type: string
        x-sub-format: Enum
      country:
        description: Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.
        type: string
        x-nullable: true
        x-sub-format: Country Code
      currency:
        description: Three-letter ISO currency code, in lowercase. Must be a supported currency.
        enum:
        - usd
        - aed
        - afn
        - all
        - amd
        - ang
        - aoa
        - ars
        - aud
        - awg
        - azn
        - bam
        - bbd
        - bdt
        - bgn
        - bif
        - bmd
        - bnd
        - bob
        - brl
        - bsd
        - bwp
        - bzd
        - cad
        - cdf
        - chf
        - clp
        - cny
        - cop
        - crc
        - cve
        - czk
        - djf
        - dkk
        - dop
        - dzd
        - egp
        - etb
        - eur
        - fjd
        - fkp
        - gbp
        - gel
        - gip
        - gmd
        - gnf
        - gtq
        - gyd
        - hkd
        - hnl
        - hrk
        - htg
        - huf
        - idr
        - ils
        - inr
        - isk
        - jmd
        - jpy
        - kes
        - kgs
        - khr
        - kmf
        - krw
        - kyd
        - kzt
        - lak
        - lbp
        - lkr
        - lrd
        - lsl
        - mad
        - mdl
        - mga
        - mkd
        - mmk
        - mnt
        - mop
        - mro
        - mur
        - mvr
        - mwk
        - mxn
        - myr
        - mzn
        - nad
        - ngn
        - nio
        - nok
        - npr
        - nzd
        - pab
        - pen
        - pgk
        - php
        - pkr
        - pln
        - pyg
        - qar
        - ron
        - rsd
        - rub
        - rwf
        - sar
        - sbd
        - scr
        - sek
        - sgd
        - shp
        - sll
        - sos
        - srd
        - std
        - svc
        - szl
        - thb
        - tjs
        - top
        - try
        - ttd
        - twd
        - tzs
        - uah
        - ugx
        - uyu
        - uzs
        - vnd
        - vuv
        - wst
        - xaf
        - xcd
        - xof
        - xpf
        - yer
        - zar
        - zmw
        - eek
        - lvl
        - vef
        type: string
        x-sub-format: Currency Code
      cvc_check:
        description: 'If a CVC was provided, results of the check: pass, fail, unavailable,
          or unchecked.'
        enum:
        - pass
        - fail
        - unavailable
        - unchecked
        type: string
        x-nullable: true
        x-sub-format: Enum
      dynamic_last4:
        description: (For tokenized numbers only.) The last four digits of the device account number.
        type: string
        x-nullable: true
      exp_month:
        description: Two-digit number representing the card's expiration month.
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        format: int32
        type: integer
      exp_year:
        description: Four-digit number representing the card's expiration year.
        format: int32
        type: integer
      fingerprint:
        description: Uniquely identifies this particular card number. You can use this attribute to check whether two customers who've signed up with you are using the same card number, for example.
        type: string
        x-nullable: true
      funding:
        description: Card funding type. Can be credit, debit, prepaid, or unknown.
        enum:
        - credit
        - debit
        - prepaid
        - unknown.
        type: string
        x-sub-format: Enum
      id:
        description: Unique identifier for the object.
        type: string
      last4:
        description: The last four digits of the card.
        type: string
      metadata:
        $ref: '#/definitions/tokensMetadataResponse'
        description: Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
      name:
        description: Cardholder name.
        type: string
        x-nullable: true
        x-sub-format: Full Name
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - card
        type: string
        x-sub-format: Enum
      tokenization_method:
        description: If the card number is tokenized, this is the method that was used. Can be apple_pay or android_pay.
        enum:
        - apple_pay
        - android_pay
        type: string
        x-nullable: true
        x-sub-format: Enum
    type: object
    x-has-customfields: true
  tokensLegal_entityAdditional_owners:
    properties:
      '0':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '1':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '10':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '11':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '12':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '13':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '14':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '15':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '16':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '17':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '18':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '19':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '2':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '20':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '21':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '22':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '23':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '24':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '25':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '26':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '27':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '28':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '29':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '3':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '30':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '4':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '5':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '6':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '7':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '8':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
      '9':
        $ref: '#/definitions/tokensLegal_entityAdditional_ownersProperties'
    type: object
  tokensLegal_entityAdditional_ownersProperties:
    properties:
      address:
        $ref: '#/definitions/tokensLegal_entityAddress'
        description: The personal address of the owner, used for verification.
      dob:
        $ref: '#/definitions/tokensLegal_entityDob'
        description: The Owner's date of birth. Note that you must provide the entire date of birth at the same time. You cannot, for example, provide only the year without also providing month and day.
      first_name:
        description: The Owner's first name. This can be unset by updating the value to null and then saving.
        type: string
        x-nullable: true
        x-sub-format: First Name
      last_name:
        description: The Owner's last name. This can be unset by updating the value to null and then saving.
        type: string
        x-nullable: true
        x-sub-format: Last Name
      maiden_name:
        description: The Owner's maiden name. This can be unset by updating the value to null and then saving.
        type: string
        x-nullable: true
      personal_id_number:
        description: The government-issued ID number for the owner, as appropriate for the Owner's country. (Examples are a Social Security Number in the U.S., or a Social Insurance Number in Canada.) This can be unset by updating the value to null and then saving.
        type: string
        x-nullable: true
      verification:
        $ref: '#/definitions/tokensLegal_entityVerification'
        description: Information on the verification state of the owner, including what information is needed and by when.
    type: object
  tokensLegal_entityAddress:
    properties:
      city:
        description: City, district, suburb, town, or village. This can be unset by updating the value to null and then saving.
        type: string
        x-nullable: true
        x-sub-format: City
      country:
        description: Two-letter country code. This can be unset by updating the value to null and then saving.
        enum:
        - AD
        - AE
        - AF
        - AG
        - AI
        - AL
        - AM
        - AO
        - AQ
        - AR
        - AS
        - AT
        - AU
        - AW
        - AX
        - AZ
        - BA
        - BB
        - BD
        - BE
        - BF
        - BG
        - BH
        - BI
        - BJ
        - BL
        - BM
        - BN
        - BO
        - BQ
        - BR
        - BS
        - BT
        - BV
        - BW
        - BY
        - BZ
        - CA
        - CC
        - CD
        - CF
        - CG
        - CH
        - CI
        - CK
        - CL
        - CM
        - CN
        - CO
        - CR
        - CU
        - CV
        - CW
        - CX
        - CY
        - CZ
        - DE
        - DJ
        - DK
        - DM
        - DO
        - DZ
        - EC
        - EE
        - EG
        - EH
        - ER
        - ES
        - ET
        - FI
        - FJ
        - FK
        - FM
        - FO
        - FR
        - GA
        - GB
        - GD
        - GE
        - GF
        - GG
        - GH
        - GI
        - GL
        - GM
        - GN
        - GP
        - GQ
        - GR
        - GS
        - GT
        - GU
        - GW
        - GY
        - HK
        - HM
        - HN
        - HR
        - HT
        - HU
        - ID
        - IE
        - IL
        - IM
        - IN
        - IO
        - IQ
        - IR
        - IS
        - IT
        - JE
        - JM
        - JO
        - JP
        - KE
        - KG
        - KH
        - KI
        - KM
        - KN
        - KP
        - KR
        - KW
        - KY
        - KZ
        - LA
        - LB
        - LC
        - LI
        - LK
        - LR
        - LS
        - LT
        - LU
        - LV
        - LY
        - MA
        - MC
        - MD
        - ME
        - MF
        - MG
        - MH
        - MK
        - ML
        - MM
        - MN
        - MO
        - MP
        - MQ
        - MR
        - MS
        - MT
        - MU
        - MV
        - MW
        - MX
        - MY
        - MZ
        - NA
        - NC
        - NE
        - NF
        - NG
        - NI
        - NL
        - 'NO'
        - NP
        - NR
        - NU
        - NZ
        - OM
        - PA
        - PE
        - PF
        - PG
        - PH
        - PK
        - PL
        - PM
        - PN
        - PR
        - PS
        - PT
        - PW
        - PY
        - QA
        - RE
        - RO
        - RS
        - RU
        - RW
        - SA
        - SB
        - SC
        - SD
        - SE
        - SG
        - SH
        - SI
        - SJ
        - SK
        - SL
        - SM
        - SN
        - SO
        - SR
        - SS
        - ST
        - SV
        - SX
        - SY
        - SZ
        - TC
        - TD
        - TF
        - TG
        - TH
        - TJ
        - TK
        - TL
        - TM
        - TN
        - TO
        - TR
        - TT
        - TV
        - TW
        - TZ
        - UA
        - UG
        - UM
        - US
        - UY
        - UZ
        - VA
        - VC
        - VE
        - VG
        - VI
        - VN
        - VU
        - WF
        - WS
        - YE
        - YT
        - ZA
        - ZM
        - ZW
        type: string
        x-sub-format: Country Code
      line1:
        description: Address line 1 (e.g., street, PO Box, or company name). This can be unset by updating the value to null and then saving.
        type: string
        x-nullable: true
        x-sub-format: Street Address
      line2:
        description: Address line 2 (e.g., apartment, suite, unit, or building). This can be unset by updating the value to null and then saving.
        type: string
        x-nullable: true
        x-sub-format: Street Address
      postal_code:
        description: ZIP or postal code. This can be unset by updating the value to null and then saving.
        type: string
        x-nullable: true
        x-sub-format: Postal Code
      state:
        description: State, county, province, or region. This can be unset by updating the value to null and then saving.
        type: string
        x-nullable: true
        x-sub-format: State
    type: object
  tokensLegal_entityDob:
    properties:
      day:
        description: The day of birth, between 1 and 31
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
        - 31
        format: int32
        type: integer
      month:
        description: The month of birth, between 1 and 12
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        format: int32
        type: integer
      year:
        description: The four-digit year of birth
        format: int32
        type: integer
    required:
    - day
    - month
    - year
    type: object
  tokensLegal_entityJapan_Address:
    properties:
      city:
        description: City or ward. This can be unset by updating the value to null and then saving.
        type: string
        x-sub-format: City
      country:
        default: JP
        description: Two-letter country code. This can be unset by updating the value to null and then saving.
        enum:
        - JP
        type: string
        x-sub-format: Country Code
      line1:
        description: Block or building number. This can be unset by updating the value to null and then saving.
        type: string
        x-nullable: true
        x-sub-format: Street Address
      line2:
        description: Building details. This can be unset by updating the value to null and then saving.
        type: string
        x-nullable: true
        x-sub-format: Street Address
      postal_code:
        description: Postal code. This can be unset by updating the value to null and then saving.
        type: string
        x-nullable: true
        x-sub-format: Postal Code
      state:
        description: Prefecture. This can be unset by updating the value to null and then saving.
        type: string
        x-sub-format: State
      town:
        description: Town or cho-me. This can be unset by updating the value to null and then saving.
        type: string
    type: object
  tokensLegal_entityVerification:
    properties:
      document:
        description: An ID returned by a file upload with a purpose value of identity_document. This can be unset by updating the value to null and then saving.
        type: string
        x-nullable: true
    type: object
  tokensMetadataResponse:
    properties: {}
    type: object
  tokensPii:
    properties:
      personal_id_number:
        description: The personal_id_number for the PII, in string form.
        type: string
        x-nullable: true
    required:
    - personal_id_number
    type: object
  tokensPost:
    description: Tokenization is the process Stripe uses to collect sensitive card or bank account details, or personally identifiable information (PII), directly from your customers in a secure manner. This ensures that no sensitive card data touches your server, and allows your integration to operate in a PCI-compliant way.
    properties:
      account:
        $ref: '#/definitions/tokensAccount'
        description: The account information to be stored in this token.
        x-conditionally-required-description: 'You must supply either a card, customer,
          PII data, bank account, or account legal entity to create a token. If you''re
          making this request with a library, be sure to pass all of the required
          parameters for creating a token. If you''re making this request manually,
          be sure your POST parameters begin with the token type. For example, a PII
          token would require `pii[personal_id_number]`, while an account token would
          require a parameter beginning with `account[legal_entity]`. See the API
          reference for more information: https://stripe.com/docs/api#token_object'
      bank_account:
        $ref: '#/definitions/tokensBank_account'
        description: The bank account this token will represent.
        x-conditionally-required-description: 'You must supply either a card, customer,
          PII data, bank account, or account legal entity to create a token. If you''re
          making this request with a library, be sure to pass all of the required
          parameters for creating a token. If you''re making this request manually,
          be sure your POST parameters begin with the token type. For example, a PII
          token would require `pii[personal_id_number]`, while an account token would
          require a parameter beginning with `account[legal_entity]`. See the API
          reference for more information: https://stripe.com/docs/api#token_object'
      card:
        $ref: '#/definitions/tokensCard'
        description: The card this token will represent. If you also pass in a customer, the card must be the ID of a card belonging to the customer. Otherwise, if you do not pass in a customer, this is a dictionary containing a user's credit card details, with the options described below.
        x-conditionally-required-description: 'You must supply either a card, customer,
          PII data, bank account, or account legal entity to create a token. If you''re
          making this request with a library, be sure to pass all of the required
          parameters for creating a token. If you''re making this request manually,
          be sure your POST parameters begin with the token type. For example, a PII
          token would require `pii[personal_id_number]`, while an account token would
          require a parameter beginning with `account[legal_entity]`. See the API
          reference for more information: https://stripe.com/docs/api#token_object'
      customer:
        description: The customer (owned by the application's account) for which to create a token. For use only with Stripe Connect. Also, this can be used only with an OAuth access token or Stripe-Account header. For more details, see Shared Customers.
        type: string
        x-reference-objectname: customers
      pii:
        $ref: '#/definitions/tokensPii'
        description: The PII this token will represent.
        x-conditionally-required-description: 'You must supply either a card, customer,
          PII data, bank account, or account legal entity to create a token. If you''re
          making this request with a library, be sure to pass all of the required
          parameters for creating a token. If you''re making this request manually,
          be sure your POST parameters begin with the token type. For example, a PII
          token would require `pii[personal_id_number]`, while an account token would
          require a parameter beginning with `account[legal_entity]`. See the API
          reference for more information: https://stripe.com/docs/api#token_object'
    type: object
    x-has-customfields: false
    x-vendor-objectname: tokens
  tokensPostResponse:
    description: Tokenization is the process Stripe uses to collect sensitive card or bank account details, or personally identifiable information (PII), directly from your customers in a secure manner. This ensures that no sensitive card data touches your server, and allows your integration to operate in a PCI-compliant way.
    properties:
      bank_account:
        $ref: '#/definitions/tokensBank_accountResponse'
        description: Hash describing the bank account.
      card:
        $ref: '#/definitions/tokensCardResponse'
        description: Hash describing the card used to make the charge.
      client_ip:
        description: IP address of the client that generated the token.
        type: string
        x-nullable: true
      created:
        description: Time at which the object was created. Measured in seconds since the Unix epoch.
        format: int64
        type: integer
        x-mask: milliseconds
        x-readOnly: true
        x-sub-format: Date Time Epoch
      id:
        description: Unique identifier for the object.
        type: string
        x-name: true
        x-readOnly: true
      livemode:
        description: Has the value true if the object exists in live mode or the value false if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type share the same value.
        enum:
        - token
        type: string
        x-sub-format: Enum
      type:
        description: 'Type of the token: account, bank_account, card, or pii.'
        enum:
        - account
        - bank_account
        - card
        - pii
        type: string
        x-sub-format: Enum
      used:
        description: Whether this token has already been used (tokens can be used only once).
        type: boolean
    type: object
    x-has-customfields: false
    x-primary-key:
    - id
    x-vendor-objectname: tokens
  transactions:
    properties:
      amount:
        format: int32
        type: integer
        x-samplevalue: 150
      available_on:
        format: int32
        type: integer
        x-samplevalue: 1521763200
      created:
        format: int32
        type: integer
        x-samplevalue: 1521178205
      currency:
        type: string
        x-samplevalue: usd
      description:
        type: string
        x-samplevalue: Application fee from application CloudElements for ven-test@gmail.com (acct_1C60bWAaQjfDD77K)
      exchange_rate:
        format: double
        type: number
      fee:
        format: int32
        type: integer
        x-samplevalue: 0
      fee_details:
        items:
          $ref: '#/definitions/transactionsFeeDetails'
        type: array
      id:
        type: string
        x-readOnly: true
        x-samplevalue: txn_1C6B8jGdZbyQGmEetN53ZDdd
      net:
        format: int32
        type: integer
        x-samplevalue: 150
      object:
        type: string
        x-samplevalue: balance_transaction
      source:
        type: string
        x-samplevalue: fee_1C6B8jAaQjfDD77K8Mn9JsaP
      sourced_transfers:
        $ref: '#/definitions/transactionsSourced_transfers'
      status:
        type: string
        x-readOnly: true
        x-samplevalue: pending
      type:
        type: string
        x-samplevalue: application_fee
    title: transactions
    type: object
    x-has-customfields: false
    x-primary-key:
    - id
    x-vendor-objectname: balance
  transactionsFeeDetails:
    properties:
      amount:
        format: int32
        type: integer
      application:
        type: string
      currency:
        type: string
      description:
        type: string
      type:
        type: string
    type: object
  transactionsSourced_transfers:
    properties:
      data:
        items:
          $ref: '#/definitions/transactionsSourced_transfersData'
        type: array
      has_more:
        type: boolean
        x-samplevalue: false
      object:
        type: string
        x-samplevalue: list
      total_count:
        format: int32
        type: integer
        x-samplevalue: 0
      url:
        type: string
        x-samplevalue: /v1/transfers?source_transaction=fee_1C6B8jAaQjfDD77K8Mn9JsaP
    title: transactionsSourced_transfers
    type: object
    x-has-customfields: false
  transactionsSourced_transfersData:
    properties:
      address_line1_check:
        type: string
        x-nullable: true
      address_zip_check:
        type: string
        x-nullable: true
      brand:
        type: string
        x-nullable: true
      card_automatically_updated:
        type: boolean
      country:
        type: string
        x-nullable: true
      cvc_check:
        type: string
        x-nullable: true
      dynamic_last4:
        type: string
        x-nullable: true
      exp_month:
        format: int32
        type: integer
        x-nullable: true
      exp_year:
        format: int32
        type: integer
        x-nullable: true
      fingerprint:
        type: string
      funding:
        type: string
        x-nullable: true
      last4:
        type: string
        x-nullable: true
      skip_validation:
        type: boolean
      three_d_secure:
        type: string
      tokenization_method:
        type: string
        x-nullable: true
    title: transactionsSourced_transfersData
    type: object
  transfers:
    properties:
      amount:
        format: int32
        type: integer
      amount_reversed:
        format: int32
        type: integer
      balance_transaction:
        type: string
      created:
        format: int32
        type: integer
      currency:
        type: string
      date:
        format: int32
        type: integer
      description:
        type: string
      destination:
        type: string
      destination_payment:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      object:
        type: string
      reversals:
        $ref: '#/definitions/reversals'
      reversed:
        type: boolean
      source_type:
        type: string
      status:
        type: string
      type:
        type: string
    type: object
    x-primary-key:
    - id
  transfersListObject:
    properties:
      amount:
        format: int32
        type: integer
      amount_reversed:
        format: int32
        type: integer
      balance_transaction:
        type: string
      created:
        format: int32
        type: integer
      currency:
        type: string
      date:
        format: int32
        type: integer
      description:
        type: string
      destination:
        type: string
      destination_payment:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      object:
        type: string
      reversals:
        $ref: '#/definitions/reversals'
      reversed:
        type: boolean
      source_type:
        type: string
      status:
        type: string
      type:
        type: string
    type: object
    x-primary-key:
    - id
  transfersPatch:
    properties:
      amount:
        format: int32
        type: integer
      currency:
        type: string
      destination:
        type: string
      id:
        type: string
    required:
    - amount
    - currency
    - destination
    type: object
    x-primary-key:
    - id
  transfersPatchResp:
    properties:
      amount:
        format: int32
        type: integer
      amount_reversed:
        format: int32
        type: integer
      balance_transaction:
        type: string
      created:
        format: int32
        type: integer
      currency:
        type: string
      date:
        format: int32
        type: integer
      description:
        type: string
      destination:
        type: string
      destination_payment:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      object:
        type: string
      reversals:
        $ref: '#/definitions/reversals'
      reversed:
        type: boolean
      source_type:
        type: string
      status:
        type: string
      type:
        type: string
    required:
    - amount
    - currency
    - destination
    type: object
    x-primary-key:
    - id
  transfersPost:
    properties:
      amount:
        format: int32
        type: integer
      currency:
        type: string
      destination:
        type: string
      id:
        type: string
    required:
    - amount
    - currency
    - destination
    type: object
    x-primary-key:
    - id
  transfersPostResp:
    properties:
      amount:
        format: int32
        type: integer
      amount_reversed:
        format: int32
        type: integer
      balance_transaction:
        type: string
      created:
        format: int32
        type: integer
      currency:
        type: string
      date:
        format: int32
        type: integer
      description:
        type: string
      destination:
        type: string
      destination_payment:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      object:
        type: string
      reversals:
        $ref: '#/definitions/reversals'
      reversed:
        type: boolean
      source_type:
        type: string
      status:
        type: string
      type:
        type: string
    required:
    - amount
    - currency
    - destination
    type: object
    x-primary-key:
    - id
  transform_usage:
    properties:
      divided_by:
        format: int32
        type: integer
        x-samplevalue: 10
      round:
        type: string
        x-samplevalue: up
    title: transform_usage
    type: object
    x-has-customfields: false
swagger: '2.0'
info:
  title: stripe
  version: api-v2
  description: Add a Stripe Instance to connect your existing Stripe Enterprise account to the Payments Hub, allowing you to manage your customers, plans, charges, tokens, products etc. across multiple Payments Elements. You will need your Stripe Enterprise account information to add an instance.
tags:
- name: subscriptions
- name: ping
- name: objects
- name: transactions
- name: refunds
- name: products
- name: balances
- name: charges
- name: plans
- name: transfers
- name: objectName
- name: tokens
- name: orders
- name: customers
- name: bulk
x-sap-api-type: REST
